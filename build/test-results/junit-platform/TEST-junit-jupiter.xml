<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JUnit Jupiter" tests="3471" skipped="2" failures="0" errors="0" time="125.315" hostname="xand-laptop" timestamp="2018-06-26T10:59:10">
<properties>
<property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
<property name="file.encoding" value="UTF-8"/>
<property name="file.encoding.pkg" value="sun.io"/>
<property name="file.separator" value="/"/>
<property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
<property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
<property name="java.class.path" value="/home/xand/Desktop/jabrefES2/build/classes/java/test:/home/xand/Desktop/jabrefES2/build/resources/test:/home/xand/Desktop/jabrefES2/build/classes/java/main:/home/xand/Desktop/jabrefES2/build/resources/main:/home/xand/Desktop/jabrefES2/lib/spin.jar:/home/xand/Desktop/jabrefES2/lib/AppleJavaExtensions.jar:/home/xand/Desktop/jabrefES2/lib/customjfx-1.0.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.jgoodies/jgoodies-forms/1.9.0/eda960be2f88d47d14a81b742772b07684abc7d0/jgoodies-forms-1.9.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.jgoodies/jgoodies-common/1.8.1/dffc159cf71bde5dcbb65916305684f6b43d45b1/jgoodies-common-1.8.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.pdfbox/pdfbox/2.0.9/d0425578218624388f2ec84a0b3a11efd55df0f5/pdfbox-2.0.9.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.pdfbox/fontbox/2.0.9/f961f17ebdbc307e9055e3cf7c0e207f0895ae55/fontbox-2.0.9.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.pdfbox/xmpbox/2.0.9/b406a2931213661cbbc308f8cfacd8fb6f763753/xmpbox-2.0.9.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk15on/1.59/2507204241ab450456bdb8e8c0a8f986e418bd99/bcprov-jdk15on-1.59.jar:/home/xand/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.4/c51c00206bb913cd8612b24abd9fa98ae89719b1/commons-cli-1.4.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.libreoffice/juh/5.4.2/d646e7c4f41b3d4a59f4aeaa1afd6ac8a7f7ed55/juh-5.4.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.libreoffice/jurt/5.4.2/7ec2894c5328809631061a061c8345d743a463f2/jurt-5.4.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.libreoffice/ridl/5.4.2/b5e016320589723cafc98fc7151dd07af6067fe/ridl-5.4.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.libreoffice/unoil/5.4.2/668ec722252b9b922d2aa1aefd27ea998fbf4ada/unoil-5.4.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.github.bkromhout/java-diff-utils/2.1.1/c03cbc3132a86e1f0ca9fce4245c5e82ca8bf4b3/java-diff-utils-2.1.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/info.debatty/java-string-similarity/1.1.0/5da6aca99c0f4cb218188d01e13d663570a4e8ce/java-string-similarity-1.1.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.antlr/antlr-runtime/3.5.2/cd9cd41361c155f3af0f653009dcecb08d8b4afd/antlr-runtime-3.5.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/de.undercouch/citeproc-java/1.0.1/8b812539afb29e49dc22ed410dc448452fb5d71e/citeproc-java-1.0.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.github.tomakehurst/wiremock/2.17.0/5c370ecaee5e2a6d87bdba919056d9f5de11eeb7/wiremock-2.17.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.github.jknack/handlebars-helpers/4.0.6/6aeaf8f563939982e451576323f95d3a8eb2b49b/handlebars-helpers-4.0.6.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.github.jknack/handlebars/4.0.6/ccf00179b6648523e5c64b9b5fb783d89e42401b/handlebars-4.0.6.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.7.1/946f8aa9daa917dd81a8b818111bec7e288f821a/antlr4-runtime-4.7.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/mysql/mysql-connector-java/5.1.46/9a3e63b387e376364211e96827bc27db8d7a92e9/mysql-connector-java-5.1.46.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.impossibl.pgjdbc-ng/pgjdbc-ng/0.7.1/1db63f5c47cdc6ac0f1c8a0407022083c0c43313/pgjdbc-ng-0.7.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/net.java.dev.glazedlists/glazedlists_java15/1.9.1/3ec96aff6b7addc9a2f0f82eca7147613142e45/glazedlists_java15-1.9.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.reflections/reflections/0.9.11/23bba0ff497ec61fbca967d9b641c7681a71edb3/reflections-0.9.11.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/24.1-jre/96c528475465aeb22cce60605d230a7e67cebd7b/guava-24.1-jre.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.airhacks/afterburner.fx/1.7.0/c726ffe8a4d9825b02a22653f8672612a008df25/afterburner.fx-1.7.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/de.codecentric.centerdevice/javafxsvg/1.3.0/b590604fe5639f9900857e9d58fea33936902bd4/javafxsvg-1.3.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/de.jensd/fontawesomefx-materialdesignfont/1.7.22-4/750b7bfd078ad646db36a3af4d088a4c121ed838/fontawesomefx-materialdesignfont-1.7.22-4.jar:/home/xand/.gradle/caches/modules-2/files-2.1/de.saxsys/mvvmfx-validation/1.7.0/dadaebfcc83a013212ede2abfbcb50833b5e48e8/mvvmfx-validation-1.7.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.fxmisc.easybind/easybind/1.0.3/336c8226dfa775c714bc8c3410a1565feffcfb34/easybind-1.0.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.fxmisc.richtext/richtextfx/0.9.0/59631394f04aec6b5031a74091f72d0c3767399b/richtextfx-0.9.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.fxmisc.flowless/flowless/0.6.1/d0794811efbc07d247de681ee0ee427cdb685d58/flowless-0.6.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.controlsfx/controlsfx/8.40.15-SNAPSHOT/1e8782f34bf113fd85ca1fc285ef900154d82330/controlsfx-8.40.15-SNAPSHOT.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.jsoup/jsoup/1.11.3/36da09a8f68484523fa2aaa100399d612b247d67/jsoup-1.11.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.mashape.unirest/unirest-java/1.4.9/778cffcba803dc7d43932266aef4c91f5b6b4dd0/unirest-java-1.4.9.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-slf4j-impl/2.11.0/9ba207b78e470fe7765ebee14f1f0336c9cbcc18/log4j-slf4j-impl-2.11.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/2.4.0/765a4401ceb2dc8d40553c2075eb80a8fa35c2ae/json-path-2.4.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.tngtech.archunit/archunit-junit/0.5.0/cfbb98d8b26a90fac0cc3143a03f7d7eace008/archunit-junit-0.5.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.tngtech.archunit/archunit/0.5.0/43797082462a70d67e654064a69d065bb33c00fb/archunit-0.5.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.8.0-beta2/ba136e771a794f77ab41fa879706e5cbd5b20f39/slf4j-api-1.8.0-beta2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-jcl/2.11.0/4acb58e36efe82c3ea518bd31f4f8325b37ae9b4/log4j-jcl-2.11.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-jul/2.11.0/643e7b8de1fdf296f726c2ab1ce2adb924aa0ea3/log4j-jul-2.11.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.microsoft.azure/applicationinsights-logging-log4j2/2.0.2/5f5d28b56dfd50b914e3d6ff9eb6f6bb8d0a64b1/applicationinsights-logging-log4j2-2.0.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.11.0/e6b751e02120c08702d98750f6a80bc25343b7f5/log4j-core-2.11.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.11.0/bede79a3f150711634a3047985517431bf6499f2/log4j-api-2.11.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.citationstyles/styles/1.0.1-SNAPSHOT/3432b1ebb33422e77a23f6b1fd1c6b7da68280a/styles-1.0.1-SNAPSHOT.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.citationstyles/locales/1.0.1-SNAPSHOT/891a5bac47615a04b6dfa8683c1ad27a58b484e7/locales-1.0.1-SNAPSHOT.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.github.tomtung/latex2unicode_2.12/0.2.2/dfa37b1fbe063be525993d2937c05fa349e5c5de/latex2unicode_2.12-0.2.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.microsoft.azure/applicationinsights-core/2.0.2/1f73797b7c92211abc2f80a7a05a0aa326ca99b0/applicationinsights-core-2.0.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-params/5.2.0-RC1/bcc204986709e4f37685b069765614c963678b05/junit-jupiter-params-5.2.0-RC1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.2.0-RC1/764f6fad8103b1a6728c90684bfdb2682af4bec1/junit-jupiter-engine-5.2.0-RC1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.2.0-RC1/b6562d741468e7034f1a76fc1bdea2620fb91ce8/junit-jupiter-api-5.2.0-RC1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-launcher/1.2.0-RC1/e5f49617b5f5fe13d441f3cb0163980faf16455f/junit-platform-launcher-1.2.0-RC1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/2.18.3/98aa130476c5d1915dac35b5ad053a7ffcd675bc/mockito-core-2.18.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-swing-junit/3.8.0/51a93135b0edac8f92cd67bceea6efa2e2dfa870/assertj-swing-junit-3.8.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-matchers/2.6.0/391665735628016a57f330f8cc8fda64567f89e0/xmlunit-matchers-2.6.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-legacy/2.5.1/8c73fbce63d53dd873afe4b3de7d01026846fe0d/xmlunit-legacy-2.5.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.xmlunit/xmlunit-core/2.6.0/ed9bfba5c65a7162f6fbdaecb92f12b4c033ca9c/xmlunit-core-2.6.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.testfx/testfx-junit/4.0.13-alpha/21c11f63dd879d91d44d509d1e64834ad85091a5/testfx-junit-4.0.13-alpha.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.testfx/testfx-core/4.0.13-alpha/a8cca03f7d116b0847ebc03a2dfe462aab06a39b/testfx-core-4.0.13-alpha.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.vintage/junit-vintage-engine/5.2.0-RC1/a0c77ce678e2ad02ff5fafbcb7e828822f57d8e2/junit-vintage-engine-5.2.0-RC1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/xmlgraphics-commons/2.1/b61132defe1df4e91c1eb0ddf544958c50d358b5/xmlgraphics-commons-2.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpasyncclient/4.1.1/dd624f5a0ff43eb5cdf828d9739d3177ee00a5a9/httpasyncclient-4.1.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpmime/4.5.2/22b4c53dd9b6761024258de8f9240c3dce6ea368/httpmime-4.5.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.5/1603dfd56ebcd583ccdf337b6c3984ac55d89e58/httpclient-4.5.5.jar:/home/xand/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.2/4bfc12adfe4842bf07b657f0369c4cb522955686/commons-logging-1.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/5871fb60dc68d67da54a663c3fd636a10a532948/jsr305-3.0.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/net.jcip/jcip-annotations/1.0/afba4942caaeaf46aab0b976afd57cc7c181467e/jcip-annotations-1.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/io.netty/netty-handler/4.1.8.Final/db01139bfb11afd009a695eef55b43bbf22c4ef5/netty-handler-4.1.8.Final.jar:/home/xand/.gradle/caches/modules-2/files-2.1/io.netty/netty-codec/4.1.8.Final/1bd0a2d032e5c7fc3f42c1b483d0f4c57eb516a3/netty-codec-4.1.8.Final.jar:/home/xand/.gradle/caches/modules-2/files-2.1/io.netty/netty-transport/4.1.8.Final/905b5dadce881c9824b3039c0df36dabbb7b6a07/netty-transport-4.1.8.Final.jar:/home/xand/.gradle/caches/modules-2/files-2.1/io.netty/netty-buffer/4.1.8.Final/43292c2622e340a0d07178c341ca3bdf3d662034/netty-buffer-4.1.8.Final.jar:/home/xand/.gradle/caches/modules-2/files-2.1/io.netty/netty-resolver/4.1.8.Final/2e116cdd5edc01b2305072b1dbbd17c0595dbfef/netty-resolver-4.1.8.Final.jar:/home/xand/.gradle/caches/modules-2/files-2.1/io.netty/netty-common/4.1.8.Final/ee62c80318413d2375d145e51e48d7d35c901324/netty-common-4.1.8.Final.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.checkerframework/checker-compat-qual/2.0.0/fc89b03860d11d6213d0154a62bcd1c2f69b9efa/checker-compat-qual-2.0.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.google.errorprone/error_prone_annotations/2.1.3/39b109f2cd352b2d71b52a3b5a1a9850e1dc304b/error_prone_annotations-2.1.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.google.j2objc/j2objc-annotations/1.1/976d8d30bebc251db406f2bdb3eb01962b5685b3/j2objc-annotations-1.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.codehaus.mojo/animal-sniffer-annotations/1.14/775b7e22fb10026eed3f86e8dc556dfafe35f2d5/animal-sniffer-annotations-1.14.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-transcoder/1.8/f330b3e9946ff21ddf3ea6d4f58ae44145cfd362/batik-transcoder-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/de.jensd/fontawesomefx-commons/8.15/b2c373e1706665588916e08ea513fcdb4c86148/fontawesomefx-commons-8.15.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.fxmisc.undo/undofx/2.0.0/b3435bc4ea13cf2f3ef66886083ef7f5533cf66e/undofx-2.0.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.reactfx/reactfx/2.0-M5/aa02bc40ebbb87a76d4b188516294612c8972b80/reactfx-2.0-M5.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.fxmisc.wellbehaved/wellbehavedfx/0.3.3/c69c986469f23feee75f09812357e6b6a0657d57/wellbehavedfx-0.3.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.json/json/20160212/a742e3f85161835b95877478c5dd5b405cefaab9/json-20160212.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-lang3/3.7/557edd918fd41f9260963583ebf5a61a43a6b423/commons-lang3-3.7.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.jbibtex/jbibtex/1.0.15/788ffe9f011b58aa81545430a07663c0214d80b8/jbibtex-1.0.15.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.lihaoyi/fastparse_2.12/0.4.2/25d704ea5543084e3ec2676f22dbd39154a4324c/fastparse_2.12-0.4.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.lihaoyi/fastparse-utils_2.12/0.4.2/bb0d90c37e54e124dcb79440d33e3b32553463f6/fastparse-utils_2.12-0.4.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.lihaoyi/sourcecode_2.12/0.1.3/37504e0fab14f28cff977250e891a25c8bd6a762/sourcecode_2.12-0.1.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.3/f2e496f21af2d80b48e0a61773f84c3a76a0d06f/scala-library-2.12.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.2.0-RC1/f1387abe5a3f0903847a5f4e5691e57bd963dd60/junit-platform-engine-1.2.0-RC1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.2.0-RC1/9a03577807a83891042da270f9332b97e2723391/junit-platform-commons-1.2.0-RC1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.0.0/3ef5276905e36f4d8055fe3cb0bdcc7503ffc85d/apiguardian-api-1.0.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.0.0/6f09c598e9ff64bf0ce2fa7e7de49a99ba83c0b4/opentest4j-1.0.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.8.5/f16b6f8bf487d06e9f83da3033958a694f57c8a4/byte-buddy-1.8.5.jar:/home/xand/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.8.5/7bb88bffec91556155629ad4ff6a0e0013d4bf10/byte-buddy-agent-1.8.5.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/2.6/639033469776fd37c08358c6b92a4761feb2af4b/objenesis-2.6.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-webapp/9.2.24.v20180105/555daea1589044b647a50c137fc73dd91098248f/jetty-webapp-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-servlet/9.2.24.v20180105/21fe471364a908faefbbfecfb273dab927b5e9f4/jetty-servlet-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-security/9.2.24.v20180105/27378bd82a9e17d8f0e4b1cec2563bda6efe8c59/jetty-security-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-server/9.2.24.v20180105/939a4edd1ab556f874f10f0c67fc7cf884a4d276/jetty-server-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-servlets/9.2.24.v20180105/b9c4828634f72325548718f08e2d59463647bed2/jetty-servlets-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.flipkart.zjsonpatch/zjsonpatch/0.4.4/d46c5b83f457c5ba48b630da59f648caa89ee19e/zjsonpatch-0.4.4.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.8.11/569a9f220273024523799dba9dd358121b0ee09/jackson-databind-2.8.11.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.8.11/876ead1db19f0c9e79c9789273a3ef8c6fd6c29b/jackson-core-2.8.11.jar:/home/xand/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.8.11/391de20b4e29cb3fb07d2454ace64be2c82ac91f/jackson-annotations-2.8.11.jar:/home/xand/.gradle/caches/modules-2/files-2.1/net.sf.jopt-simple/jopt-simple/5.0.3/cdd846cfc4e0f7eefafc02c0f5dce32b9303aa2a/jopt-simple-5.0.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-swing/3.8.0/43e985f95237bf9c5fbfa21230f30cc5e859a4fb/assertj-swing-3.8.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-reflect/1.4.1/2b92d5275e92a49e16c7ce6bd7e46b9080db0530/fest-reflect-1.4.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.javassist/javassist/3.21.0-GA/598244f595db5c5fb713731eddbb1c91a58d959b/javassist-3.21.0-GA.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.9.1/c5ce126b15f28d56cd8f960c1a6a058b9c9aea87/assertj-core-3.9.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-bridge/1.8/4ab4110b0ed4650ef50d4a344f0ca5c027f3283a/batik-bridge-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-script/1.8/5bda6a9d45065b184c83c46b64d8002b4e0ab7c7/batik-script-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-anim/1.8/68197dfa3643a906ba250025a03dc42e6efe2dec/batik-anim-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-gvt/1.8/fbde4cd3c43001c162446cf43093d09fda346e11/batik-gvt-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-svggen/1.8/c4684e18303e931845df704f9b9f6995fd770789/batik-svggen-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-svg-dom/1.8/97c9d00d08c849066d2359b0f1124f0e82b952c2/batik-svg-dom-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-parser/1.8/86ec4ab0c828b570d0ccbeba14f85ac011a333f2/batik-parser-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-awt-util/1.8/5cd7f97060cdfab0139e70504962d48ceee71ef2/batik-awt-util-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-dom/1.8/4e696cf01cee52e8c4f86c842b5d8314e689209c/batik-dom-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-xml/1.8/9bf0ee759fed1e3a2e4ad41819eac69ff4873732/batik-xml-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-css/1.8/2b3f22cc65702a0821b7f0178d055282a1cdde59/batik-css-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-util/1.8/35dcd204f397d6976290ca48ffa0011ba9b7ef43/batik-util-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.xmlgraphics/batik-ext/1.8/8713f3238cfac337624a90c3ad7d45d7bc6fb1b5/batik-ext-1.8.jar:/home/xand/.gradle/caches/modules-2/files-2.1/xalan/xalan/2.7.0/a33c0097f1c70b20fa7ded220ea317eb3500515e/xalan-2.7.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/xml-apis/xml-apis-ext/1.3.04/41a8b86b358e87f3f13cf46069721719105aff66/xml-apis-ext-1.3.04.jar:/home/xand/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/1.3.1/b90b6ac57cf27a2858eaa490d02ba7945d18ca7b/commons-io-1.3.1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore-nio/4.4.4/16badfc2d99db264c486ba8c57ae577301a58bd9/httpcore-nio-4.4.4.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.9/a86ce739e5a7175b4b234c290a00a5fdb80957a0/httpcore-4.4.9.jar:/home/xand/.gradle/caches/modules-2/files-2.1/javax.servlet/javax.servlet-api/3.1.0/3cd63d075497751784b2fa84be59432f4905bf7c/javax.servlet-api-3.1.0.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-http/9.2.24.v20180105/391d0a1545a2916b24605ddb22f636a63086048d/jetty-http-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-io/9.2.24.v20180105/be1c08b859e420a066166e4c7411c1a66752ddd/jetty-io-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-continuation/9.2.24.v20180105/4de97aaac685a68d6d8b9e5eb6504f79a5f9c45e/jetty-continuation-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-xml/9.2.24.v20180105/39270536549b584ee13f794cab5f638783cdef99/jetty-xml-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-util/9.2.24.v20180105/66a65b2b78b3a67f359a0bb640c4c59197156f05/jetty-util-9.2.24.v20180105.jar:/home/xand/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/2.3/7396407491352ce4fa30de92efb158adb76b5b/json-smart-2.3.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-util/1.2.5/c4a8d7305b23b8d043be12c979813b096df11f44/fest-util-1.2.5.jar:/home/xand/.gradle/caches/modules-2/files-2.1/net.minidev/accessors-smart/1.2/c592b500269bfde36096641b01238a8350f8aa31/accessors-smart-1.2.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.mozilla/rhino/1.7R4/e982f2136574b9a423186fbaeaaa98dc3e5a5288/rhino-1.7R4.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/5.0.4/da08b8cce7bbf903602a25a3a163ae252435795/asm-5.0.4.jar:/home/xand/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.10/4b95f4897fa13f2cd904aee711aeafc0c5295cd8/commons-codec-1.10.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-console/1.2.0-M1/72ba5a006c0466168332188cdf8ecc9a2e381734/junit-platform-console-1.2.0-M1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-launcher/1.2.0-M1/a2aa78fac2b7314ecf60f8ba9fba2abc8c3618c8/junit-platform-launcher-1.2.0-M1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.2.0-M1/f7438f9357ed72f9231b58576e7a4e2c85cae5ac/junit-platform-engine-1.2.0-M1.jar:/home/xand/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.2.0-M1/5825e2252dd11aaa80811f85533b1838fc23a4a6/junit-platform-commons-1.2.0-M1.jar:build/tmp/expandedArchives/org.jacoco.agent-0.8.1.jar_8059ed6e1ab8b88aac5d9097fad847bb/jacocoagent.jar"/>
<property name="java.class.version" value="52.0"/>
<property name="java.endorsed.dirs" value="/home/xand/Desktop/jdk1.8.0_171/jre/lib/endorsed"/>
<property name="java.ext.dirs" value="/home/xand/Desktop/jdk1.8.0_171/jre/lib/ext:/usr/java/packages/lib/ext"/>
<property name="java.home" value="/home/xand/Desktop/jdk1.8.0_171/jre"/>
<property name="java.io.tmpdir" value="/tmp"/>
<property name="java.library.path" value="/usr/java/packages/lib/i386:/lib:/usr/lib"/>
<property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
<property name="java.runtime.version" value="1.8.0_171-b11"/>
<property name="java.specification.name" value="Java Platform API Specification"/>
<property name="java.specification.vendor" value="Oracle Corporation"/>
<property name="java.specification.version" value="1.8"/>
<property name="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
<property name="java.vendor" value="Oracle Corporation"/>
<property name="java.vendor.url" value="http://java.oracle.com/"/>
<property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
<property name="java.version" value="1.8.0_171"/>
<property name="java.vm.info" value="mixed mode"/>
<property name="java.vm.name" value="Java HotSpot(TM) Server VM"/>
<property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
<property name="java.vm.specification.vendor" value="Oracle Corporation"/>
<property name="java.vm.specification.version" value="1.8"/>
<property name="java.vm.vendor" value="Oracle Corporation"/>
<property name="java.vm.version" value="25.171-b11"/>
<property name="javafx.runtime.version" value="8.0.171-b11"/>
<property name="javafx.version" value="8.0.171"/>
<property name="line.separator" value="
"/>
<property name="os.arch" value="i386"/>
<property name="os.name" value="Linux"/>
<property name="os.version" value="4.13.0-45-generic"/>
<property name="path.separator" value=":"/>
<property name="sun.arch.data.model" value="32"/>
<property name="sun.awt.enableExtraMouseButtons" value="true"/>
<property name="sun.boot.class.path" value="/home/xand/Desktop/jdk1.8.0_171/jre/lib/resources.jar:/home/xand/Desktop/jdk1.8.0_171/jre/lib/rt.jar:/home/xand/Desktop/jdk1.8.0_171/jre/lib/sunrsasign.jar:/home/xand/Desktop/jdk1.8.0_171/jre/lib/jsse.jar:/home/xand/Desktop/jdk1.8.0_171/jre/lib/jce.jar:/home/xand/Desktop/jdk1.8.0_171/jre/lib/charsets.jar:/home/xand/Desktop/jdk1.8.0_171/jre/lib/jfr.jar:/home/xand/Desktop/jdk1.8.0_171/jre/classes"/>
<property name="sun.boot.library.path" value="/home/xand/Desktop/jdk1.8.0_171/jre/lib/i386"/>
<property name="sun.cpu.endian" value="little"/>
<property name="sun.cpu.isalist" value=""/>
<property name="sun.desktop" value="gnome"/>
<property name="sun.font.fontmanager" value="sun.awt.X11FontManager"/>
<property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
<property name="sun.java.command" value="org.junit.platform.console.ConsoleLauncher --details NONE --scan-class-path /home/xand/Desktop/jabrefES2/build/classes/java/jmh:/home/xand/Desktop/jabrefES2/build/resources/jmh:/home/xand/Desktop/jabrefES2/build/classes/java/main:/home/xand/Desktop/jabrefES2/build/resources/main:/home/xand/Desktop/jabrefES2/build/classes/java/test:/home/xand/Desktop/jabrefES2/build/resources/test -n ^(Test.*|.+[.$]Test.*|.*Tests?)$ -T DatabaseTest -T FetcherTest -T GUITest -T org.jabref.testutils.category.FetcherTest -T org.jabref.testutils.category.GUITest --reports-dir /home/xand/Desktop/jabrefES2/build/test-results/junit-platform"/>
<property name="sun.java.launcher" value="SUN_STANDARD"/>
<property name="sun.jnu.encoding" value="UTF-8"/>
<property name="sun.management.compiler" value="HotSpot Tiered Compilers"/>
<property name="sun.os.patch.level" value="unknown"/>
<property name="user.country" value="US"/>
<property name="user.dir" value="/home/xand/Desktop/jabrefES2"/>
<property name="user.home" value="/home/xand"/>
<property name="user.language" value="en"/>
<property name="user.name" value="xand"/>
<property name="user.timezone" value="America/Sao_Paulo"/>
<property name="user.variant" value=""/>
</properties>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[1]" classname="org.jabref.architecture.MainArchitectureTests" time="4.74">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#1]
display-name: 1 -- is org.jabref.logic independent of java.awt?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[2]" classname="org.jabref.architecture.MainArchitectureTests" time="0.144">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#2]
display-name: 2 -- is org.jabref.logic independent of javax.swing?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[3]" classname="org.jabref.architecture.MainArchitectureTests" time="0.175">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#3]
display-name: 3 -- is org.jabref.logic independent of javafx?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[4]" classname="org.jabref.architecture.MainArchitectureTests" time="0.126">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#4]
display-name: 4 -- is org.jabref.logic independent of org.jabref.gui?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[5]" classname="org.jabref.architecture.MainArchitectureTests" time="0.14">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#5]
display-name: 5 -- is org.jabref.logic independent of org.jabref.Globals?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[6]" classname="org.jabref.architecture.MainArchitectureTests" time="0.076">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#6]
display-name: 6 -- is org.jabref.model independent of java.awt?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[7]" classname="org.jabref.architecture.MainArchitectureTests" time="0.07">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#7]
display-name: 7 -- is org.jabref.model independent of javax.swing?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[8]" classname="org.jabref.architecture.MainArchitectureTests" time="0.065">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#8]
display-name: 8 -- is org.jabref.model independent of javafx?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[9]" classname="org.jabref.architecture.MainArchitectureTests" time="0.067">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#9]
display-name: 9 -- is org.jabref.model independent of org.jabref.gui?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[10]" classname="org.jabref.architecture.MainArchitectureTests" time="0.068">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#10]
display-name: 10 -- is org.jabref.model independent of org.jabref.logic?
]]></system-out>
</testcase>
<testcase name="firstPackageIsIndependentOfSecondPackage(String, String)[11]" classname="org.jabref.architecture.MainArchitectureTests" time="0.077">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.architecture.MainArchitectureTests]/[test-template:firstPackageIsIndependentOfSecondPackage(java.lang.String, java.lang.String)]/[test-template-invocation:#11]
display-name: 11 -- is org.jabref.model independent of org.jabref.Globals?
]]></system-out>
</testcase>
<testcase name="testOldStyleBibtexkeyPattern0()" classname="org.jabref.migrations.PreferencesMigrationsTest" time="2.843">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.PreferencesMigrationsTest]/[method:testOldStyleBibtexkeyPattern0()]
display-name: testOldStyleBibtexkeyPattern0()
]]></system-out>
</testcase>
<testcase name="testOldStyleBibtexkeyPattern1()" classname="org.jabref.migrations.PreferencesMigrationsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.PreferencesMigrationsTest]/[method:testOldStyleBibtexkeyPattern1()]
display-name: testOldStyleBibtexkeyPattern1()
]]></system-out>
</testcase>
<testcase name="testArbitraryBibtexkeyPattern()" classname="org.jabref.migrations.PreferencesMigrationsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.PreferencesMigrationsTest]/[method:testArbitraryBibtexkeyPattern()]
display-name: testArbitraryBibtexkeyPattern()
]]></system-out>
</testcase>
<testcase name="noFields()" classname="org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest" time="1.015">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest]/[method:noFields()]
display-name: noFields()
]]></system-out>
</testcase>
<testcase name="multiLineReviewField()" classname="org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest]/[method:multiLineReviewField()]
display-name: multiLineReviewField()
]]></system-out>
</testcase>
<testcase name="commentField()" classname="org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest]/[method:commentField()]
display-name: commentField()
]]></system-out>
</testcase>
<testcase name="reviewField()" classname="org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest]/[method:reviewField()]
display-name: reviewField()
]]></system-out>
</testcase>
<testcase name="reviewAndCommentField()" classname="org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest" time="0">
<skipped><![CDATA[Re-enable if the MergeReviewIntoCommentMigration.mergeCommentFieldIfPresent() does not block and wait for user input.]]></skipped>
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.MergeReviewIntoCommentActionMigrationTest]/[method:reviewAndCommentField()]
display-name: reviewAndCommentField()
]]></system-out>
</testcase>
<testcase name="performActionWritesGroupMembershipInEntry()" classname="org.jabref.migrations.ConvertLegacyExplicitGroupsTest" time="0.015">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.ConvertLegacyExplicitGroupsTest]/[method:performActionWritesGroupMembershipInEntry()]
display-name: performActionWritesGroupMembershipInEntry()
]]></system-out>
</testcase>
<testcase name="performActionClearsLegacyKeys()" classname="org.jabref.migrations.ConvertLegacyExplicitGroupsTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.ConvertLegacyExplicitGroupsTest]/[method:performActionClearsLegacyKeys()]
display-name: performActionClearsLegacyKeys()
]]></system-out>
</testcase>
<testcase name="performActionWritesGroupMembershipInEntryForComplexGroupTree()" classname="org.jabref.migrations.ConvertLegacyExplicitGroupsTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.migrations.ConvertLegacyExplicitGroupsTest]/[method:performActionWritesGroupMembershipInEntryForComplexGroupTree()]
display-name: performActionWritesGroupMembershipInEntryForComplexGroupTree()
]]></system-out>
</testcase>
<testcase name="removedAtIndexMinus1DoesNothing()" classname="org.jabref.cleanup.CleanupActionsListModelTest" time="0.083">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cleanup.CleanupActionsListModelTest]/[method:removedAtIndexMinus1DoesNothing()]
display-name: removedAtIndexMinus1DoesNothing()
]]></system-out>
</testcase>
<testcase name="removedAtIndexOkay()" classname="org.jabref.cleanup.CleanupActionsListModelTest" time="0.018">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cleanup.CleanupActionsListModelTest]/[method:removedAtIndexOkay()]
display-name: removedAtIndexOkay()
]]></system-out>
</testcase>
<testcase name="removedAtIndexgreaterListSizeDoesNothing()" classname="org.jabref.cleanup.CleanupActionsListModelTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cleanup.CleanupActionsListModelTest]/[method:removedAtIndexgreaterListSizeDoesNothing()]
display-name: removedAtIndexgreaterListSizeDoesNothing()
]]></system-out>
</testcase>
<testcase name="resetFiresItemsChanged()" classname="org.jabref.cleanup.CleanupActionsListModelTest" time="0.046">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cleanup.CleanupActionsListModelTest]/[method:resetFiresItemsChanged()]
display-name: resetFiresItemsChanged()
]]></system-out>
</testcase>
<testcase name="resetSetsFormattersToPassedList()" classname="org.jabref.cleanup.CleanupActionsListModelTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cleanup.CleanupActionsListModelTest]/[method:resetSetsFormattersToPassedList()]
display-name: resetSetsFormattersToPassedList()
]]></system-out>
</testcase>
<testcase name="testTypeBasedOnInferredModeBiblatex()" classname="org.jabref.model.BibDatabaseContextTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.BibDatabaseContextTest]/[method:testTypeBasedOnInferredModeBiblatex()]
display-name: testTypeBasedOnInferredModeBiblatex()
]]></system-out>
</testcase>
<testcase name="testTypeBasedOnDefaultBiblatex()" classname="org.jabref.model.BibDatabaseContextTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.BibDatabaseContextTest]/[method:testTypeBasedOnDefaultBiblatex()]
display-name: testTypeBasedOnDefaultBiblatex()
]]></system-out>
</testcase>
<testcase name="testTypeBasedOnDefaultBibtex()" classname="org.jabref.model.BibDatabaseContextTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.BibDatabaseContextTest]/[method:testTypeBasedOnDefaultBibtex()]
display-name: testTypeBasedOnDefaultBibtex()
]]></system-out>
</testcase>
<testcase name="testTypeBasedOnInferredModeBibTeX()" classname="org.jabref.model.BibDatabaseContextTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.BibDatabaseContextTest]/[method:testTypeBasedOnInferredModeBibTeX()]
display-name: testTypeBasedOnInferredModeBibTeX()
]]></system-out>
</testcase>
<testcase name="testParseDateNoTimezone()" classname="org.jabref.model.pdf.FileAnnotationTest" time="0.154">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.pdf.FileAnnotationTest]/[method:testParseDateNoTimezone()]
display-name: testParseDateNoTimezone()
]]></system-out>
</testcase>
<testcase name="testParseNotADate()" classname="org.jabref.model.pdf.FileAnnotationTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.pdf.FileAnnotationTest]/[method:testParseNotADate()]
display-name: testParseNotADate()
]]></system-out>
</testcase>
<testcase name="testParseDatePlusBeforeTimezone()" classname="org.jabref.model.pdf.FileAnnotationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.pdf.FileAnnotationTest]/[method:testParseDatePlusBeforeTimezone()]
display-name: testParseDatePlusBeforeTimezone()
]]></system-out>
</testcase>
<testcase name="testParseDateMinusBeforeTimezone()" classname="org.jabref.model.pdf.FileAnnotationTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.pdf.FileAnnotationTest]/[method:testParseDateMinusBeforeTimezone()]
display-name: testParseDateMinusBeforeTimezone()
]]></system-out>
</testcase>
<testcase name="emptyGroupsIfNotSet()" classname="org.jabref.model.metadata.MetaDataTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.metadata.MetaDataTest]/[method:emptyGroupsIfNotSet()]
display-name: emptyGroupsIfNotSet()
]]></system-out>
</testcase>
<testcase name="createSubgroupsForTwoKeywords()" classname="org.jabref.model.groups.AutomaticKeywordGroupTest" time="2.028">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.AutomaticKeywordGroupTest]/[method:createSubgroupsForTwoKeywords()]
display-name: createSubgroupsForTwoKeywords()
]]></system-out>
</testcase>
<testcase name="addChangesFieldIfNotEmptyBefore()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:addChangesFieldIfNotEmptyBefore()]
display-name: addChangesFieldIfNotEmptyBefore()
]]></system-out>
</testcase>
<testcase name="addChangesFieldIfEmptyBefore()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:addChangesFieldIfEmptyBefore()]
display-name: addChangesFieldIfEmptyBefore()
]]></system-out>
</testcase>
<testcase name="containsDoesNotFindWordIfCaseDiffers()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsDoesNotFindWordIfCaseDiffers()]
display-name: containsDoesNotFindWordIfCaseDiffers()
]]></system-out>
</testcase>
<testcase name="containsFindsSameWord()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsFindsSameWord()]
display-name: containsFindsSameWord()
]]></system-out>
</testcase>
<testcase name="containsFindsSameComplexWord()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsFindsSameComplexWord()]
display-name: containsFindsSameComplexWord()
]]></system-out>
</testcase>
<testcase name="containsFindsComplexWordInSentence()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsFindsComplexWordInSentence()]
display-name: containsFindsComplexWordInSentence()
]]></system-out>
</testcase>
<testcase name="containsDoesNotFindsWordInSentenceIfCaseDiffers()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsDoesNotFindsWordInSentenceIfCaseDiffers()]
display-name: containsDoesNotFindsWordInSentenceIfCaseDiffers()
]]></system-out>
</testcase>
<testcase name="containsFindsWordInCommaSeparatedList()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsFindsWordInCommaSeparatedList()]
display-name: containsFindsWordInCommaSeparatedList()
]]></system-out>
</testcase>
<testcase name="addDoesNotAddDuplicate()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:addDoesNotAddDuplicate()]
display-name: addDoesNotAddDuplicate()
]]></system-out>
</testcase>
<testcase name="containsFindsWordInSentence()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsFindsWordInSentence()]
display-name: containsFindsWordInSentence()
]]></system-out>
</testcase>
<testcase name="removeRemovesNameFromField()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:removeRemovesNameFromField()]
display-name: removeRemovesNameFromField()
]]></system-out>
</testcase>
<testcase name="containsFindsWordInSemicolonSeparatedList()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:containsFindsWordInSemicolonSeparatedList()]
display-name: containsFindsWordInSemicolonSeparatedList()
]]></system-out>
</testcase>
<testcase name="removeDoesNothingIfEntryNotMatched()" classname="org.jabref.model.groups.WordKeywordGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.WordKeywordGroupTest]/[method:removeDoesNothingIfEntryNotMatched()]
display-name: removeDoesNothingIfEntryNotMatched()
]]></system-out>
</testcase>
<testcase name="containsMatchesPhraseWithBrackets()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:containsMatchesPhraseWithBrackets()]
display-name: containsMatchesPhraseWithBrackets()
]]></system-out>
</testcase>
<testcase name="addSingleGroupToNonemptyBibEntryAppendsToGroupsField()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:addSingleGroupToNonemptyBibEntryAppendsToGroupsField()]
display-name: addSingleGroupToNonemptyBibEntryAppendsToGroupsField()
]]></system-out>
</testcase>
<testcase name="removeDoesNotChangeFieldIfContainsNameAsPart()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:removeDoesNotChangeFieldIfContainsNameAsPart()]
display-name: removeDoesNotChangeFieldIfContainsNameAsPart()
]]></system-out>
</testcase>
<testcase name="removeDoesNotChangeFieldIfContainsNameAsWord()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:removeDoesNotChangeFieldIfContainsNameAsWord()]
display-name: removeDoesNotChangeFieldIfContainsNameAsWord()
]]></system-out>
</testcase>
<testcase name="containsOnlyMatchesCompletePhraseWithWhitespace()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:containsOnlyMatchesCompletePhraseWithWhitespace()]
display-name: containsOnlyMatchesCompletePhraseWithWhitespace()
]]></system-out>
</testcase>
<testcase name="containsOnlyMatchesCompletePhraseWithSlash()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:containsOnlyMatchesCompletePhraseWithSlash()]
display-name: containsOnlyMatchesCompletePhraseWithSlash()
]]></system-out>
</testcase>
<testcase name="addSingleGroupToEmptyBibEntryChangesGroupsField()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:addSingleGroupToEmptyBibEntryChangesGroupsField()]
display-name: addSingleGroupToEmptyBibEntryChangesGroupsField()
]]></system-out>
</testcase>
<testcase name="addTwoGroupsToBibEntryChangesGroupsField()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:addTwoGroupsToBibEntryChangesGroupsField()]
display-name: addTwoGroupsToBibEntryChangesGroupsField()
]]></system-out>
</testcase>
<testcase name="addDuplicateGroupDoesNotChangeGroupsField()" classname="org.jabref.model.groups.ExplicitGroupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.ExplicitGroupTest]/[method:addDuplicateGroupDoesNotChangeGroupsField()]
display-name: addDuplicateGroupDoesNotChangeGroupsField()
]]></system-out>
</testcase>
<testcase name="containsFindsWordWithRegularExpression()" classname="org.jabref.model.groups.SearchGroupTest" time="0.17">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.SearchGroupTest]/[method:containsFindsWordWithRegularExpression()]
display-name: containsFindsWordWithRegularExpression()
]]></system-out>
</testcase>
<testcase name="numberOfHitsMatchesOneEntry()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:numberOfHitsMatchesOneEntry()]
display-name: numberOfHitsMatchesOneEntry()
]]></system-out>
</testcase>
<testcase name="getSearchRuleForRefiningGroupReturnsParentAndGroupAsMatcher()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:getSearchRuleForRefiningGroupReturnsParentAndGroupAsMatcher()]
display-name: getSearchRuleForRefiningGroupReturnsParentAndGroupAsMatcher()
]]></system-out>
</testcase>
<testcase name="setGroupExplicitToSearchDoesNotKeepPreviousAssignments()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:setGroupExplicitToSearchDoesNotKeepPreviousAssignments()]
display-name: setGroupExplicitToSearchDoesNotKeepPreviousAssignments()
]]></system-out>
</testcase>
<testcase name="numberOfHitsWorksForHierarchyOfIndependentGroups()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:numberOfHitsWorksForHierarchyOfIndependentGroups()]
display-name: numberOfHitsWorksForHierarchyOfIndependentGroups()
]]></system-out>
</testcase>
<testcase name="setGroupChangesUnderlyingGroup()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:setGroupChangesUnderlyingGroup()]
display-name: setGroupChangesUnderlyingGroup()
]]></system-out>
</testcase>
<testcase name="setGroupAddsPreviousAssignmentsExplicitToExplicit()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:setGroupAddsPreviousAssignmentsExplicitToExplicit()]
display-name: setGroupAddsPreviousAssignmentsExplicitToExplicit()
]]></system-out>
</testcase>
<testcase name="setGroupExplicitToExplicitIsRenameAndSoRemovesPreviousAssignment()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:setGroupExplicitToExplicitIsRenameAndSoRemovesPreviousAssignment()]
display-name: setGroupExplicitToExplicitIsRenameAndSoRemovesPreviousAssignment()
]]></system-out>
</testcase>
<testcase name="setGroupWithFalseDoesNotAddsPreviousAssignments()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:setGroupWithFalseDoesNotAddsPreviousAssignments()]
display-name: setGroupWithFalseDoesNotAddsPreviousAssignments()
]]></system-out>
</testcase>
<testcase name="getSearchRuleForIncludingGroupReturnsGroupOrSubgroupAsMatcher()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:getSearchRuleForIncludingGroupReturnsGroupOrSubgroupAsMatcher()]
display-name: getSearchRuleForIncludingGroupReturnsGroupOrSubgroupAsMatcher()
]]></system-out>
</testcase>
<testcase name="numberOfHitsWorksForRefiningGroups()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:numberOfHitsWorksForRefiningGroups()]
display-name: numberOfHitsWorksForRefiningGroups()
]]></system-out>
</testcase>
<testcase name="numberOfHitsReturnsZeroForEmptyList()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:numberOfHitsReturnsZeroForEmptyList()]
display-name: numberOfHitsReturnsZeroForEmptyList()
]]></system-out>
</testcase>
<testcase name="getChildByPathFindsCorrectChildInSecondLevel()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:getChildByPathFindsCorrectChildInSecondLevel()]
display-name: getChildByPathFindsCorrectChildInSecondLevel()
]]></system-out>
</testcase>
<testcase name="setGroupAddsOnlyPreviousAssignments()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:setGroupAddsOnlyPreviousAssignments()]
display-name: setGroupAddsOnlyPreviousAssignments()
]]></system-out>
</testcase>
<testcase name="getPathSimpleTree()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:getPathSimpleTree()]
display-name: getPathSimpleTree()
]]></system-out>
</testcase>
<testcase name="getSearchRuleForIndependentGroupReturnsGroupAsMatcher()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:getSearchRuleForIndependentGroupReturnsGroupAsMatcher()]
display-name: getSearchRuleForIndependentGroupReturnsGroupAsMatcher()
]]></system-out>
</testcase>
<testcase name="numberOfHitsMatchesMultipleEntries()" classname="org.jabref.model.groups.GroupTreeNodeTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.GroupTreeNodeTest]/[method:numberOfHitsMatchesMultipleEntries()]
display-name: numberOfHitsMatchesMultipleEntries()
]]></system-out>
</testcase>
<testcase name="containsReturnsTrueForEntryNotInAux()" classname="org.jabref.model.groups.TexGroupTest" time="0.321">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.TexGroupTest]/[method:containsReturnsTrueForEntryNotInAux()]
display-name: containsReturnsTrueForEntryNotInAux()
]]></system-out>
</testcase>
<testcase name="containsReturnsTrueForEntryInAux()" classname="org.jabref.model.groups.TexGroupTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.groups.TexGroupTest]/[method:containsReturnsTrueForEntryInAux()]
display-name: containsReturnsTrueForEntryInAux()
]]></system-out>
</testcase>
<testcase name="testBasicSearchParsing()" classname="org.jabref.model.search.rules.ContainBasedSearchRuleTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.search.rules.ContainBasedSearchRuleTest]/[method:testBasicSearchParsing()]
display-name: testBasicSearchParsing()
]]></system-out>
</testcase>
<testcase name="testGetWords()" classname="org.jabref.model.search.rules.SentenceAnalyzerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.search.rules.SentenceAnalyzerTest]/[method:testGetWords()]
display-name: testGetWords()
]]></system-out>
</testcase>
<testcase name="testBuildNotWithTrue()" classname="org.jabref.model.search.matchers.MatcherSetsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.search.matchers.MatcherSetsTest]/[method:testBuildNotWithTrue()]
display-name: testBuildNotWithTrue()
]]></system-out>
</testcase>
<testcase name="testBuildAnd()" classname="org.jabref.model.search.matchers.MatcherSetsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.search.matchers.MatcherSetsTest]/[method:testBuildAnd()]
display-name: testBuildAnd()
]]></system-out>
</testcase>
<testcase name="testBuildOr()" classname="org.jabref.model.search.matchers.MatcherSetsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.search.matchers.MatcherSetsTest]/[method:testBuildOr()]
display-name: testBuildOr()
]]></system-out>
</testcase>
<testcase name="testBuildNotWithFalse()" classname="org.jabref.model.search.matchers.MatcherSetsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.search.matchers.MatcherSetsTest]/[method:testBuildNotWithFalse()]
display-name: testBuildNotWithFalse()
]]></system-out>
</testcase>
<testcase name="testIntValueOfSingleDigit()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfSingleDigit()]
display-name: testIntValueOfSingleDigit()
]]></system-out>
</testcase>
<testcase name="testIntValueOfExceptionIfStringContainsLetter()" classname="org.jabref.model.strings.StringUtilTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfExceptionIfStringContainsLetter()]
display-name: testIntValueOfExceptionIfStringContainsLetter()
]]></system-out>
</testcase>
<testcase name="testQuoteQuotationCharacter()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testQuoteQuotationCharacter()]
display-name: testQuoteQuotationCharacter()
]]></system-out>
</testcase>
<testcase name="testIntValueOfWithNullStartWithZeros()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfWithNullStartWithZeros()]
display-name: testIntValueOfWithNullStartWithZeros()
]]></system-out>
</testcase>
<testcase name="testIntValueOfWithNullExceptionfIfStringEmpty()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfWithNullExceptionfIfStringEmpty()]
display-name: testIntValueOfWithNullExceptionfIfStringEmpty()
]]></system-out>
</testcase>
<testcase name="testBoldHTML()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testBoldHTML()]
display-name: testBoldHTML()
]]></system-out>
</testcase>
<testcase name="testIsInCitationMarks()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIsInCitationMarks()]
display-name: testIsInCitationMarks()
]]></system-out>
</testcase>
<testcase name="testUnifyLineBreaks()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testUnifyLineBreaks()]
display-name: testUnifyLineBreaks()
]]></system-out>
</testcase>
<testcase name="testLimitStringLengthNullInput()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testLimitStringLengthNullInput()]
display-name: testLimitStringLengthNullInput()
]]></system-out>
</testcase>
<testcase name="testRepeatSpaces()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testRepeatSpaces()]
display-name: testRepeatSpaces()
]]></system-out>
</testcase>
<testcase name="testJoin()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testJoin()]
display-name: testJoin()
]]></system-out>
</testcase>
<testcase name="testWrap()" classname="org.jabref.model.strings.StringUtilTest" time="0.069">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testWrap()]
display-name: testWrap()
]]></system-out>
</testcase>
<testcase name="testIntValueOfWithNullExceptionIfStringNull()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfWithNullExceptionIfStringNull()]
display-name: testIntValueOfWithNullExceptionIfStringNull()
]]></system-out>
</testcase>
<testcase name="testPutBracesAroundCapitals()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testPutBracesAroundCapitals()]
display-name: testPutBracesAroundCapitals()
]]></system-out>
</testcase>
<testcase name="testUnquote()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testUnquote()]
display-name: testUnquote()
]]></system-out>
</testcase>
<testcase name="testDecodeStringDoubleArray()" classname="org.jabref.model.strings.StringUtilTest" time="0.046">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testDecodeStringDoubleArray()]
display-name: testDecodeStringDoubleArray()
]]></system-out>
</testcase>
<testcase name="testBooleanToBinaryString()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testBooleanToBinaryString()]
display-name: testBooleanToBinaryString()
]]></system-out>
</testcase>
<testcase name="testCapitalizeFirst()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testCapitalizeFirst()]
display-name: testCapitalizeFirst()
]]></system-out>
</testcase>
<testcase name="testGetPart()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testGetPart()]
display-name: testGetPart()
]]></system-out>
</testcase>
<testcase name="testIntValueOfStartWithZeros()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfStartWithZeros()]
display-name: testIntValueOfStartWithZeros()
]]></system-out>
</testcase>
<testcase name="testIntValueOfLongString()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfLongString()]
display-name: testIntValueOfLongString()
]]></system-out>
</testcase>
<testcase name="testBoldHTMLReturnsAlternativeTextIfNull()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testBoldHTMLReturnsAlternativeTextIfNull()]
display-name: testBoldHTMLReturnsAlternativeTextIfNull()
]]></system-out>
</testcase>
<testcase name="testIsInCurlyBrackets()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIsInCurlyBrackets()]
display-name: testIsInCurlyBrackets()
]]></system-out>
</testcase>
<testcase name="testLimitStringLengthLimiting()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testLimitStringLengthLimiting()]
display-name: testLimitStringLengthLimiting()
]]></system-out>
</testcase>
<testcase name="testIntValueOfWithNullLongString()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfWithNullLongString()]
display-name: testIntValueOfWithNullLongString()
]]></system-out>
</testcase>
<testcase name="testQuoteForHTML()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testQuoteForHTML()]
display-name: testQuoteForHTML()
]]></system-out>
</testcase>
<testcase name="testQuoteSimple()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testQuoteSimple()]
display-name: testQuoteSimple()
]]></system-out>
</testcase>
<testcase name="testIntValueOfWithNullSingleDigit()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfWithNullSingleDigit()]
display-name: testIntValueOfWithNullSingleDigit()
]]></system-out>
</testcase>
<testcase name="testQuoteNullQuotation()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testQuoteNullQuotation()]
display-name: testQuoteNullQuotation()
]]></system-out>
</testcase>
<testcase name="testGetCorrectFileName()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testGetCorrectFileName()]
display-name: testGetCorrectFileName()
]]></system-out>
</testcase>
<testcase name="testIntValueOfExceptionfIfStringEmpty()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfExceptionfIfStringEmpty()]
display-name: testIntValueOfExceptionfIfStringEmpty()
]]></system-out>
</testcase>
<testcase name="testIntValueOfExceptionIfStringNull()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfExceptionIfStringNull()]
display-name: testIntValueOfExceptionIfStringNull()
]]></system-out>
</testcase>
<testcase name="testRemoveBracesAroundCapitals()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testRemoveBracesAroundCapitals()]
display-name: testRemoveBracesAroundCapitals()
]]></system-out>
</testcase>
<testcase name="testIsInSquareBrackets()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIsInSquareBrackets()]
display-name: testIsInSquareBrackets()
]]></system-out>
</testcase>
<testcase name="StringUtilClassIsSmall()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:StringUtilClassIsSmall()]
display-name: StringUtilClassIsSmall()
]]></system-out>
</testcase>
<testcase name="testIntValueOfWithNullExceptionIfStringContainsLetter()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testIntValueOfWithNullExceptionIfStringContainsLetter()]
display-name: testIntValueOfWithNullExceptionIfStringContainsLetter()
]]></system-out>
</testcase>
<testcase name="testFindEncodingsForString()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testFindEncodingsForString()]
display-name: testFindEncodingsForString()
]]></system-out>
</testcase>
<testcase name="testBoldHTMLReturnsOriginalTextIfNonNull()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testBoldHTMLReturnsOriginalTextIfNonNull()]
display-name: testBoldHTMLReturnsOriginalTextIfNonNull()
]]></system-out>
</testcase>
<testcase name="testLimitStringLengthShort()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testLimitStringLengthShort()]
display-name: testLimitStringLengthShort()
]]></system-out>
</testcase>
<testcase name="testQuoteMoreComplicated()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testQuoteMoreComplicated()]
display-name: testQuoteMoreComplicated()
]]></system-out>
</testcase>
<testcase name="testRepeat()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testRepeat()]
display-name: testRepeat()
]]></system-out>
</testcase>
<testcase name="testQuoteNullString()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testQuoteNullString()]
display-name: testQuoteNullString()
]]></system-out>
</testcase>
<testcase name="testReplaceSpecialCharacters()" classname="org.jabref.model.strings.StringUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testReplaceSpecialCharacters()]
display-name: testReplaceSpecialCharacters()
]]></system-out>
</testcase>
<testcase name="testStripBrackets()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testStripBrackets()]
display-name: testStripBrackets()
]]></system-out>
</testcase>
<testcase name="testShaveString()" classname="org.jabref.model.strings.StringUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.strings.StringUtilTest]/[method:testShaveString()]
display-name: testShaveString()
]]></system-out>
</testcase>
<testcase name="testFileFieldSerialization()" classname="org.jabref.model.entry.FileFieldBibEntryTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldBibEntryTest]/[method:testFileFieldSerialization()]
display-name: testFileFieldSerialization()
]]></system-out>
</testcase>
<testcase name="testFileFieldSerializationDatabase()" classname="org.jabref.model.entry.FileFieldBibEntryTest" time="0.223">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldBibEntryTest]/[method:testFileFieldSerializationDatabase()]
display-name: testFileFieldSerializationDatabase()
]]></system-out>
</testcase>
<testcase name="getSpecialFieldInstanceFromFieldNameValid()" classname="org.jabref.model.entry.specialfields.SpecialFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.specialfields.SpecialFieldTest]/[method:getSpecialFieldInstanceFromFieldNameValid()]
display-name: getSpecialFieldInstanceFromFieldNameValid()
]]></system-out>
</testcase>
<testcase name="isSpecialFieldFalseForInvalidField()" classname="org.jabref.model.entry.specialfields.SpecialFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.specialfields.SpecialFieldTest]/[method:isSpecialFieldFalseForInvalidField()]
display-name: isSpecialFieldFalseForInvalidField()
]]></system-out>
</testcase>
<testcase name="isSpecialFieldTrueForValidField()" classname="org.jabref.model.entry.specialfields.SpecialFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.specialfields.SpecialFieldTest]/[method:isSpecialFieldTrueForValidField()]
display-name: isSpecialFieldTrueForValidField()
]]></system-out>
</testcase>
<testcase name="getSpecialFieldInstanceFromFieldNameEmptyForInvalidField()" classname="org.jabref.model.entry.specialfields.SpecialFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.specialfields.SpecialFieldTest]/[method:getSpecialFieldInstanceFromFieldNameEmptyForInvalidField()]
display-name: getSpecialFieldInstanceFromFieldNameEmptyForInvalidField()
]]></system-out>
</testcase>
<testcase name="compareIsTrueWhenIdAndFieldsAreEqual()" classname="org.jabref.model.entry.BibEntryEqualityTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryEqualityTest]/[method:compareIsTrueWhenIdAndFieldsAreEqual()]
display-name: compareIsTrueWhenIdAndFieldsAreEqual()
]]></system-out>
</testcase>
<testcase name="identicObjectsareEqual()" classname="org.jabref.model.entry.BibEntryEqualityTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryEqualityTest]/[method:identicObjectsareEqual()]
display-name: identicObjectsareEqual()
]]></system-out>
</testcase>
<testcase name="compareToNullObjectIsFalse()" classname="org.jabref.model.entry.BibEntryEqualityTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryEqualityTest]/[method:compareToNullObjectIsFalse()]
display-name: compareToNullObjectIsFalse()
]]></system-out>
</testcase>
<testcase name="compareToDifferentClassIsFalse()" classname="org.jabref.model.entry.BibEntryEqualityTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryEqualityTest]/[method:compareToDifferentClassIsFalse()]
display-name: compareToDifferentClassIsFalse()
]]></system-out>
</testcase>
<testcase name="parseReturnsEmptyOptionalForInvalidInput()" classname="org.jabref.model.entry.MonthTest" time="0.117">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseReturnsEmptyOptionalForInvalidInput()]
display-name: parseReturnsEmptyOptionalForInvalidInput()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByFullName()" classname="org.jabref.model.entry.MonthTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByFullName()]
display-name: parseCorrectlyByFullName()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByTwoDigitNumber()" classname="org.jabref.model.entry.MonthTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByTwoDigitNumber()]
display-name: parseCorrectlyByTwoDigitNumber()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByBibtexName()" classname="org.jabref.model.entry.MonthTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByBibtexName()]
display-name: parseCorrectlyByBibtexName()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByShortNameGermanLowercase()" classname="org.jabref.model.entry.MonthTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByShortNameGermanLowercase()]
display-name: parseCorrectlyByShortNameGermanLowercase()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByFullNameGerman()" classname="org.jabref.model.entry.MonthTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByFullNameGerman()]
display-name: parseCorrectlyByFullNameGerman()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByShortNameGerman()" classname="org.jabref.model.entry.MonthTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByShortNameGerman()]
display-name: parseCorrectlyByShortNameGerman()
]]></system-out>
</testcase>
<testcase name="parseReturnsEmptyOptionalForEmptyInput()" classname="org.jabref.model.entry.MonthTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseReturnsEmptyOptionalForEmptyInput()]
display-name: parseReturnsEmptyOptionalForEmptyInput()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByShortName()" classname="org.jabref.model.entry.MonthTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByShortName()]
display-name: parseCorrectlyByShortName()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyByNumber()" classname="org.jabref.model.entry.MonthTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.MonthTest]/[method:parseCorrectlyByNumber()]
display-name: parseCorrectlyByNumber()
]]></system-out>
</testcase>
<testcase name="ctlTypeContainsYesNoFields()" classname="org.jabref.model.entry.IEEETranEntryTypesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.IEEETranEntryTypesTest]/[method:ctlTypeContainsYesNoFields()]
display-name: ctlTypeContainsYesNoFields()
]]></system-out>
</testcase>
<testcase name="addKeywordIsCaseSensitive()" classname="org.jabref.model.entry.BibEntryTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:addKeywordIsCaseSensitive()]
display-name: addKeywordIsCaseSensitive()
]]></system-out>
</testcase>
<testcase name="addNullKeywordThrowsNPE()" classname="org.jabref.model.entry.BibEntryTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:addNullKeywordThrowsNPE()]
display-name: addNullKeywordThrowsNPE()
]]></system-out>
</testcase>
<testcase name="testPutKeywordsHasChanged()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testPutKeywordsHasChanged()]
display-name: testPutKeywordsHasChanged()
]]></system-out>
</testcase>
<testcase name="allFieldsPresentDefault()" classname="org.jabref.model.entry.BibEntryTests" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:allFieldsPresentDefault()]
display-name: allFieldsPresentDefault()
]]></system-out>
</testcase>
<testcase name="testPutKeywordsPutEmpyListHasChanged()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testPutKeywordsPutEmpyListHasChanged()]
display-name: testPutKeywordsPutEmpyListHasChanged()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasLatexFreeBracesAreRemovedFromAlias()" classname="org.jabref.model.entry.BibEntryTests" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasLatexFreeBracesAreRemovedFromAlias()]
display-name: getFieldOrAliasLatexFreeBracesAreRemovedFromAlias()
]]></system-out>
</testcase>
<testcase name="setNullField()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:setNullField()]
display-name: setNullField()
]]></system-out>
</testcase>
<testcase name="texNewBibEntryHasNoKeywords()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:texNewBibEntryHasNoKeywords()]
display-name: texNewBibEntryHasNoKeywords()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasMonthWithDateYYYYMM()" classname="org.jabref.model.entry.BibEntryTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasMonthWithDateYYYYMM()]
display-name: getFieldOrAliasMonthWithDateYYYYMM()
]]></system-out>
</testcase>
<testcase name="testAddKeywordIsCorrect()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testAddKeywordIsCorrect()]
display-name: testAddKeywordIsCorrect()
]]></system-out>
</testcase>
<testcase name="texNewBibEntryAfterAddingEmptyKeywordNotChanged()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:texNewBibEntryAfterAddingEmptyKeywordNotChanged()]
display-name: texNewBibEntryAfterAddingEmptyKeywordNotChanged()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasMonthWithDateYYYYReturnsNull()" classname="org.jabref.model.entry.BibEntryTests" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasMonthWithDateYYYYReturnsNull()]
display-name: getFieldOrAliasMonthWithDateYYYYReturnsNull()
]]></system-out>
</testcase>
<testcase name="testGroupAndSearchHits()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testGroupAndSearchHits()]
display-name: testGroupAndSearchHits()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasYearWithDateYYYYMM()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasYearWithDateYYYYMM()]
display-name: getFieldOrAliasYearWithDateYYYYMM()
]]></system-out>
</testcase>
<testcase name="typeOfBibEntryIsMiscAfterSettingToNullString()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:typeOfBibEntryIsMiscAfterSettingToNullString()]
display-name: typeOfBibEntryIsMiscAfterSettingToNullString()
]]></system-out>
</testcase>
<testcase name="testAddKeywordHasChanged()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testAddKeywordHasChanged()]
display-name: testAddKeywordHasChanged()
]]></system-out>
</testcase>
<testcase name="typeOfBibEntryIsMiscAfterSettingToEmptyString()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:typeOfBibEntryIsMiscAfterSettingToEmptyString()]
display-name: typeOfBibEntryIsMiscAfterSettingToEmptyString()
]]></system-out>
</testcase>
<testcase name="putNullKeywordListThrowsNPE()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:putNullKeywordListThrowsNPE()]
display-name: putNullKeywordListThrowsNPE()
]]></system-out>
</testcase>
<testcase name="testAddKeywordEmptyKeywordNotChanged()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testAddKeywordEmptyKeywordNotChanged()]
display-name: testAddKeywordEmptyKeywordNotChanged()
]]></system-out>
</testcase>
<testcase name="getKeywordsReturnsParsedKeywordListFromKeywordsField()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getKeywordsReturnsParsedKeywordListFromKeywordsField()]
display-name: getKeywordsReturnsParsedKeywordListFromKeywordsField()
]]></system-out>
</testcase>
<testcase name="setCiteKey()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:setCiteKey()]
display-name: setCiteKey()
]]></system-out>
</testcase>
<testcase name="removeKeywordsWithExistingKeywordsRemovesThem()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:removeKeywordsWithExistingKeywordsRemovesThem()]
display-name: removeKeywordsWithExistingKeywordsRemovesThem()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasDateWithYearAbbreviatedMonth()" classname="org.jabref.model.entry.BibEntryTests" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasDateWithYearAbbreviatedMonth()]
display-name: getFieldOrAliasDateWithYearAbbreviatedMonth()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasMonthWithDateYYYYMMDD()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasMonthWithDateYYYYMMDD()]
display-name: getFieldOrAliasMonthWithDateYYYYMMDD()
]]></system-out>
</testcase>
<testcase name="putKeywordsToSameReturnsNoChange()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:putKeywordsToSameReturnsNoChange()]
display-name: putKeywordsToSameReturnsNoChange()
]]></system-out>
</testcase>
<testcase name="isEmptyCiteKey()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:isEmptyCiteKey()]
display-name: isEmptyCiteKey()
]]></system-out>
</testcase>
<testcase name="putNullKeywordSeparatorThrowsNPE()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:putNullKeywordSeparatorThrowsNPE()]
display-name: putNullKeywordSeparatorThrowsNPE()
]]></system-out>
</testcase>
<testcase name="removeKeywordsWithNonExistingKeywordsDoesNothing()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:removeKeywordsWithNonExistingKeywordsDoesNothing()]
display-name: removeKeywordsWithNonExistingKeywordsDoesNothing()
]]></system-out>
</testcase>
<testcase name="clearKeywordsReturnsChange()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:clearKeywordsReturnsChange()]
display-name: clearKeywordsReturnsChange()
]]></system-out>
</testcase>
<testcase name="testPutKeywordsPutEmpyListErasesPreviousKeywords()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testPutKeywordsPutEmpyListErasesPreviousKeywords()]
display-name: testPutKeywordsPutEmpyListErasesPreviousKeywords()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasDateWithOnlyYear()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasDateWithOnlyYear()]
display-name: getFieldOrAliasDateWithOnlyYear()
]]></system-out>
</testcase>
<testcase name="testAddKeywordTwiceYiedsOnlyOne()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testAddKeywordTwiceYiedsOnlyOne()]
display-name: testAddKeywordTwiceYiedsOnlyOne()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasLatexFreeComplexConversionInAlias()" classname="org.jabref.model.entry.BibEntryTests" time="0.065">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasLatexFreeComplexConversionInAlias()]
display-name: getFieldOrAliasLatexFreeComplexConversionInAlias()
]]></system-out>
</testcase>
<testcase name="testAddKeywordEmptyKeywordIsNotAdded()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testAddKeywordEmptyKeywordIsNotAdded()]
display-name: testAddKeywordEmptyKeywordIsNotAdded()
]]></system-out>
</testcase>
<testcase name="testPutKeywordsPutEmpyListToEmptyBibentry()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testPutKeywordsPutEmpyListToEmptyBibentry()]
display-name: testPutKeywordsPutEmpyListToEmptyBibentry()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasYearWithDateYYYYMMDD()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasYearWithDateYYYYMMDD()]
display-name: getFieldOrAliasYearWithDateYYYYMMDD()
]]></system-out>
</testcase>
<testcase name="testGetSeparatedKeywordsAreCorrect()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testGetSeparatedKeywordsAreCorrect()]
display-name: testGetSeparatedKeywordsAreCorrect()
]]></system-out>
</testcase>
<testcase name="removeKeywordsOnEntryWithoutKeywordsDoesNothing()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:removeKeywordsOnEntryWithoutKeywordsDoesNothing()]
display-name: removeKeywordsOnEntryWithoutKeywordsDoesNothing()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasYearWithDateYYYY()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasYearWithDateYYYY()]
display-name: getFieldOrAliasYearWithDateYYYY()
]]></system-out>
</testcase>
<testcase name="testPutKeywordsOverwritesOldKeywords()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testPutKeywordsOverwritesOldKeywords()]
display-name: testPutKeywordsOverwritesOldKeywords()
]]></system-out>
</testcase>
<testcase name="testAddKeywordsWorksAsExpected()" classname="org.jabref.model.entry.BibEntryTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testAddKeywordsWorksAsExpected()]
display-name: testAddKeywordsWorksAsExpected()
]]></system-out>
</testcase>
<testcase name="changeKeywordsReturnsChange()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:changeKeywordsReturnsChange()]
display-name: changeKeywordsReturnsChange()
]]></system-out>
</testcase>
<testcase name="isNullCiteKeyThrowsNPE()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:isNullCiteKeyThrowsNPE()]
display-name: isNullCiteKeyThrowsNPE()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasDateWithYearNumericalMonthString()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasDateWithYearNumericalMonthString()]
display-name: getFieldOrAliasDateWithYearNumericalMonthString()
]]></system-out>
</testcase>
<testcase name="putKeywordsToEmptyReturnsNoChange()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:putKeywordsToEmptyReturnsNoChange()]
display-name: putKeywordsToEmptyReturnsNoChange()
]]></system-out>
</testcase>
<testcase name="allFieldsPresentOr()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:allFieldsPresentOr()]
display-name: allFieldsPresentOr()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasDateWithYearAbbreviatedMonthString()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasDateWithYearAbbreviatedMonthString()]
display-name: getFieldOrAliasDateWithYearAbbreviatedMonthString()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasLatexFreeAlreadyFreeValueIsUnchanged()" classname="org.jabref.model.entry.BibEntryTests" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasLatexFreeAlreadyFreeValueIsUnchanged()]
display-name: getFieldOrAliasLatexFreeAlreadyFreeValueIsUnchanged()
]]></system-out>
</testcase>
<testcase name="testAddKeywordWithDifferentCapitalizationChanges()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testAddKeywordWithDifferentCapitalizationChanges()]
display-name: testAddKeywordWithDifferentCapitalizationChanges()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasLatexFreeAlreadyFreeAliasValueIsUnchanged()" classname="org.jabref.model.entry.BibEntryTests" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasLatexFreeAlreadyFreeAliasValueIsUnchanged()]
display-name: getFieldOrAliasLatexFreeAlreadyFreeAliasValueIsUnchanged()
]]></system-out>
</testcase>
<testcase name="testPutKeywordsPutEmpyListToEmptyBibentryNotChanged()" classname="org.jabref.model.entry.BibEntryTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testPutKeywordsPutEmpyListToEmptyBibentryNotChanged()]
display-name: testPutKeywordsPutEmpyListToEmptyBibentryNotChanged()
]]></system-out>
</testcase>
<testcase name="texNewBibEntryHasNoKeywordsEvenAfterAddingEmptyKeyword()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:texNewBibEntryHasNoKeywordsEvenAfterAddingEmptyKeyword()]
display-name: texNewBibEntryHasNoKeywordsEvenAfterAddingEmptyKeyword()
]]></system-out>
</testcase>
<testcase name="testDefaultConstructor()" classname="org.jabref.model.entry.BibEntryTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:testDefaultConstructor()]
display-name: testDefaultConstructor()
]]></system-out>
</testcase>
<testcase name="removeKeywordsWithEmptyListDoesNothing()" classname="org.jabref.model.entry.BibEntryTests" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:removeKeywordsWithEmptyListDoesNothing()]
display-name: removeKeywordsWithEmptyListDoesNothing()
]]></system-out>
</testcase>
<testcase name="getFieldOrAliasLatexFreeBracesAreRemoved()" classname="org.jabref.model.entry.BibEntryTests" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTests]/[method:getFieldOrAliasLatexFreeBracesAreRemoved()]
display-name: getFieldOrAliasLatexFreeBracesAreRemoved()
]]></system-out>
</testcase>
<testcase name="testCompanyAuthor()" classname="org.jabref.model.entry.AuthorListTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testCompanyAuthor()]
display-name: testCompanyAuthor()
]]></system-out>
</testcase>
<testcase name="parseNameWithHyphenInLastName()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithHyphenInLastName()]
display-name: parseNameWithHyphenInLastName()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsFirstFirstAnds()" classname="org.jabref.model.entry.AuthorListTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsFirstFirstAnds()]
display-name: testGetAuthorsFirstFirstAnds()
]]></system-out>
</testcase>
<testcase name="testFixAuthorForAlphabetization()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorForAlphabetization()]
display-name: testFixAuthorForAlphabetization()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsLastOnly()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsLastOnly()]
display-name: testGetAuthorsLastOnly()
]]></system-out>
</testcase>
<testcase name="parseNameWithBracesAroundLastName()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithBracesAroundLastName()]
display-name: parseNameWithBracesAroundLastName()
]]></system-out>
</testcase>
<testcase name="testGetEmptyAuthor()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetEmptyAuthor()]
display-name: testGetEmptyAuthor()
]]></system-out>
</testcase>
<testcase name="testSize()" classname="org.jabref.model.entry.AuthorListTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testSize()]
display-name: testSize()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsLastFirstNoComma()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsLastFirstNoComma()]
display-name: testGetAuthorsLastFirstNoComma()
]]></system-out>
</testcase>
<testcase name="createCorrectInitials()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:createCorrectInitials()]
display-name: createCorrectInitials()
]]></system-out>
</testcase>
<testcase name="correctNamesWithOneComma()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:correctNamesWithOneComma()]
display-name: correctNamesWithOneComma()
]]></system-out>
</testcase>
<testcase name="testFixAuthorFirstNameFirstCommas()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorFirstNameFirstCommas()]
display-name: testFixAuthorFirstNameFirstCommas()
]]></system-out>
</testcase>
<testcase name="testCompanyAuthorAndPerson()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testCompanyAuthorAndPerson()]
display-name: testCompanyAuthorAndPerson()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsNatbib()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsNatbib()]
display-name: testGetAuthorsNatbib()
]]></system-out>
</testcase>
<testcase name="parseNameWithBracesAroundFirstName()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithBracesAroundFirstName()]
display-name: parseNameWithBracesAroundFirstName()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsForAlphabetization()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsForAlphabetization()]
display-name: testGetAuthorsForAlphabetization()
]]></system-out>
</testcase>
<testcase name="testFixAuthorLastNameFirstCommasOxfordComma()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorLastNameFirstCommasOxfordComma()]
display-name: testFixAuthorLastNameFirstCommasOxfordComma()
]]></system-out>
</testcase>
<testcase name="testGetAuthorList()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorList()]
display-name: testGetAuthorList()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsLastFirstOxfordComma()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsLastFirstOxfordComma()]
display-name: testGetAuthorsLastFirstOxfordComma()
]]></system-out>
</testcase>
<testcase name="parseNameWithHyphenInFirstName()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithHyphenInFirstName()]
display-name: parseNameWithHyphenInFirstName()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsLastFirstAndsCaching()" classname="org.jabref.model.entry.AuthorListTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsLastFirstAndsCaching()]
display-name: testGetAuthorsLastFirstAndsCaching()
]]></system-out>
</testcase>
<testcase name="testFixAuthorLastNameFirst()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorLastNameFirst()]
display-name: testFixAuthorLastNameFirst()
]]></system-out>
</testcase>
<testcase name="testFixAuthorLastNameFirstCommasNoComma()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorLastNameFirstCommasNoComma()]
display-name: testFixAuthorLastNameFirstCommasNoComma()
]]></system-out>
</testcase>
<testcase name="parseNameWithHyphenInLastNameWithEscaped()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithHyphenInLastNameWithEscaped()]
display-name: parseNameWithHyphenInLastNameWithEscaped()
]]></system-out>
</testcase>
<testcase name="parseNameWithHyphenInLastNameWithInitials()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithHyphenInLastNameWithInitials()]
display-name: parseNameWithHyphenInLastNameWithInitials()
]]></system-out>
</testcase>
<testcase name="testGetAuthor()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthor()]
display-name: testGetAuthor()
]]></system-out>
</testcase>
<testcase name="parseNameWithBraces()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithBraces()]
display-name: parseNameWithBraces()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsFirstFirst()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsFirstFirst()]
display-name: testGetAuthorsFirstFirst()
]]></system-out>
</testcase>
<testcase name="testFixAuthorNatbib()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorNatbib()]
display-name: testFixAuthorNatbib()
]]></system-out>
</testcase>
<testcase name="testCompanyAuthorWithLowerCaseWord()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testCompanyAuthorWithLowerCaseWord()]
display-name: testCompanyAuthorWithLowerCaseWord()
]]></system-out>
</testcase>
<testcase name="testGetAuthorsLastFirstAnds()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testGetAuthorsLastFirstAnds()]
display-name: testGetAuthorsLastFirstAnds()
]]></system-out>
</testcase>
<testcase name="testFixAuthorLastNameOnlyCommas()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorLastNameOnlyCommas()]
display-name: testFixAuthorLastNameOnlyCommas()
]]></system-out>
</testcase>
<testcase name="testIsEmpty()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testIsEmpty()]
display-name: testIsEmpty()
]]></system-out>
</testcase>
<testcase name="testRemoveStartAndEndBraces()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testRemoveStartAndEndBraces()]
display-name: testRemoveStartAndEndBraces()
]]></system-out>
</testcase>
<testcase name="testAbbreviationWithRelax()" classname="org.jabref.model.entry.AuthorListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testAbbreviationWithRelax()]
display-name: testAbbreviationWithRelax()
]]></system-out>
</testcase>
<testcase name="testFixAuthorFirstNameFirst()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:testFixAuthorFirstNameFirst()]
display-name: testFixAuthorFirstNameFirst()
]]></system-out>
</testcase>
<testcase name="parseNameWithHyphenInLastNameWhenLastNameGivenFirst()" classname="org.jabref.model.entry.AuthorListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorListTest]/[method:parseNameWithHyphenInLastNameWhenLastNameGivenFirst()]
display-name: parseNameWithHyphenInLastNameWhenLastNameGivenFirst()
]]></system-out>
</testcase>
<testcase name="testIsValidFormatCorrect()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testIsValidFormatCorrect()]
display-name: testIsValidFormatCorrect()
]]></system-out>
</testcase>
<testcase name="testIsValidChecksumCorrect()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testIsValidChecksumCorrect()]
display-name: testIsValidChecksumCorrect()
]]></system-out>
</testcase>
<testcase name="testIsCanBeCleaned()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testIsCanBeCleaned()]
display-name: testIsCanBeCleaned()
]]></system-out>
</testcase>
<testcase name="testIsValidFormatIncorrect()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testIsValidFormatIncorrect()]
display-name: testIsValidFormatIncorrect()
]]></system-out>
</testcase>
<testcase name="testIsCanBeCleanedIncorrectRubbish()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testIsCanBeCleanedIncorrectRubbish()]
display-name: testIsCanBeCleanedIncorrectRubbish()
]]></system-out>
</testcase>
<testcase name="testGetCleanedISSNDashAlreadyThere()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testGetCleanedISSNDashAlreadyThere()]
display-name: testGetCleanedISSNDashAlreadyThere()
]]></system-out>
</testcase>
<testcase name="testIsCanBeCleanedDashAlreadyThere()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testIsCanBeCleanedDashAlreadyThere()]
display-name: testIsCanBeCleanedDashAlreadyThere()
]]></system-out>
</testcase>
<testcase name="testIsValidChecksumIncorrect()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testIsValidChecksumIncorrect()]
display-name: testIsValidChecksumIncorrect()
]]></system-out>
</testcase>
<testcase name="testGetCleanedISSNDashRubbish()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testGetCleanedISSNDashRubbish()]
display-name: testGetCleanedISSNDashRubbish()
]]></system-out>
</testcase>
<testcase name="testGetCleanedISSN()" classname="org.jabref.model.entry.identifier.ISSNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISSNTest]/[method:testGetCleanedISSN()]
display-name: testGetCleanedISSN()
]]></system-out>
</testcase>
<testcase name="parseRemovesNewLineCharacterAtEnd()" classname="org.jabref.model.entry.identifier.MathSciNetIdTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.MathSciNetIdTest]/[method:parseRemovesNewLineCharacterAtEnd()]
display-name: parseRemovesNewLineCharacterAtEnd()
]]></system-out>
</testcase>
<testcase name="parseIgnoresArXivPrefix()" classname="org.jabref.model.entry.identifier.ArXivIdentifierTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ArXivIdentifierTest]/[method:parseIgnoresArXivPrefix()]
display-name: parseIgnoresArXivPrefix()
]]></system-out>
</testcase>
<testcase name="parseIgnoresArxivPrefix()" classname="org.jabref.model.entry.identifier.ArXivIdentifierTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ArXivIdentifierTest]/[method:parseIgnoresArxivPrefix()]
display-name: parseIgnoresArxivPrefix()
]]></system-out>
</testcase>
<testcase name="rejectInvalidDirectoryIndicator()" classname="org.jabref.model.entry.identifier.DOITest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:rejectInvalidDirectoryIndicator()]
display-name: rejectInvalidDirectoryIndicator()
]]></system-out>
</testcase>
<testcase name="noDOIFoundInsideArbitraryText()" classname="org.jabref.model.entry.identifier.DOITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:noDOIFoundInsideArbitraryText()]
display-name: noDOIFoundInsideArbitraryText()
]]></system-out>
</testcase>
<testcase name="correctlyDecodeHttpDOIs()" classname="org.jabref.model.entry.identifier.DOITest" time="0.045">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:correctlyDecodeHttpDOIs()]
display-name: correctlyDecodeHttpDOIs()
]]></system-out>
</testcase>
<testcase name="acceptURNPrefix()" classname="org.jabref.model.entry.identifier.DOITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:acceptURNPrefix()]
display-name: acceptURNPrefix()
]]></system-out>
</testcase>
<testcase name="constructCorrectURLForDoi()" classname="org.jabref.model.entry.identifier.DOITest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:constructCorrectURLForDoi()]
display-name: constructCorrectURLForDoi()
]]></system-out>
</testcase>
<testcase name="findDoiInsideArbitraryText()" classname="org.jabref.model.entry.identifier.DOITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:findDoiInsideArbitraryText()]
display-name: findDoiInsideArbitraryText()
]]></system-out>
</testcase>
<testcase name="correctlyEncodeDOIs()" classname="org.jabref.model.entry.identifier.DOITest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:correctlyEncodeDOIs()]
display-name: correctlyEncodeDOIs()
]]></system-out>
</testcase>
<testcase name="rejectMissingDivider()" classname="org.jabref.model.entry.identifier.DOITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:rejectMissingDivider()]
display-name: rejectMissingDivider()
]]></system-out>
</testcase>
<testcase name="acceptPlainDoi()" classname="org.jabref.model.entry.identifier.DOITest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:acceptPlainDoi()]
display-name: acceptPlainDoi()
]]></system-out>
</testcase>
<testcase name="acceptDoiPrefix()" classname="org.jabref.model.entry.identifier.DOITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:acceptDoiPrefix()]
display-name: acceptDoiPrefix()
]]></system-out>
</testcase>
<testcase name="rejectEmbeddedDoi()" classname="org.jabref.model.entry.identifier.DOITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:rejectEmbeddedDoi()]
display-name: rejectEmbeddedDoi()
]]></system-out>
</testcase>
<testcase name="ignoreLeadingAndTrailingWhitespaces()" classname="org.jabref.model.entry.identifier.DOITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:ignoreLeadingAndTrailingWhitespaces()]
display-name: ignoreLeadingAndTrailingWhitespaces()
]]></system-out>
</testcase>
<testcase name="rejectInvalidDoiUri()" classname="org.jabref.model.entry.identifier.DOITest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:rejectInvalidDoiUri()]
display-name: rejectInvalidDoiUri()
]]></system-out>
</testcase>
<testcase name="acceptURLDoi()" classname="org.jabref.model.entry.identifier.DOITest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.DOITest]/[method:acceptURLDoi()]
display-name: acceptURLDoi()
]]></system-out>
</testcase>
<testcase name="testIsValidFormat13Incorrect()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidFormat13Incorrect()]
display-name: testIsValidFormat13Incorrect()
]]></system-out>
</testcase>
<testcase name="testIsValidChecksum10Correct()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidChecksum10Correct()]
display-name: testIsValidChecksum10Correct()
]]></system-out>
</testcase>
<testcase name="testIsValidFormat10Incorrect()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidFormat10Incorrect()]
display-name: testIsValidFormat10Incorrect()
]]></system-out>
</testcase>
<testcase name="testIsIsbn13Incorrect()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsIsbn13Incorrect()]
display-name: testIsIsbn13Incorrect()
]]></system-out>
</testcase>
<testcase name="testIsValidChecksum13Correct()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidChecksum13Correct()]
display-name: testIsValidChecksum13Correct()
]]></system-out>
</testcase>
<testcase name="testIsIsbn10Incorrect()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsIsbn10Incorrect()]
display-name: testIsIsbn10Incorrect()
]]></system-out>
</testcase>
<testcase name="testIsIsbn10Correct()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsIsbn10Correct()]
display-name: testIsIsbn10Correct()
]]></system-out>
</testcase>
<testcase name="testIsValidChecksum13Incorrect()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidChecksum13Incorrect()]
display-name: testIsValidChecksum13Incorrect()
]]></system-out>
</testcase>
<testcase name="testIsValidFormat10Correct()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidFormat10Correct()]
display-name: testIsValidFormat10Correct()
]]></system-out>
</testcase>
<testcase name="testIsValidChecksum10Incorrect()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidChecksum10Incorrect()]
display-name: testIsValidChecksum10Incorrect()
]]></system-out>
</testcase>
<testcase name="testIsIsbn13Correct()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsIsbn13Correct()]
display-name: testIsIsbn13Correct()
]]></system-out>
</testcase>
<testcase name="testIsValidFormat13Correct()" classname="org.jabref.model.entry.identifier.ISBNTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.ISBNTest]/[method:testIsValidFormat13Correct()]
display-name: testIsValidFormat13Correct()
]]></system-out>
</testcase>
<testcase name="acceptPlainEprintWithVersion()" classname="org.jabref.model.entry.identifier.EprintTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:acceptPlainEprintWithVersion()]
display-name: acceptPlainEprintWithVersion()
]]></system-out>
</testcase>
<testcase name="rejectEmbeddedEprint()" classname="org.jabref.model.entry.identifier.EprintTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:rejectEmbeddedEprint()]
display-name: rejectEmbeddedEprint()
]]></system-out>
</testcase>
<testcase name="acceptPlainEprint()" classname="org.jabref.model.entry.identifier.EprintTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:acceptPlainEprint()]
display-name: acceptPlainEprint()
]]></system-out>
</testcase>
<testcase name="acceptArxivPrefix()" classname="org.jabref.model.entry.identifier.EprintTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:acceptArxivPrefix()]
display-name: acceptArxivPrefix()
]]></system-out>
</testcase>
<testcase name="acceptURLEprint()" classname="org.jabref.model.entry.identifier.EprintTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:acceptURLEprint()]
display-name: acceptURLEprint()
]]></system-out>
</testcase>
<testcase name="ignoreLeadingAndTrailingWhitespaces()" classname="org.jabref.model.entry.identifier.EprintTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:ignoreLeadingAndTrailingWhitespaces()]
display-name: ignoreLeadingAndTrailingWhitespaces()
]]></system-out>
</testcase>
<testcase name="constructCorrectURLForEprint()" classname="org.jabref.model.entry.identifier.EprintTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:constructCorrectURLForEprint()]
display-name: constructCorrectURLForEprint()
]]></system-out>
</testcase>
<testcase name="acceptLegacyEprint()" classname="org.jabref.model.entry.identifier.EprintTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:acceptLegacyEprint()]
display-name: acceptLegacyEprint()
]]></system-out>
</testcase>
<testcase name="rejectInvalidEprint()" classname="org.jabref.model.entry.identifier.EprintTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.identifier.EprintTest]/[method:rejectInvalidEprint()]
display-name: rejectInvalidEprint()
]]></system-out>
</testcase>
<testcase name="testOrFieldsThreeTerms()" classname="org.jabref.model.entry.FieldNameTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FieldNameTest]/[method:testOrFieldsThreeTerms()]
display-name: testOrFieldsThreeTerms()
]]></system-out>
</testcase>
<testcase name="testOrFieldsTwoTerms()" classname="org.jabref.model.entry.FieldNameTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FieldNameTest]/[method:testOrFieldsTwoTerms()]
display-name: testOrFieldsTwoTerms()
]]></system-out>
</testcase>
<testcase name="simpleCanonicalRepresentation()" classname="org.jabref.model.entry.CanonicalBibEntryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.CanonicalBibEntryTest]/[method:simpleCanonicalRepresentation()]
display-name: simpleCanonicalRepresentation()
]]></system-out>
</testcase>
<testcase name="canonicalRepresentationWithNewlines()" classname="org.jabref.model.entry.CanonicalBibEntryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.CanonicalBibEntryTest]/[method:canonicalRepresentationWithNewlines()]
display-name: canonicalRepresentationWithNewlines()
]]></system-out>
</testcase>
<testcase name="testGetSingleKeywords()" classname="org.jabref.model.entry.BibEntryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:testGetSingleKeywords()]
display-name: testGetSingleKeywords()
]]></system-out>
</testcase>
<testcase name="testGetEmptyResolvedKeywords()" classname="org.jabref.model.entry.BibEntryTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:testGetEmptyResolvedKeywords()]
display-name: testGetEmptyResolvedKeywords()
]]></system-out>
</testcase>
<testcase name="testGetSingleResolvedKeywords()" classname="org.jabref.model.entry.BibEntryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:testGetSingleResolvedKeywords()]
display-name: testGetSingleResolvedKeywords()
]]></system-out>
</testcase>
<testcase name="testGetEmptyKeywords()" classname="org.jabref.model.entry.BibEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:testGetEmptyKeywords()]
display-name: testGetEmptyKeywords()
]]></system-out>
</testcase>
<testcase name="notOverrideReservedFields()" classname="org.jabref.model.entry.BibEntryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:notOverrideReservedFields()]
display-name: notOverrideReservedFields()
]]></system-out>
</testcase>
<testcase name="testGetAndAddToLinkedFileList()" classname="org.jabref.model.entry.BibEntryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:testGetAndAddToLinkedFileList()]
display-name: testGetAndAddToLinkedFileList()
]]></system-out>
</testcase>
<testcase name="clonedBibentryHasUniqueID()" classname="org.jabref.model.entry.BibEntryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:clonedBibentryHasUniqueID()]
display-name: clonedBibentryHasUniqueID()
]]></system-out>
</testcase>
<testcase name="notClearReservedFields()" classname="org.jabref.model.entry.BibEntryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:notClearReservedFields()]
display-name: notClearReservedFields()
]]></system-out>
</testcase>
<testcase name="getFieldIsCaseInsensitive()" classname="org.jabref.model.entry.BibEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:getFieldIsCaseInsensitive()]
display-name: getFieldIsCaseInsensitive()
]]></system-out>
</testcase>
<testcase name="testGetResolvedKeywords()" classname="org.jabref.model.entry.BibEntryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:testGetResolvedKeywords()]
display-name: testGetResolvedKeywords()
]]></system-out>
</testcase>
<testcase name="testGetKeywords()" classname="org.jabref.model.entry.BibEntryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibEntryTest]/[method:testGetKeywords()]
display-name: testGetKeywords()
]]></system-out>
</testcase>
<testcase name="addDotIfAbbreviationDoNotAddDot()" classname="org.jabref.model.entry.AuthorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorTest]/[method:addDotIfAbbreviationDoNotAddDot()]
display-name: addDotIfAbbreviationDoNotAddDot()
]]></system-out>
</testcase>
<testcase name="addDotIfAbbreviationAddDot()" classname="org.jabref.model.entry.AuthorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.AuthorTest]/[method:addDotIfAbbreviationAddDot()]
display-name: addDotIfAbbreviationAddDot()
]]></system-out>
</testcase>
<testcase name="getAllSubchainsAsStringForSimpleChain()" classname="org.jabref.model.entry.KeywordTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordTest]/[method:getAllSubchainsAsStringForSimpleChain()]
display-name: getAllSubchainsAsStringForSimpleChain()
]]></system-out>
</testcase>
<testcase name="getPathFromRootAsStringForSimpleChain()" classname="org.jabref.model.entry.KeywordTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordTest]/[method:getPathFromRootAsStringForSimpleChain()]
display-name: getPathFromRootAsStringForSimpleChain()
]]></system-out>
</testcase>
<testcase name="givenFieldValueAndDatabaseWhenParsingThenExpectLink()" classname="org.jabref.model.entry.EntryLinkListTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.EntryLinkListTest]/[method:givenFieldValueAndDatabaseWhenParsingThenExpectLink()]
display-name: givenFieldValueAndDatabaseWhenParsingThenExpectLink()
]]></system-out>
</testcase>
<testcase name="givenTargetAndSourceWhenSourceCrossrefTargetThenSourceCrossrefsTarget()" classname="org.jabref.model.entry.EntryLinkListTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.EntryLinkListTest]/[method:givenTargetAndSourceWhenSourceCrossrefTargetThenSourceCrossrefsTarget()]
display-name: givenTargetAndSourceWhenSourceCrossrefTargetThenSourceCrossrefsTarget()
]]></system-out>
</testcase>
<testcase name="givenFieldValueAndDatabaseWhenParsingThenExpectEmptyLinkedEntry()" classname="org.jabref.model.entry.EntryLinkListTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.EntryLinkListTest]/[method:givenFieldValueAndDatabaseWhenParsingThenExpectEmptyLinkedEntry()]
display-name: givenFieldValueAndDatabaseWhenParsingThenExpectEmptyLinkedEntry()
]]></system-out>
</testcase>
<testcase name="givenFieldValueAndDatabaseWhenParsingThenExpectKey()" classname="org.jabref.model.entry.EntryLinkListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.EntryLinkListTest]/[method:givenFieldValueAndDatabaseWhenParsingThenExpectKey()]
display-name: givenFieldValueAndDatabaseWhenParsingThenExpectKey()
]]></system-out>
</testcase>
<testcase name="givenNullFieldValueAndDatabaseWhenParsingThenExpectLinksIsEmpty()" classname="org.jabref.model.entry.EntryLinkListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.EntryLinkListTest]/[method:givenNullFieldValueAndDatabaseWhenParsingThenExpectLinksIsEmpty()]
display-name: givenNullFieldValueAndDatabaseWhenParsingThenExpectLinksIsEmpty()
]]></system-out>
</testcase>
<testcase name="givenFieldValueAndDatabaseWhenParsingThenExpectDataBase()" classname="org.jabref.model.entry.EntryLinkListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.EntryLinkListTest]/[method:givenFieldValueAndDatabaseWhenParsingThenExpectDataBase()]
display-name: givenFieldValueAndDatabaseWhenParsingThenExpectDataBase()
]]></system-out>
</testcase>
<testcase name="handleXmlCharacters()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:handleXmlCharacters()]
display-name: handleXmlCharacters()
]]></system-out>
</testcase>
<testcase name="interpreteLinkAsOnlyMandatoryField()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:interpreteLinkAsOnlyMandatoryField()]
display-name: interpreteLinkAsOnlyMandatoryField()
]]></system-out>
</testcase>
<testcase name="subsetOfFieldsResultsInFileLink()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:subsetOfFieldsResultsInFileLink()]
display-name: subsetOfFieldsResultsInFileLink()
]]></system-out>
</testcase>
<testcase name="testQuoteNull()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:testQuoteNull()]
display-name: testQuoteNull()
]]></system-out>
</testcase>
<testcase name="parseCorrectInput()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:parseCorrectInput()]
display-name: parseCorrectInput()
]]></system-out>
</testcase>
<testcase name="emptyListForEmptyInput()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:emptyListForEmptyInput()]
display-name: emptyListForEmptyInput()
]]></system-out>
</testcase>
<testcase name="testQuoteEmpty()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:testQuoteEmpty()]
display-name: testQuoteEmpty()
]]></system-out>
</testcase>
<testcase name="testEncodeStringArray()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:testEncodeStringArray()]
display-name: testEncodeStringArray()
]]></system-out>
</testcase>
<testcase name="handleEscapedFilePath()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:handleEscapedFilePath()]
display-name: handleEscapedFilePath()
]]></system-out>
</testcase>
<testcase name="ingoreMissingDescription()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:ingoreMissingDescription()]
display-name: ingoreMissingDescription()
]]></system-out>
</testcase>
<testcase name="testQuoteAllCharacters()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:testQuoteAllCharacters()]
display-name: testQuoteAllCharacters()
]]></system-out>
</testcase>
<testcase name="tooManySeparators()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:tooManySeparators()]
display-name: tooManySeparators()
]]></system-out>
</testcase>
<testcase name="testQuoteStandard()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:testQuoteStandard()]
display-name: testQuoteStandard()
]]></system-out>
</testcase>
<testcase name="escapedCharactersInDescription()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:escapedCharactersInDescription()]
display-name: escapedCharactersInDescription()
]]></system-out>
</testcase>
<testcase name="testFileFieldWriterGetStringRepresentation()" classname="org.jabref.model.entry.FileFieldWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.FileFieldWriterTest]/[method:testFileFieldWriterGetStringRepresentation()]
display-name: testFileFieldWriterGetStringRepresentation()
]]></system-out>
</testcase>
<testcase name="testCreateNeutralId()" classname="org.jabref.model.entry.IdGeneratorTest" time="0.033">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.IdGeneratorTest]/[method:testCreateNeutralId()]
display-name: testCreateNeutralId()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.model.entry.BibtexStringTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibtexStringTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="getContentNeverReturnsNull()" classname="org.jabref.model.entry.BibtexStringTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.BibtexStringTest]/[method:getContentNeverReturnsNull()]
display-name: getContentNeverReturnsNull()
]]></system-out>
</testcase>
<testcase name="parseEmptyStringReturnsEmptyList()" classname="org.jabref.model.entry.KeywordListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseEmptyStringReturnsEmptyList()]
display-name: parseEmptyStringReturnsEmptyList()
]]></system-out>
</testcase>
<testcase name="parseTwoHierarchicalChains()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseTwoHierarchicalChains()]
display-name: parseTwoHierarchicalChains()
]]></system-out>
</testcase>
<testcase name="parseOneWordReturnsOneKeyword()" classname="org.jabref.model.entry.KeywordListTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseOneWordReturnsOneKeyword()]
display-name: parseOneWordReturnsOneKeyword()
]]></system-out>
</testcase>
<testcase name="parseTwoWordReturnsTwoKeywordsWithDifferentDelimiter()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseTwoWordReturnsTwoKeywordsWithDifferentDelimiter()]
display-name: parseTwoWordReturnsTwoKeywordsWithDifferentDelimiter()
]]></system-out>
</testcase>
<testcase name="parseWordsWithWhitespaceAndCommaReturnsTwoKeyword()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseWordsWithWhitespaceAndCommaReturnsTwoKeyword()]
display-name: parseWordsWithWhitespaceAndCommaReturnsTwoKeyword()
]]></system-out>
</testcase>
<testcase name="parseWordsWithWhitespaceReturnsOneKeyword()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseWordsWithWhitespaceReturnsOneKeyword()]
display-name: parseWordsWithWhitespaceReturnsOneKeyword()
]]></system-out>
</testcase>
<testcase name="parseIgnoresDuplicates()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseIgnoresDuplicates()]
display-name: parseIgnoresDuplicates()
]]></system-out>
</testcase>
<testcase name="asStringAddsSpaceAfterDelimiter()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:asStringAddsSpaceAfterDelimiter()]
display-name: asStringAddsSpaceAfterDelimiter()
]]></system-out>
</testcase>
<testcase name="parseHierarchicalChain()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseHierarchicalChain()]
display-name: parseHierarchicalChain()
]]></system-out>
</testcase>
<testcase name="parseWordsWithBracketsReturnsOneKeyword()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseWordsWithBracketsReturnsOneKeyword()]
display-name: parseWordsWithBracketsReturnsOneKeyword()
]]></system-out>
</testcase>
<testcase name="parseTwoWordReturnsTwoKeywords()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseTwoWordReturnsTwoKeywords()]
display-name: parseTwoWordReturnsTwoKeywords()
]]></system-out>
</testcase>
<testcase name="parseTwoWordReturnsTwoKeywordsWithoutSpace()" classname="org.jabref.model.entry.KeywordListTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.KeywordListTest]/[method:parseTwoWordReturnsTwoKeywordsWithoutSpace()]
display-name: parseTwoWordReturnsTwoKeywordsWithoutSpace()
]]></system-out>
</testcase>
<testcase name="parseCorrectlyDayMonthYearDate()" classname="org.jabref.model.entry.DateTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.entry.DateTest]/[method:parseCorrectlyDayMonthYearDate()]
display-name: parseCorrectlyDayMonthYearDate()
]]></system-out>
</testcase>
<testcase name="addChildSomewhereInTreeInvokesChangeEvent()" classname="org.jabref.model.TreeNodeTest" time="0.045">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:addChildSomewhereInTreeInvokesChangeEvent()]
display-name: addChildSomewhereInTreeInvokesChangeEvent()
]]></system-out>
</testcase>
<testcase name="removeChildSomewhereInTreeInvokesChangeEvent()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeChildSomewhereInTreeInvokesChangeEvent()]
display-name: removeChildSomewhereInTreeInvokesChangeEvent()
]]></system-out>
</testcase>
<testcase name="moveToInSameLevelAddsAtEnd()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveToInSameLevelAddsAtEnd()]
display-name: moveToInSameLevelAddsAtEnd()
]]></system-out>
</testcase>
<testcase name="getChildCountInSimpleTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getChildCountInSimpleTree()]
display-name: getChildCountInSimpleTree()
]]></system-out>
</testcase>
<testcase name="getChildAtReturnsCorrect()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getChildAtReturnsCorrect()]
display-name: getChildAtReturnsCorrect()
]]></system-out>
</testcase>
<testcase name="getRootReturnsTrueForRoot()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getRootReturnsTrueForRoot()]
display-name: getRootReturnsTrueForRoot()
]]></system-out>
</testcase>
<testcase name="getNextSiblingForRootReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getNextSiblingForRootReturnsEmpty()]
display-name: getNextSiblingForRootReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="removeChildSetsParentToEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeChildSetsParentToEmpty()]
display-name: removeChildSetsParentToEmpty()
]]></system-out>
</testcase>
<testcase name="getPathFromRootInComplexTree()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getPathFromRootInComplexTree()]
display-name: getPathFromRootInComplexTree()
]]></system-out>
</testcase>
<testcase name="removeFromParentRemovesNodeFromChildrenCollection()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeFromParentRemovesNodeFromChildrenCollection()]
display-name: removeFromParentRemovesNodeFromChildrenCollection()
]]></system-out>
</testcase>
<testcase name="getDescendantComplexPath()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getDescendantComplexPath()]
display-name: getDescendantComplexPath()
]]></system-out>
</testcase>
<testcase name="moveNodeSomewhereInTreeInvokesChangeEvent()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveNodeSomewhereInTreeInvokesChangeEvent()]
display-name: moveNodeSomewhereInTreeInvokesChangeEvent()
]]></system-out>
</testcase>
<testcase name="getChildCountInComplexTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getChildCountInComplexTree()]
display-name: getChildCountInComplexTree()
]]></system-out>
</testcase>
<testcase name="getPathFromRootInSimpleTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getPathFromRootInSimpleTree()]
display-name: getPathFromRootInSimpleTree()
]]></system-out>
</testcase>
<testcase name="getParentForRootReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getParentForRootReturnsEmpty()]
display-name: getParentForRootReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="addThrowsExceptionIfNodeHasParent()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:addThrowsExceptionIfNodeHasParent()]
display-name: addThrowsExceptionIfNodeHasParent()
]]></system-out>
</testcase>
<testcase name="isAncestorOfInSimpleTree()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:isAncestorOfInSimpleTree()]
display-name: isAncestorOfInSimpleTree()
]]></system-out>
</testcase>
<testcase name="getParentReturnsCorrect()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getParentReturnsCorrect()]
display-name: getParentReturnsCorrect()
]]></system-out>
</testcase>
<testcase name="getRootReturnsFalseForChild()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getRootReturnsFalseForChild()]
display-name: getRootReturnsFalseForChild()
]]></system-out>
</testcase>
<testcase name="isAncestorOfInComplexTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:isAncestorOfInComplexTree()]
display-name: isAncestorOfInComplexTree()
]]></system-out>
</testcase>
<testcase name="getChildAtInvalidIndexReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getChildAtInvalidIndexReturnsEmpty()]
display-name: getChildAtInvalidIndexReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="getPreviousSiblingForNonexistentReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getPreviousSiblingForNonexistentReturnsEmpty()]
display-name: getPreviousSiblingForNonexistentReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="getPositionInParentForRootThrowsException()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getPositionInParentForRootThrowsException()]
display-name: getPositionInParentForRootThrowsException()
]]></system-out>
</testcase>
<testcase name="getFirstChildAtReturnsCorrect()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getFirstChildAtReturnsCorrect()]
display-name: getFirstChildAtReturnsCorrect()
]]></system-out>
</testcase>
<testcase name="getChildrenReturnsAllChildren()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getChildrenReturnsAllChildren()]
display-name: getChildrenReturnsAllChildren()
]]></system-out>
</testcase>
<testcase name="getIndexedPathFromRootComplexPath()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getIndexedPathFromRootComplexPath()]
display-name: getIndexedPathFromRootComplexPath()
]]></system-out>
</testcase>
<testcase name="isLeafIsCorrectForRootWithoutChildren()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:isLeafIsCorrectForRootWithoutChildren()]
display-name: isLeafIsCorrectForRootWithoutChildren()
]]></system-out>
</testcase>
<testcase name="getLevelInSimpleTree()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getLevelInSimpleTree()]
display-name: getLevelInSimpleTree()
]]></system-out>
</testcase>
<testcase name="moveToInSameLevelWhenNodeWasAfterTargetIndex()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveToInSameLevelWhenNodeWasAfterTargetIndex()]
display-name: moveToInSameLevelWhenNodeWasAfterTargetIndex()
]]></system-out>
</testcase>
<testcase name="moveAllChildrenToAddsAtSpecifiedPosition()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveAllChildrenToAddsAtSpecifiedPosition()]
display-name: moveAllChildrenToAddsAtSpecifiedPosition()
]]></system-out>
</testcase>
<testcase name="getIndexedPathFromRootSimplePath()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getIndexedPathFromRootSimplePath()]
display-name: getIndexedPathFromRootSimplePath()
]]></system-out>
</testcase>
<testcase name="copySubtreeCopiesChildren()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:copySubtreeCopiesChildren()]
display-name: copySubtreeCopiesChildren()
]]></system-out>
</testcase>
<testcase name="getPositionInParentSimpleTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getPositionInParentSimpleTree()]
display-name: getPositionInParentSimpleTree()
]]></system-out>
</testcase>
<testcase name="getNextSiblingForNonexistentReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getNextSiblingForNonexistentReturnsEmpty()]
display-name: getNextSiblingForNonexistentReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="getDescendantSimplePath()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getDescendantSimplePath()]
display-name: getDescendantSimplePath()
]]></system-out>
</testcase>
<testcase name="moveAllChildrenToDescendantThrowsException()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveAllChildrenToDescendantThrowsException()]
display-name: moveAllChildrenToDescendantThrowsException()
]]></system-out>
</testcase>
<testcase name="getDescendantNonExistentReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getDescendantNonExistentReturnsEmpty()]
display-name: getDescendantNonExistentReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="getIndexedPathFromRootReturnsEmptyListForRoot()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getIndexedPathFromRootReturnsEmptyListForRoot()]
display-name: getIndexedPathFromRootReturnsEmptyListForRoot()
]]></system-out>
</testcase>
<testcase name="nodeIsAncestorOfItself()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:nodeIsAncestorOfItself()]
display-name: nodeIsAncestorOfItself()
]]></system-out>
</testcase>
<testcase name="removeFromParentSetsParentToEmpty()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeFromParentSetsParentToEmpty()]
display-name: removeFromParentSetsParentToEmpty()
]]></system-out>
</testcase>
<testcase name="sortChildrenRecursiveSortsInDeeperLevel()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:sortChildrenRecursiveSortsInDeeperLevel()]
display-name: sortChildrenRecursiveSortsInDeeperLevel()
]]></system-out>
</testcase>
<testcase name="isNodeDescendantInComplex()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:isNodeDescendantInComplex()]
display-name: isNodeDescendantInComplex()
]]></system-out>
</testcase>
<testcase name="getIndexOfChild()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getIndexOfChild()]
display-name: getIndexOfChild()
]]></system-out>
</testcase>
<testcase name="constructorChecksThatClassImplementsCorrectInterface()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:constructorChecksThatClassImplementsCorrectInterface()]
display-name: constructorChecksThatClassImplementsCorrectInterface()
]]></system-out>
</testcase>
<testcase name="getRootInComplexTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getRootInComplexTree()]
display-name: getRootInComplexTree()
]]></system-out>
</testcase>
<testcase name="removeChildIndexSetsParentToEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeChildIndexSetsParentToEmpty()]
display-name: removeChildIndexSetsParentToEmpty()
]]></system-out>
</testcase>
<testcase name="removeChildIndexRemovesNodeFromChildrenCollection()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeChildIndexRemovesNodeFromChildrenCollection()]
display-name: removeChildIndexRemovesNodeFromChildrenCollection()
]]></system-out>
</testcase>
<testcase name="newTreeNodeHasNoParentOrChildren()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:newTreeNodeHasNoParentOrChildren()]
display-name: newTreeNodeHasNoParentOrChildren()
]]></system-out>
</testcase>
<testcase name="findChildrenWithSameName()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:findChildrenWithSameName()]
display-name: findChildrenWithSameName()
]]></system-out>
</testcase>
<testcase name="getIndexOfNonExistentChildReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getIndexOfNonExistentChildReturnsEmpty()]
display-name: getIndexOfNonExistentChildReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="moveToAddsAsLastChildInSimpleTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveToAddsAsLastChildInSimpleTree()]
display-name: moveToAddsAsLastChildInSimpleTree()
]]></system-out>
</testcase>
<testcase name="sortChildrenSortsInFirstLevel()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:sortChildrenSortsInFirstLevel()]
display-name: sortChildrenSortsInFirstLevel()
]]></system-out>
</testcase>
<testcase name="removeAllChildrenSetsParentOfChildToEmpty()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeAllChildrenSetsParentOfChildToEmpty()]
display-name: removeAllChildrenSetsParentOfChildToEmpty()
]]></system-out>
</testcase>
<testcase name="getLevelOfRoot()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getLevelOfRoot()]
display-name: getLevelOfRoot()
]]></system-out>
</testcase>
<testcase name="moveAllChildrenToChangesParent()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveAllChildrenToChangesParent()]
display-name: moveAllChildrenToChangesParent()
]]></system-out>
</testcase>
<testcase name="removeChildIndexSomewhereInTreeInvokesChangeEvent()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeChildIndexSomewhereInTreeInvokesChangeEvent()]
display-name: removeChildIndexSomewhereInTreeInvokesChangeEvent()
]]></system-out>
</testcase>
<testcase name="moveToChangesParent()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveToChangesParent()]
display-name: moveToChangesParent()
]]></system-out>
</testcase>
<testcase name="getPreviousSiblingForRootReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getPreviousSiblingForRootReturnsEmpty()]
display-name: getPreviousSiblingForRootReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="moveToAddsAsLastChildInComplexTree()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveToAddsAsLastChildInComplexTree()]
display-name: moveToAddsAsLastChildInComplexTree()
]]></system-out>
</testcase>
<testcase name="getLevelInComplexTree()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getLevelInComplexTree()]
display-name: getLevelInComplexTree()
]]></system-out>
</testcase>
<testcase name="getFirstChildAtLeafReturnsEmpty()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getFirstChildAtLeafReturnsEmpty()]
display-name: getFirstChildAtLeafReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="getRootInSimpleTree()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getRootInSimpleTree()]
display-name: getRootInSimpleTree()
]]></system-out>
</testcase>
<testcase name="removeChildRemovesNodeFromChildrenCollection()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeChildRemovesNodeFromChildrenCollection()]
display-name: removeChildRemovesNodeFromChildrenCollection()
]]></system-out>
</testcase>
<testcase name="getNextSiblingReturnsCorrect()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getNextSiblingReturnsCorrect()]
display-name: getNextSiblingReturnsCorrect()
]]></system-out>
</testcase>
<testcase name="getPreviousSiblingReturnsCorrect()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getPreviousSiblingReturnsCorrect()]
display-name: getPreviousSiblingReturnsCorrect()
]]></system-out>
</testcase>
<testcase name="getRootOfSingleNode()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:getRootOfSingleNode()]
display-name: getRootOfSingleNode()
]]></system-out>
</testcase>
<testcase name="removeAllChildrenRemovesAllNodesFromChildrenCollection()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:removeAllChildrenRemovesAllNodesFromChildrenCollection()]
display-name: removeAllChildrenRemovesAllNodesFromChildrenCollection()
]]></system-out>
</testcase>
<testcase name="constructorExceptsCorrectImplementation()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:constructorExceptsCorrectImplementation()]
display-name: constructorExceptsCorrectImplementation()
]]></system-out>
</testcase>
<testcase name="moveToInSameLevelWhenNodeWasBeforeTargetIndex()" classname="org.jabref.model.TreeNodeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:moveToInSameLevelWhenNodeWasBeforeTargetIndex()]
display-name: moveToInSameLevelWhenNodeWasBeforeTargetIndex()
]]></system-out>
</testcase>
<testcase name="isNodeDescendantInFirstLevel()" classname="org.jabref.model.TreeNodeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.TreeNodeTest]/[method:isNodeDescendantInFirstLevel()]
display-name: isNodeDescendantInFirstLevel()
]]></system-out>
</testcase>
<testcase name="getFileDirectoriesWithRelativeDbParent()" classname="org.jabref.model.database.BibDatabaseContextTest" time="0.048">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseContextTest]/[method:getFileDirectoriesWithRelativeDbParent()]
display-name: getFileDirectoriesWithRelativeDbParent()
]]></system-out>
</testcase>
<testcase name="getFileDirectoriesWithAbsoluteDbParent()" classname="org.jabref.model.database.BibDatabaseContextTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseContextTest]/[method:getFileDirectoriesWithAbsoluteDbParent()]
display-name: getFileDirectoriesWithAbsoluteDbParent()
]]></system-out>
</testcase>
<testcase name="getFileDirectoriesWithEmptyDbParent()" classname="org.jabref.model.database.BibDatabaseContextTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseContextTest]/[method:getFileDirectoriesWithEmptyDbParent()]
display-name: getFileDirectoriesWithEmptyDbParent()
]]></system-out>
</testcase>
<testcase name="getFileDirectoriesWithRelativeDottedDbParent()" classname="org.jabref.model.database.BibDatabaseContextTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseContextTest]/[method:getFileDirectoriesWithRelativeDottedDbParent()]
display-name: getFileDirectoriesWithRelativeDottedDbParent()
]]></system-out>
</testcase>
<testcase name="givenNothingWhenCreatingThenNotNull()" classname="org.jabref.model.database.event.AutosaveEventTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.event.AutosaveEventTest]/[method:givenNothingWhenCreatingThenNotNull()]
display-name: givenNothingWhenCreatingThenNotNull()
]]></system-out>
</testcase>
<testcase name="detectUndistinguishableAsBibtex()" classname="org.jabref.model.database.BibDatabaseModeDetectionTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseModeDetectionTest]/[method:detectUndistinguishableAsBibtex()]
display-name: detectUndistinguishableAsBibtex()
]]></system-out>
</testcase>
<testcase name="detectMixedModeAsBiblatex()" classname="org.jabref.model.database.BibDatabaseModeDetectionTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseModeDetectionTest]/[method:detectMixedModeAsBiblatex()]
display-name: detectMixedModeAsBiblatex()
]]></system-out>
</testcase>
<testcase name="ignoreUnknownTypesForBibtexDecision()" classname="org.jabref.model.database.BibDatabaseModeDetectionTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseModeDetectionTest]/[method:ignoreUnknownTypesForBibtexDecision()]
display-name: ignoreUnknownTypesForBibtexDecision()
]]></system-out>
</testcase>
<testcase name="detectUnknownTypeAsBibtex()" classname="org.jabref.model.database.BibDatabaseModeDetectionTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseModeDetectionTest]/[method:detectUnknownTypeAsBibtex()]
display-name: detectUnknownTypeAsBibtex()
]]></system-out>
</testcase>
<testcase name="ignoreUnknownTypesForBiblatexDecision()" classname="org.jabref.model.database.BibDatabaseModeDetectionTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseModeDetectionTest]/[method:ignoreUnknownTypesForBiblatexDecision()]
display-name: ignoreUnknownTypesForBiblatexDecision()
]]></system-out>
</testcase>
<testcase name="detectBiblatex()" classname="org.jabref.model.database.BibDatabaseModeDetectionTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseModeDetectionTest]/[method:detectBiblatex()]
display-name: detectBiblatex()
]]></system-out>
</testcase>
<testcase name="addEmptyCiteKey()" classname="org.jabref.model.database.DuplicationCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.DuplicationCheckerTest]/[method:addEmptyCiteKey()]
display-name: addEmptyCiteKey()
]]></system-out>
</testcase>
<testcase name="addEntry()" classname="org.jabref.model.database.DuplicationCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.DuplicationCheckerTest]/[method:addEntry()]
display-name: addEntry()
]]></system-out>
</testcase>
<testcase name="removeEmptyCiteKey()" classname="org.jabref.model.database.DuplicationCheckerTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.DuplicationCheckerTest]/[method:removeEmptyCiteKey()]
display-name: removeEmptyCiteKey()
]]></system-out>
</testcase>
<testcase name="removeMultipleCiteKeys()" classname="org.jabref.model.database.DuplicationCheckerTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.DuplicationCheckerTest]/[method:removeMultipleCiteKeys()]
display-name: removeMultipleCiteKeys()
]]></system-out>
</testcase>
<testcase name="addAndRemoveEntry()" classname="org.jabref.model.database.DuplicationCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.DuplicationCheckerTest]/[method:addAndRemoveEntry()]
display-name: addAndRemoveEntry()
]]></system-out>
</testcase>
<testcase name="changeCiteKey()" classname="org.jabref.model.database.DuplicationCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.DuplicationCheckerTest]/[method:changeCiteKey()]
display-name: changeCiteKey()
]]></system-out>
</testcase>
<testcase name="setCiteKeySameKeyDifferentEntries()" classname="org.jabref.model.database.DuplicationCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.DuplicationCheckerTest]/[method:setCiteKeySameKeyDifferentEntries()]
display-name: setCiteKeySameKeyDifferentEntries()
]]></system-out>
</testcase>
<testcase name="testRelatedAllEntriesRemoved()" classname="org.jabref.model.database.KeyChangeListenerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.KeyChangeListenerTest]/[method:testRelatedAllEntriesRemoved()]
display-name: testRelatedAllEntriesRemoved()
]]></system-out>
</testcase>
<testcase name="testRelatedEntryRemoved()" classname="org.jabref.model.database.KeyChangeListenerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.KeyChangeListenerTest]/[method:testRelatedEntryRemoved()]
display-name: testRelatedEntryRemoved()
]]></system-out>
</testcase>
<testcase name="testRelatedChangedInSameEntry()" classname="org.jabref.model.database.KeyChangeListenerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.KeyChangeListenerTest]/[method:testRelatedChangedInSameEntry()]
display-name: testRelatedChangedInSameEntry()
]]></system-out>
</testcase>
<testcase name="testCrossrefEntryRemoved()" classname="org.jabref.model.database.KeyChangeListenerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.KeyChangeListenerTest]/[method:testCrossrefEntryRemoved()]
display-name: testCrossrefEntryRemoved()
]]></system-out>
</testcase>
<testcase name="testCrossrefChanged()" classname="org.jabref.model.database.KeyChangeListenerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.KeyChangeListenerTest]/[method:testCrossrefChanged()]
display-name: testCrossrefChanged()
]]></system-out>
</testcase>
<testcase name="testCrossrefRemoved()" classname="org.jabref.model.database.KeyChangeListenerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.KeyChangeListenerTest]/[method:testCrossrefRemoved()]
display-name: testCrossrefRemoved()
]]></system-out>
</testcase>
<testcase name="testRelatedChanged()" classname="org.jabref.model.database.KeyChangeListenerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.KeyChangeListenerTest]/[method:testRelatedChanged()]
display-name: testRelatedChanged()
]]></system-out>
</testcase>
<testcase name="hasStringLabelFindsString()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:hasStringLabelFindsString()]
display-name: hasStringLabelFindsString()
]]></system-out>
</testcase>
<testcase name="removeEntryPostsRemovedEntryEvent()" classname="org.jabref.model.database.BibDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:removeEntryPostsRemovedEntryEvent()]
display-name: removeEntryPostsRemovedEntryEvent()
]]></system-out>
</testcase>
<testcase name="getUsedStrings()" classname="org.jabref.model.database.BibDatabaseTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:getUsedStrings()]
display-name: getUsedStrings()
]]></system-out>
</testcase>
<testcase name="removeNullEntryThrowsException()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:removeNullEntryThrowsException()]
display-name: removeNullEntryThrowsException()
]]></system-out>
</testcase>
<testcase name="changingEntryPostsChangeEntryEvent()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:changingEntryPostsChangeEntryEvent()]
display-name: changingEntryPostsChangeEntryEvent()
]]></system-out>
</testcase>
<testcase name="insertEntryWithSameIdThrowsException()" classname="org.jabref.model.database.BibDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:insertEntryWithSameIdThrowsException()]
display-name: insertEntryWithSameIdThrowsException()
]]></system-out>
</testcase>
<testcase name="preambleIsEmptyIfNotSet()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:preambleIsEmptyIfNotSet()]
display-name: preambleIsEmptyIfNotSet()
]]></system-out>
</testcase>
<testcase name="insertEntryAddsEntryToEntriesList()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:insertEntryAddsEntryToEntriesList()]
display-name: insertEntryAddsEntryToEntriesList()
]]></system-out>
</testcase>
<testcase name="getUsedStringsSingleString()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:getUsedStringsSingleString()]
display-name: getUsedStringsSingleString()
]]></system-out>
</testcase>
<testcase name="correctKeyCountAfterRemoving()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:correctKeyCountAfterRemoving()]
display-name: correctKeyCountAfterRemoving()
]]></system-out>
</testcase>
<testcase name="removeEntryRemovesEntryFromEntriesList()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:removeEntryRemovesEntryFromEntriesList()]
display-name: removeEntryRemovesEntryFromEntriesList()
]]></system-out>
</testcase>
<testcase name="addSameStringIdTwiceThrowsKeyCollisionException()" classname="org.jabref.model.database.BibDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:addSameStringIdTwiceThrowsKeyCollisionException()]
display-name: addSameStringIdTwiceThrowsKeyCollisionException()
]]></system-out>
</testcase>
<testcase name="resolveForStringsOddHashMarkAtTheEnd()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:resolveForStringsOddHashMarkAtTheEnd()]
display-name: resolveForStringsOddHashMarkAtTheEnd()
]]></system-out>
</testcase>
<testcase name="circularStringResolving()" classname="org.jabref.model.database.BibDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:circularStringResolving()]
display-name: circularStringResolving()
]]></system-out>
</testcase>
<testcase name="resolveForStringsMonth()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:resolveForStringsMonth()]
display-name: resolveForStringsMonth()
]]></system-out>
</testcase>
<testcase name="circularStringResolvingLongerCycle()" classname="org.jabref.model.database.BibDatabaseTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:circularStringResolvingLongerCycle()]
display-name: circularStringResolvingLongerCycle()
]]></system-out>
</testcase>
<testcase name="insertNullEntryThrowsException()" classname="org.jabref.model.database.BibDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:insertNullEntryThrowsException()]
display-name: insertNullEntryThrowsException()
]]></system-out>
</testcase>
<testcase name="insertStringUpdatesStringList()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:insertStringUpdatesStringList()]
display-name: insertStringUpdatesStringList()
]]></system-out>
</testcase>
<testcase name="correctKeyCountOne()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:correctKeyCountOne()]
display-name: correctKeyCountOne()
]]></system-out>
</testcase>
<testcase name="correctKeyCountTwo()" classname="org.jabref.model.database.BibDatabaseTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:correctKeyCountTwo()]
display-name: correctKeyCountTwo()
]]></system-out>
</testcase>
<testcase name="setPreambleWorks()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:setPreambleWorks()]
display-name: setPreambleWorks()
]]></system-out>
</testcase>
<testcase name="removeStringUpdatesStringList()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:removeStringUpdatesStringList()]
display-name: removeStringUpdatesStringList()
]]></system-out>
</testcase>
<testcase name="insertEntryPostsAddedEntryEvent()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:insertEntryPostsAddedEntryEvent()]
display-name: insertEntryPostsAddedEntryEvent()
]]></system-out>
</testcase>
<testcase name="emptyDatabaseHasNoStrings()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:emptyDatabaseHasNoStrings()]
display-name: emptyDatabaseHasNoStrings()
]]></system-out>
</testcase>
<testcase name="getEntriesSortedWithTwoEntries()" classname="org.jabref.model.database.BibDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:getEntriesSortedWithTwoEntries()]
display-name: getEntriesSortedWithTwoEntries()
]]></system-out>
</testcase>
<testcase name="addSameStringLabelTwiceThrowsKeyCollisionException()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:addSameStringLabelTwiceThrowsKeyCollisionException()]
display-name: addSameStringLabelTwiceThrowsKeyCollisionException()
]]></system-out>
</testcase>
<testcase name="containsEntryIdFindsEntry()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:containsEntryIdFindsEntry()]
display-name: containsEntryIdFindsEntry()
]]></system-out>
</testcase>
<testcase name="getUsedStringsNoString()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:getUsedStringsNoString()]
display-name: getUsedStringsNoString()
]]></system-out>
</testcase>
<testcase name="resolveForStringsSurroundingContent()" classname="org.jabref.model.database.BibDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.model.database.BibDatabaseTest]/[method:resolveForStringsSurroundingContent()]
display-name: resolveForStringsSurroundingContent()
]]></system-out>
</testcase>
<testcase name="rootGroupIsAllEntriesByDefault()" classname="org.jabref.gui.groups.GroupTreeViewModelTest" time="0.782">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupTreeViewModelTest]/[method:rootGroupIsAllEntriesByDefault()]
display-name: rootGroupIsAllEntriesByDefault()
]]></system-out>
</testcase>
<testcase name="keywordGroupsAreNotRemovedFromEntriesOnDelete()" classname="org.jabref.gui.groups.GroupTreeViewModelTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupTreeViewModelTest]/[method:keywordGroupsAreNotRemovedFromEntriesOnDelete()]
display-name: keywordGroupsAreNotRemovedFromEntriesOnDelete()
]]></system-out>
</testcase>
<testcase name="explicitGroupsAreRemovedFromEntriesOnDelete()" classname="org.jabref.gui.groups.GroupTreeViewModelTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupTreeViewModelTest]/[method:explicitGroupsAreRemovedFromEntriesOnDelete()]
display-name: explicitGroupsAreRemovedFromEntriesOnDelete()
]]></system-out>
</testcase>
<testcase name="entriesAreAddedCorrectly()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.085">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:entriesAreAddedCorrectly()]
display-name: entriesAreAddedCorrectly()
]]></system-out>
</testcase>
<testcase name="draggedOnTopOfGroupAddsBeforeIt()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.015">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:draggedOnTopOfGroupAddsBeforeIt()]
display-name: draggedOnTopOfGroupAddsBeforeIt()
]]></system-out>
</testcase>
<testcase name="treeOfAutomaticKeywordGroupIsCombined()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.042">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:treeOfAutomaticKeywordGroupIsCombined()]
display-name: treeOfAutomaticKeywordGroupIsCombined()
]]></system-out>
</testcase>
<testcase name="alwaysMatchedByEmptySearchString()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:alwaysMatchedByEmptySearchString()]
display-name: alwaysMatchedByEmptySearchString()
]]></system-out>
</testcase>
<testcase name="draggedOnBottomOfGroupAddsAfterItWhenSourceGroupWasBefore()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:draggedOnBottomOfGroupAddsAfterItWhenSourceGroupWasBefore()]
display-name: draggedOnBottomOfGroupAddsAfterItWhenSourceGroupWasBefore()
]]></system-out>
</testcase>
<testcase name="draggedOnBottomOfGroupAddsAfterIt()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:draggedOnBottomOfGroupAddsAfterIt()]
display-name: draggedOnBottomOfGroupAddsAfterIt()
]]></system-out>
</testcase>
<testcase name="isMatchedIfContainsPartOfSearchString()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.115">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:isMatchedIfContainsPartOfSearchString()]
display-name: isMatchedIfContainsPartOfSearchString()
]]></system-out>
</testcase>
<testcase name="getDisplayNameConvertsLatexToUnicode()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:getDisplayNameConvertsLatexToUnicode()]
display-name: getDisplayNameConvertsLatexToUnicode()
]]></system-out>
</testcase>
<testcase name="draggedOnTopOfGroupAddsBeforeItWhenSourceGroupWasBefore()" classname="org.jabref.gui.groups.GroupNodeViewModelTest" time="0.013">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.groups.GroupNodeViewModelTest]/[method:draggedOnTopOfGroupAddsBeforeItWhenSourceGroupWasBefore()]
display-name: draggedOnTopOfGroupAddsBeforeItWhenSourceGroupWasBefore()
]]></system-out>
</testcase>
<testcase name="extractBibEntriesFromClipboardReturnsEmptyIfStringparsingFailed()" classname="org.jabref.gui.ClipBoardManagerTest" time="0.336">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.ClipBoardManagerTest]/[method:extractBibEntriesFromClipboardReturnsEmptyIfStringparsingFailed()]
display-name: extractBibEntriesFromClipboardReturnsEmptyIfStringparsingFailed()
]]></system-out>
</testcase>
<testcase name="extractBibEntriesFromClipboardParsesStringFlavor()" classname="org.jabref.gui.ClipBoardManagerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.ClipBoardManagerTest]/[method:extractBibEntriesFromClipboardParsesStringFlavor()]
display-name: extractBibEntriesFromClipboardParsesStringFlavor()
]]></system-out>
</testcase>
<testcase name="validIdentifierIsNotPresentIsTrueForEmptyText()" classname="org.jabref.gui.fieldeditors.IdentifierEditorViewModelTest" time="0.135">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.fieldeditors.IdentifierEditorViewModelTest]/[method:validIdentifierIsNotPresentIsTrueForEmptyText()]
display-name: validIdentifierIsNotPresentIsTrueForEmptyText()
]]></system-out>
</testcase>
<testcase name="testAmpersandConversion()" classname="org.jabref.gui.fieldeditors.HtmlTransferableTest" time="0.064">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.fieldeditors.HtmlTransferableTest]/[method:testAmpersandConversion()]
display-name: testAmpersandConversion()
]]></system-out>
</testcase>
<testcase name="testSimpleDivConstruct()" classname="org.jabref.gui.fieldeditors.HtmlTransferableTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.fieldeditors.HtmlTransferableTest]/[method:testSimpleDivConstruct()]
display-name: testSimpleDivConstruct()
]]></system-out>
</testcase>
<testcase name="testGenerateMagicSpaces()" classname="org.jabref.gui.fieldeditors.HtmlTransferableTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.fieldeditors.HtmlTransferableTest]/[method:testGenerateMagicSpaces()]
display-name: testGenerateMagicSpaces()
]]></system-out>
</testcase>
<testcase name="testAdvancedDivConstruct()" classname="org.jabref.gui.fieldeditors.HtmlTransferableTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.fieldeditors.HtmlTransferableTest]/[method:testAdvancedDivConstruct()]
display-name: testAdvancedDivConstruct()
]]></system-out>
</testcase>
<testcase name="testSimpleQuery()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="3.964">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testSimpleQuery()]
display-name: testSimpleQuery()
]]></system-out>
</testcase>
<testcase name="testSimpleQueryCaseSensitiveRegex()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testSimpleQueryCaseSensitiveRegex()]
display-name: testSimpleQueryCaseSensitiveRegex()
]]></system-out>
</testcase>
<testcase name="testComplexQueryCaseSensitive()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="0.02">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testComplexQueryCaseSensitive()]
display-name: testComplexQueryCaseSensitive()
]]></system-out>
</testcase>
<testcase name="testSimpleQueryRegex()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testSimpleQueryRegex()]
display-name: testSimpleQueryRegex()
]]></system-out>
</testcase>
<testcase name="testComplexQuery()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testComplexQuery()]
display-name: testComplexQuery()
]]></system-out>
</testcase>
<testcase name="testSimpleQueryCaseSensitive()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testSimpleQueryCaseSensitive()]
display-name: testSimpleQueryCaseSensitive()
]]></system-out>
</testcase>
<testcase name="testComplexQueryCaseSensitiveRegex()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testComplexQueryCaseSensitiveRegex()]
display-name: testComplexQueryCaseSensitiveRegex()
]]></system-out>
</testcase>
<testcase name="testComplexQueryRegex()" classname="org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.GrammarBasedSearchRuleDescriberTest]/[method:testComplexQueryRegex()]
display-name: testComplexQueryRegex()
]]></system-out>
</testcase>
<testcase name="testNoAstRegexCaseSensitive()" classname="org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest]/[method:testNoAstRegexCaseSensitive()]
display-name: testNoAstRegexCaseSensitive()
]]></system-out>
</testcase>
<testcase name="testNoAst()" classname="org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest]/[method:testNoAst()]
display-name: testNoAst()
]]></system-out>
</testcase>
<testcase name="testNoAstRegex()" classname="org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest]/[method:testNoAstRegex()]
display-name: testNoAstRegex()
]]></system-out>
</testcase>
<testcase name="testNoAstCaseSensitive()" classname="org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.search.ContainsAndRegexBasedSearchRuleDescriberTest]/[method:testNoAstCaseSensitive()]
display-name: testNoAstCaseSensitive()
]]></system-out>
</testcase>
<testcase name="updateTimestampEnabled()" classname="org.jabref.gui.UpdateTimestampListenerTest" time="0.382">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.UpdateTimestampListenerTest]/[method:updateTimestampEnabled()]
display-name: updateTimestampEnabled()
]]></system-out>
</testcase>
<testcase name="updateTimestampDisabled()" classname="org.jabref.gui.UpdateTimestampListenerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.UpdateTimestampListenerTest]/[method:updateTimestampDisabled()]
display-name: updateTimestampDisabled()
]]></system-out>
</testcase>
<testcase name="processText()" classname="org.jabref.gui.worker.CitationStyleToClipboardWorkerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.worker.CitationStyleToClipboardWorkerTest]/[method:processText()]
display-name: processText()
]]></system-out>
</testcase>
<testcase name="processRtf()" classname="org.jabref.gui.worker.CitationStyleToClipboardWorkerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.worker.CitationStyleToClipboardWorkerTest]/[method:processRtf()]
display-name: processRtf()
]]></system-out>
</testcase>
<testcase name="processPreviewHtml()" classname="org.jabref.gui.worker.CitationStyleToClipboardWorkerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.worker.CitationStyleToClipboardWorkerTest]/[method:processPreviewHtml()]
display-name: processPreviewHtml()
]]></system-out>
</testcase>
<testcase name="processPreviewText()" classname="org.jabref.gui.worker.CitationStyleToClipboardWorkerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.worker.CitationStyleToClipboardWorkerTest]/[method:processPreviewText()]
display-name: processPreviewText()
]]></system-out>
</testcase>
<testcase name="processHtmlAsHtml()" classname="org.jabref.gui.worker.CitationStyleToClipboardWorkerTest" time="0.032">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.worker.CitationStyleToClipboardWorkerTest]/[method:processHtmlAsHtml()]
display-name: processHtmlAsHtml()
]]></system-out>
</testcase>
<testcase name="processHtmlAsText()" classname="org.jabref.gui.worker.CitationStyleToClipboardWorkerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.worker.CitationStyleToClipboardWorkerTest]/[method:processHtmlAsText()]
display-name: processHtmlAsText()
]]></system-out>
</testcase>
<testcase name="processXslFo()" classname="org.jabref.gui.worker.CitationStyleToClipboardWorkerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.worker.CitationStyleToClipboardWorkerTest]/[method:processXslFo()]
display-name: processXslFo()
]]></system-out>
</testcase>
<testcase name="getMimeTypeMustNotReturnNull()" classname="org.jabref.gui.externalfiletype.ExternalFileTypeTest" time="0.651">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.externalfiletype.ExternalFileTypeTest]/[method:getMimeTypeMustNotReturnNull()]
display-name: getMimeTypeMustNotReturnNull()
]]></system-out>
</testcase>
<testcase name="getOpenWithApplicationMustNotReturnNull()" classname="org.jabref.gui.externalfiletype.ExternalFileTypeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.externalfiletype.ExternalFileTypeTest]/[method:getOpenWithApplicationMustNotReturnNull()]
display-name: getOpenWithApplicationMustNotReturnNull()
]]></system-out>
</testcase>
<testcase name="getExtensionMustNotReturnNull()" classname="org.jabref.gui.externalfiletype.ExternalFileTypeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.externalfiletype.ExternalFileTypeTest]/[method:getExtensionMustNotReturnNull()]
display-name: getExtensionMustNotReturnNull()
]]></system-out>
</testcase>
<testcase name="addsAllChildrenOfChildNode()" classname="org.jabref.gui.util.RecursiveTreeItemTest" time="0.048">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.RecursiveTreeItemTest]/[method:addsAllChildrenOfChildNode()]
display-name: addsAllChildrenOfChildNode()
]]></system-out>
</testcase>
<testcase name="addsAllChildrenNodes()" classname="org.jabref.gui.util.RecursiveTreeItemTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.RecursiveTreeItemTest]/[method:addsAllChildrenNodes()]
display-name: addsAllChildrenNodes()
]]></system-out>
</testcase>
<testcase name="respectsFilter()" classname="org.jabref.gui.util.RecursiveTreeItemTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.RecursiveTreeItemTest]/[method:respectsFilter()]
display-name: respectsFilter()
]]></system-out>
</testcase>
<testcase name="testFormatToTextsNoReplacements()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testFormatToTextsNoReplacements()]
display-name: testFormatToTextsNoReplacements()
]]></system-out>
</testcase>
<testcase name="testCreateTextItalic()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testCreateTextItalic()]
display-name: testCreateTextItalic()
]]></system-out>
</testcase>
<testcase name="testCreateTextBold()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testCreateTextBold()]
display-name: testCreateTextBold()
]]></system-out>
</testcase>
<testcase name="testTextToHTMLStringWithLinebreaks()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testTextToHTMLStringWithLinebreaks()]
display-name: testTextToHTMLStringWithLinebreaks()
]]></system-out>
</testcase>
<testcase name="testTextToHTMLStringBold()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testTextToHTMLStringBold()]
display-name: testTextToHTMLStringBold()
]]></system-out>
</testcase>
<testcase name="testTextToHTMLStringItalic()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testTextToHTMLStringItalic()]
display-name: testTextToHTMLStringItalic()
]]></system-out>
</testcase>
<testcase name="testFormatToTextsMiddle()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testFormatToTextsMiddle()]
display-name: testFormatToTextsMiddle()
]]></system-out>
</testcase>
<testcase name="testCreateTextMonospaced()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testCreateTextMonospaced()]
display-name: testCreateTextMonospaced()
]]></system-out>
</testcase>
<testcase name="testTextToHTMLStringMonospacedBold()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testTextToHTMLStringMonospacedBold()]
display-name: testTextToHTMLStringMonospacedBold()
]]></system-out>
</testcase>
<testcase name="testCreateText()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testCreateText()]
display-name: testCreateText()
]]></system-out>
</testcase>
<testcase name="testTextToHTMLStringMonospaced()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testTextToHTMLStringMonospaced()]
display-name: testTextToHTMLStringMonospaced()
]]></system-out>
</testcase>
<testcase name="testFormatToTextsEnd()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testFormatToTextsEnd()]
display-name: testFormatToTextsEnd()
]]></system-out>
</testcase>
<testcase name="testFormatToTextsBegin()" classname="org.jabref.gui.util.TooltipTextUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.util.TooltipTextUtilTest]/[method:testFormatToTextsBegin()]
display-name: testFormatToTextsBegin()
]]></system-out>
</testcase>
<testcase name="testRandomNewKeyKeyBindingInRepository()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.096">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testRandomNewKeyKeyBindingInRepository()]
display-name: testRandomNewKeyKeyBindingInRepository()
]]></system-out>
</testcase>
<testcase name="testSaveNewKeyBindingsToPreferences()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testSaveNewKeyBindingsToPreferences()]
display-name: testSaveNewKeyBindingsToPreferences()
]]></system-out>
</testcase>
<testcase name="testSetAllKeyBindingsToDefault()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testSetAllKeyBindingsToDefault()]
display-name: testSetAllKeyBindingsToDefault()
]]></system-out>
</testcase>
<testcase name="testConversionAwtKeyEventJavafxKeyEvent()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="1.215">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testConversionAwtKeyEventJavafxKeyEvent()]
display-name: testConversionAwtKeyEventJavafxKeyEvent()
]]></system-out>
</testcase>
<testcase name="testSpecialKeysValidKeyBindingIsSaved()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testSpecialKeysValidKeyBindingIsSaved()]
display-name: testSpecialKeysValidKeyBindingIsSaved()
]]></system-out>
</testcase>
<testcase name="testInvalidKeyBindingIsNotSaved()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testInvalidKeyBindingIsNotSaved()]
display-name: testInvalidKeyBindingIsNotSaved()
]]></system-out>
</testcase>
<testcase name="testCloseEntryEditorCloseEntryKeybinding()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testCloseEntryEditorCloseEntryKeybinding()]
display-name: testCloseEntryEditorCloseEntryKeybinding()
]]></system-out>
</testcase>
<testcase name="testKeyBindingCategory()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testKeyBindingCategory()]
display-name: testKeyBindingCategory()
]]></system-out>
</testcase>
<testcase name="testSaveNewSpecialKeysKeyBindingsToPreferences()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testSaveNewSpecialKeysKeyBindingsToPreferences()]
display-name: testSaveNewSpecialKeysKeyBindingsToPreferences()
]]></system-out>
</testcase>
<testcase name="testSetSingleKeyBindingToDefault()" classname="org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.keyboard.KeyBindingsDialogViewModelTest]/[method:testSetSingleKeyBindingToDefault()]
display-name: testSetSingleKeyBindingToDefault()
]]></system-out>
</testcase>
<testcase name="completeValueReturnsValue()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeValueReturnsValue()]
display-name: completeValueReturnsValue()
]]></system-out>
</testcase>
<testcase name="completeLowercaseValueReturnsValue()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeLowercaseValueReturnsValue()]
display-name: completeLowercaseValueReturnsValue()
]]></system-out>
</testcase>
<testcase name="completeBeginnigOfSecondWordReturnsWord()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeBeginnigOfSecondWordReturnsWord()]
display-name: completeBeginnigOfSecondWordReturnsWord()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingNullReturnsNothing()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeAfterAddingNullReturnsNothing()]
display-name: completeAfterAddingNullReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completePartOfWordReturnsValue()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completePartOfWordReturnsValue()]
display-name: completePartOfWordReturnsValue()
]]></system-out>
</testcase>
<testcase name="initAutoCompleterWithNullFieldThrowsException()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:initAutoCompleterWithNullFieldThrowsException()]
display-name: initAutoCompleterWithNullFieldThrowsException()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingEntryWithoutFieldReturnsNothing()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeAfterAddingEntryWithoutFieldReturnsNothing()]
display-name: completeAfterAddingEntryWithoutFieldReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeShortStringReturnsValue()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeShortStringReturnsValue()]
display-name: completeShortStringReturnsValue()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingEmptyEntryReturnsNothing()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeAfterAddingEmptyEntryReturnsNothing()]
display-name: completeAfterAddingEmptyEntryReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeWithoutAddingAnythingReturnsNothing()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeWithoutAddingAnythingReturnsNothing()]
display-name: completeWithoutAddingAnythingReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeReturnsMultipleResults()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeReturnsMultipleResults()]
display-name: completeReturnsMultipleResults()
]]></system-out>
</testcase>
<testcase name="completeNullThrowsException()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeNullThrowsException()]
display-name: completeNullThrowsException()
]]></system-out>
</testcase>
<testcase name="completeEmptyStringReturnsNothing()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeEmptyStringReturnsNothing()]
display-name: completeEmptyStringReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeBeginnigOfValueReturnsValue()" classname="org.jabref.gui.autocompleter.DefaultAutoCompleterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.DefaultAutoCompleterTest]/[method:completeBeginnigOfValueReturnsValue()]
display-name: completeBeginnigOfValueReturnsValue()
]]></system-out>
</testcase>
<testcase name="completeKeyReturnsKey()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeKeyReturnsKey()]
display-name: completeKeyReturnsKey()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingNullReturnsNothing()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeAfterAddingNullReturnsNothing()]
display-name: completeAfterAddingNullReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeLowercaseKeyReturnsKey()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeLowercaseKeyReturnsKey()]
display-name: completeLowercaseKeyReturnsKey()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingEmptyEntryReturnsNothing()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeAfterAddingEmptyEntryReturnsNothing()]
display-name: completeAfterAddingEmptyEntryReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeWithoutAddingAnythingReturnsNothing()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeWithoutAddingAnythingReturnsNothing()]
display-name: completeWithoutAddingAnythingReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeReturnsMultipleResults()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeReturnsMultipleResults()]
display-name: completeReturnsMultipleResults()
]]></system-out>
</testcase>
<testcase name="completeNullThrowsException()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeNullThrowsException()]
display-name: completeNullThrowsException()
]]></system-out>
</testcase>
<testcase name="completeBeginnigOfKeyReturnsKey()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeBeginnigOfKeyReturnsKey()]
display-name: completeBeginnigOfKeyReturnsKey()
]]></system-out>
</testcase>
<testcase name="completeShortKeyReturnsKey()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeShortKeyReturnsKey()]
display-name: completeShortKeyReturnsKey()
]]></system-out>
</testcase>
<testcase name="completeEmptyStringReturnsNothing()" classname="org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.BibEntrySuggestionProviderTest]/[method:completeEmptyStringReturnsNothing()]
display-name: completeEmptyStringReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeLowercaseBeginningOfNameReturnsName()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeLowercaseBeginningOfNameReturnsName()]
display-name: completeLowercaseBeginningOfNameReturnsName()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingNullReturnsNothing()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeAfterAddingNullReturnsNothing()]
display-name: completeAfterAddingNullReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeBeginningOfFullNameReturnsName()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeBeginningOfFullNameReturnsName()]
display-name: completeBeginningOfFullNameReturnsName()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingEntryWithoutFieldReturnsNothing()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeAfterAddingEntryWithoutFieldReturnsNothing()]
display-name: completeAfterAddingEntryWithoutFieldReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeBeginningOfLastNameReturnsNameWithUmlauts()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeBeginningOfLastNameReturnsNameWithUmlauts()]
display-name: completeBeginningOfLastNameReturnsNameWithUmlauts()
]]></system-out>
</testcase>
<testcase name="completeBeginningOfFirstNameReturnsName()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeBeginningOfFirstNameReturnsName()]
display-name: completeBeginningOfFirstNameReturnsName()
]]></system-out>
</testcase>
<testcase name="completeVonReturnsName()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeVonReturnsName()]
display-name: completeVonReturnsName()
]]></system-out>
</testcase>
<testcase name="completeBeginningOfNameReturnsName()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeBeginningOfNameReturnsName()]
display-name: completeBeginningOfNameReturnsName()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingEmptyEntryReturnsNothing()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeAfterAddingEmptyEntryReturnsNothing()]
display-name: completeAfterAddingEmptyEntryReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeWithoutAddingAnythingReturnsNothing()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeWithoutAddingAnythingReturnsNothing()]
display-name: completeWithoutAddingAnythingReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeNameReturnsName()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeNameReturnsName()]
display-name: completeNameReturnsName()
]]></system-out>
</testcase>
<testcase name="completeReturnsMultipleResults()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeReturnsMultipleResults()]
display-name: completeReturnsMultipleResults()
]]></system-out>
</testcase>
<testcase name="completePartOfNameReturnsName()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completePartOfNameReturnsName()]
display-name: completePartOfNameReturnsName()
]]></system-out>
</testcase>
<testcase name="completeNullThrowsException()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeNullThrowsException()]
display-name: completeNullThrowsException()
]]></system-out>
</testcase>
<testcase name="completeEmptyStringReturnsNothing()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeEmptyStringReturnsNothing()]
display-name: completeEmptyStringReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeBeginningOfFirstNameReturnsNameWithVon()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeBeginningOfFirstNameReturnsNameWithVon()]
display-name: completeBeginningOfFirstNameReturnsNameWithVon()
]]></system-out>
</testcase>
<testcase name="completeBeginningOfFirstNameReturnsNameWithJr()" classname="org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.PersonNameSuggestionProviderTest]/[method:completeBeginningOfFirstNameReturnsNameWithJr()]
display-name: completeBeginningOfFirstNameReturnsNameWithJr()
]]></system-out>
</testcase>
<testcase name="completeValueReturnsValue()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeValueReturnsValue()]
display-name: completeValueReturnsValue()
]]></system-out>
</testcase>
<testcase name="completeLowercaseValueReturnsValue()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeLowercaseValueReturnsValue()]
display-name: completeLowercaseValueReturnsValue()
]]></system-out>
</testcase>
<testcase name="completeBeginnigOfSecondWordReturnsWholeFieldValue()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeBeginnigOfSecondWordReturnsWholeFieldValue()]
display-name: completeBeginnigOfSecondWordReturnsWholeFieldValue()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingNullReturnsNothing()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeAfterAddingNullReturnsNothing()]
display-name: completeAfterAddingNullReturnsNothing()
]]></system-out>
</testcase>
<testcase name="initAutoCompleterWithNullFieldThrowsException()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:initAutoCompleterWithNullFieldThrowsException()]
display-name: initAutoCompleterWithNullFieldThrowsException()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingEntryWithoutFieldReturnsNothing()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeAfterAddingEntryWithoutFieldReturnsNothing()]
display-name: completeAfterAddingEntryWithoutFieldReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeReturnsWholeFieldValue()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeReturnsWholeFieldValue()]
display-name: completeReturnsWholeFieldValue()
]]></system-out>
</testcase>
<testcase name="completeShortStringReturnsFieldValue()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeShortStringReturnsFieldValue()]
display-name: completeShortStringReturnsFieldValue()
]]></system-out>
</testcase>
<testcase name="completeAfterAddingEmptyEntryReturnsNothing()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeAfterAddingEmptyEntryReturnsNothing()]
display-name: completeAfterAddingEmptyEntryReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeWithoutAddingAnythingReturnsNothing()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeWithoutAddingAnythingReturnsNothing()]
display-name: completeWithoutAddingAnythingReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeReturnsMultipleResults()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeReturnsMultipleResults()]
display-name: completeReturnsMultipleResults()
]]></system-out>
</testcase>
<testcase name="completeNullThrowsException()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeNullThrowsException()]
display-name: completeNullThrowsException()
]]></system-out>
</testcase>
<testcase name="completeEmptyStringReturnsNothing()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeEmptyStringReturnsNothing()]
display-name: completeEmptyStringReturnsNothing()
]]></system-out>
</testcase>
<testcase name="completeBeginnigOfValueReturnsValue()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completeBeginnigOfValueReturnsValue()]
display-name: completeBeginnigOfValueReturnsValue()
]]></system-out>
</testcase>
<testcase name="completePartOfWordReturnsWholeFieldValue()" classname="org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.gui.autocompleter.FieldValueSuggestionProviderTest]/[method:completePartOfWordReturnsWholeFieldValue()]
display-name: completePartOfWordReturnsWholeFieldValue()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.cli.AuxCommandLineTest" time="0.269">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cli.AuxCommandLineTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="testCLIParsingShortOptions()" classname="org.jabref.cli.JabRefCLITest" time="0.063">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cli.JabRefCLITest]/[method:testCLIParsingShortOptions()]
display-name: testCLIParsingShortOptions()
]]></system-out>
</testcase>
<testcase name="testCLIParsingLongOptions()" classname="org.jabref.cli.JabRefCLITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cli.JabRefCLITest]/[method:testCLIParsingLongOptions()]
display-name: testCLIParsingLongOptions()
]]></system-out>
</testcase>
<testcase name="recognizesImportBibtex()" classname="org.jabref.cli.JabRefCLITest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cli.JabRefCLITest]/[method:recognizesImportBibtex()]
display-name: recognizesImportBibtex()
]]></system-out>
</testcase>
<testcase name="testPreferencesExport()" classname="org.jabref.cli.JabRefCLITest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.cli.JabRefCLITest]/[method:testPreferencesExport()]
display-name: testPreferencesExport()
]]></system-out>
</testcase>
<testcase name="getDefaultEncodingReturnsPreviouslyStoredEncoding()" classname="org.jabref.JabRefPreferencesTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.JabRefPreferencesTest]/[method:getDefaultEncodingReturnsPreviouslyStoredEncoding()]
display-name: getDefaultEncodingReturnsPreviouslyStoredEncoding()
]]></system-out>
</testcase>
<testcase name="hasAllRequiredFieldsForUnknownTypeReturnsTrue()" classname="org.jabref.logic.TypedBibEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.TypedBibEntryTest]/[method:hasAllRequiredFieldsForUnknownTypeReturnsTrue()]
display-name: hasAllRequiredFieldsForUnknownTypeReturnsTrue()
]]></system-out>
</testcase>
<testcase name="hasAllRequiredFieldsFail()" classname="org.jabref.logic.TypedBibEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.TypedBibEntryTest]/[method:hasAllRequiredFieldsFail()]
display-name: hasAllRequiredFieldsFail()
]]></system-out>
</testcase>
<testcase name="hasAllRequiredFields()" classname="org.jabref.logic.TypedBibEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.TypedBibEntryTest]/[method:hasAllRequiredFields()]
display-name: hasAllRequiredFields()
]]></system-out>
</testcase>
<testcase name="getTypeForDisplayForUnknownTypeCapitalizeFirstLetter()" classname="org.jabref.logic.TypedBibEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.TypedBibEntryTest]/[method:getTypeForDisplayForUnknownTypeCapitalizeFirstLetter()]
display-name: getTypeForDisplayForUnknownTypeCapitalizeFirstLetter()
]]></system-out>
</testcase>
<testcase name="getTypeForDisplayReturnsTypeName()" classname="org.jabref.logic.TypedBibEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.TypedBibEntryTest]/[method:getTypeForDisplayReturnsTypeName()]
display-name: getTypeForDisplayReturnsTypeName()
]]></system-out>
</testcase>
<testcase name="readEntryExampleThesis()" classname="org.jabref.logic.pdf.EntryAnnotationImporterTest" time="0.705">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.EntryAnnotationImporterTest]/[method:readEntryExampleThesis()]
display-name: readEntryExampleThesis()
]]></system-out>
</testcase>
<testcase name="invalidDirectory()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:invalidDirectory()]
display-name: invalidDirectory()
]]></system-out>
</testcase>
<testcase name="twoAnnotationsThesisExample()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.082">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:twoAnnotationsThesisExample()]
display-name: twoAnnotationsThesisExample()
]]></system-out>
</testcase>
<testcase name="strikeoutWithNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="1.976">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:strikeoutWithNoteMinimal()]
display-name: strikeoutWithNoteMinimal()
]]></system-out>
</testcase>
<testcase name="highlightWithNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.04">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:highlightWithNoteMinimal()]
display-name: highlightWithNoteMinimal()
]]></system-out>
</testcase>
<testcase name="invalidPath()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:invalidPath()]
display-name: invalidPath()
]]></system-out>
</testcase>
<testcase name="invalidDocumentType()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:invalidDocumentType()]
display-name: invalidDocumentType()
]]></system-out>
</testcase>
<testcase name="popupNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.02">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:popupNoteMinimal()]
display-name: popupNoteMinimal()
]]></system-out>
</testcase>
<testcase name="inlineNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:inlineNoteMinimal()]
display-name: inlineNoteMinimal()
]]></system-out>
</testcase>
<testcase name="noAnnotationsEncrypted()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.121">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:noAnnotationsEncrypted()]
display-name: noAnnotationsEncrypted()
]]></system-out>
</testcase>
<testcase name="underlineWithNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.029">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:underlineWithNoteMinimal()]
display-name: underlineWithNoteMinimal()
]]></system-out>
</testcase>
<testcase name="highlightNoNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.014">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:highlightNoNoteMinimal()]
display-name: highlightNoNoteMinimal()
]]></system-out>
</testcase>
<testcase name="noAnnotationsWriteProtected()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="1.086">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:noAnnotationsWriteProtected()]
display-name: noAnnotationsWriteProtected()
]]></system-out>
</testcase>
<testcase name="noAnnotationsMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.014">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:noAnnotationsMinimal()]
display-name: noAnnotationsMinimal()
]]></system-out>
</testcase>
<testcase name="squigglyWithNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.022">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:squigglyWithNoteMinimal()]
display-name: squigglyWithNoteMinimal()
]]></system-out>
</testcase>
<testcase name="polygonNoNoteMinimal()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:polygonNoNoteMinimal()]
display-name: polygonNoNoteMinimal()
]]></system-out>
</testcase>
<testcase name="highlightMinimalFoxit()" classname="org.jabref.logic.pdf.PdfAnnotationImporterTest" time="0.015">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.pdf.PdfAnnotationImporterTest]/[method:highlightMinimalFoxit()]
display-name: highlightMinimalFoxit()
]]></system-out>
</testcase>
<testcase name="syncSpecialFieldsFromKeywordCausesNoChangeWhenKeywordsAreEmpty()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:syncSpecialFieldsFromKeywordCausesNoChangeWhenKeywordsAreEmpty()]
display-name: syncSpecialFieldsFromKeywordCausesNoChangeWhenKeywordsAreEmpty()
]]></system-out>
</testcase>
<testcase name="syncKeywordsFromSpecialFieldsCausesChange()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:syncKeywordsFromSpecialFieldsCausesChange()]
display-name: syncKeywordsFromSpecialFieldsCausesChange()
]]></system-out>
</testcase>
<testcase name="syncSpecialFieldsFromKeywordCausesChange()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:syncSpecialFieldsFromKeywordCausesChange()]
display-name: syncSpecialFieldsFromKeywordCausesChange()
]]></system-out>
</testcase>
<testcase name="syncSpecialFieldsFromKeywordWritesToSpecialField()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:syncSpecialFieldsFromKeywordWritesToSpecialField()]
display-name: syncSpecialFieldsFromKeywordWritesToSpecialField()
]]></system-out>
</testcase>
<testcase name="syncKeywordsFromSpecialFieldsWritesToKeywords()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:syncKeywordsFromSpecialFieldsWritesToKeywords()]
display-name: syncKeywordsFromSpecialFieldsWritesToKeywords()
]]></system-out>
</testcase>
<testcase name="syncKeywordsFromSpecialFieldsForEmptyFieldCausesNoChange()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:syncKeywordsFromSpecialFieldsForEmptyFieldCausesNoChange()]
display-name: syncKeywordsFromSpecialFieldsForEmptyFieldCausesNoChange()
]]></system-out>
</testcase>
<testcase name="updateFieldRemovesSpecialFieldKeywordWhenKeywordSyncIsUsed()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:updateFieldRemovesSpecialFieldKeywordWhenKeywordSyncIsUsed()]
display-name: updateFieldRemovesSpecialFieldKeywordWhenKeywordSyncIsUsed()
]]></system-out>
</testcase>
<testcase name="syncKeywordsFromSpecialFieldsOverwritesKeywords()" classname="org.jabref.logic.specialfields.SpecialFieldsUtilsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.specialfields.SpecialFieldsUtilsTest]/[method:syncKeywordsFromSpecialFieldsOverwritesKeywords()]
display-name: syncKeywordsFromSpecialFieldsOverwritesKeywords()
]]></system-out>
</testcase>
<testcase name="multipleWritesWithoutModification()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.035">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:multipleWritesWithoutModification()]
display-name: multipleWritesWithoutModification()
]]></system-out>
</testcase>
<testcase name="testSerialization()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:testSerialization()]
display-name: testSerialization()
]]></system-out>
</testcase>
<testcase name="writeThrowsErrorIfFieldContainsUnbalancedBraces()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:writeThrowsErrorIfFieldContainsUnbalancedBraces()]
display-name: writeThrowsErrorIfFieldContainsUnbalancedBraces()
]]></system-out>
</testcase>
<testcase name="monthFieldSpecialSyntax()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:monthFieldSpecialSyntax()]
display-name: monthFieldSpecialSyntax()
]]></system-out>
</testcase>
<testcase name="doNotWriteEmptyFields()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:doNotWriteEmptyFields()]
display-name: doNotWriteEmptyFields()
]]></system-out>
</testcase>
<testcase name="roundTripTest()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:roundTripTest()]
display-name: roundTripTest()
]]></system-out>
</testcase>
<testcase name="roundTripWithPrecedingCommentAndModificationTest()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:roundTripWithPrecedingCommentAndModificationTest()]
display-name: roundTripWithPrecedingCommentAndModificationTest()
]]></system-out>
</testcase>
<testcase name="roundTripWithModification()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:roundTripWithModification()]
display-name: roundTripWithModification()
]]></system-out>
</testcase>
<testcase name="trimFieldContents()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:trimFieldContents()]
display-name: trimFieldContents()
]]></system-out>
</testcase>
<testcase name="roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()]
display-name: roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()
]]></system-out>
</testcase>
<testcase name="roundTripWithPrecedingCommentTest()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:roundTripWithPrecedingCommentTest()]
display-name: roundTripWithPrecedingCommentTest()
]]></system-out>
</testcase>
<testcase name="roundTripWithPrependingNewlines()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:roundTripWithPrependingNewlines()]
display-name: roundTripWithPrependingNewlines()
]]></system-out>
</testcase>
<testcase name="addFieldWithLongerLength()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:addFieldWithLongerLength()]
display-name: addFieldWithLongerLength()
]]></system-out>
</testcase>
<testcase name="testEntryTypeChange()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:testEntryTypeChange()]
display-name: testEntryTypeChange()
]]></system-out>
</testcase>
<testcase name="roundTripWithAppendedNewlines()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:roundTripWithAppendedNewlines()]
display-name: roundTripWithAppendedNewlines()
]]></system-out>
</testcase>
<testcase name="writeOtherTypeTest()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:writeOtherTypeTest()]
display-name: writeOtherTypeTest()
]]></system-out>
</testcase>
<testcase name="writeReallyunknownTypeTest()" classname="org.jabref.logic.bibtex.BibEntryWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.BibEntryWriterTest]/[method:writeReallyunknownTypeTest()]
display-name: writeReallyunknownTypeTest()
]]></system-out>
</testcase>
<testcase name="hashEnclosedWordsGetRealStringsInMonthFieldBecauseMonthIsStandardField()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:hashEnclosedWordsGetRealStringsInMonthFieldBecauseMonthIsStandardField()]
display-name: hashEnclosedWordsGetRealStringsInMonthFieldBecauseMonthIsStandardField()
]]></system-out>
</testcase>
<testcase name="preserveNewlineInAbstractField()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:preserveNewlineInAbstractField()]
display-name: preserveNewlineInAbstractField()
]]></system-out>
</testcase>
<testcase name="tolerateEscapeCharacters()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:tolerateEscapeCharacters()]
display-name: tolerateEscapeCharacters()
]]></system-out>
</testcase>
<testcase name="preserveNewlineInReviewField()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:preserveNewlineInReviewField()]
display-name: preserveNewlineInReviewField()
]]></system-out>
</testcase>
<testcase name="tolerateBalancedBrace()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:tolerateBalancedBrace()]
display-name: tolerateBalancedBrace()
]]></system-out>
</testcase>
<testcase name="hashEnclosedWordsGetRealStringsInMonthField()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:hashEnclosedWordsGetRealStringsInMonthField()]
display-name: hashEnclosedWordsGetRealStringsInMonthField()
]]></system-out>
</testcase>
<testcase name="preserveMultipleNewlinesInAbstractField()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:preserveMultipleNewlinesInAbstractField()]
display-name: preserveMultipleNewlinesInAbstractField()
]]></system-out>
</testcase>
<testcase name="removeWhitespaceFromNonMultiLineFields()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:removeWhitespaceFromNonMultiLineFields()]
display-name: removeWhitespaceFromNonMultiLineFields()
]]></system-out>
</testcase>
<testcase name="normalizeNewlineInAbstractField()" classname="org.jabref.logic.bibtex.LatexFieldFormatterTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.LatexFieldFormatterTests]/[method:normalizeNewlineInAbstractField()]
display-name: normalizeNewlineInAbstractField()
]]></system-out>
</testcase>
<testcase name="twoIncollectionsWithDifferentChaptersAreNotDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.061">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoIncollectionsWithDifferentChaptersAreNotDuplicates()]
display-name: twoIncollectionsWithDifferentChaptersAreNotDuplicates()
]]></system-out>
</testcase>
<testcase name="testDuplicateDetection()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:testDuplicateDetection()]
display-name: testDuplicateDetection()
]]></system-out>
</testcase>
<testcase name="twoUnrelatedEntriesWithEqualPmidAreDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoUnrelatedEntriesWithEqualPmidAreDuplicates()]
display-name: twoUnrelatedEntriesWithEqualPmidAreDuplicates()
]]></system-out>
</testcase>
<testcase name="twoUnrelatedEntriesAreNoDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoUnrelatedEntriesAreNoDuplicates()]
display-name: twoUnrelatedEntriesAreNoDuplicates()
]]></system-out>
</testcase>
<testcase name="testWordCorrelation()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:testWordCorrelation()]
display-name: testWordCorrelation()
]]></system-out>
</testcase>
<testcase name="twoBooksWithDifferentEditionsAreNotDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoBooksWithDifferentEditionsAreNotDuplicates()]
display-name: twoBooksWithDifferentEditionsAreNotDuplicates()
]]></system-out>
</testcase>
<testcase name="twoInbooksWithDifferentPagesAreNotDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoInbooksWithDifferentPagesAreNotDuplicates()]
display-name: twoInbooksWithDifferentPagesAreNotDuplicates()
]]></system-out>
</testcase>
<testcase name="twoUnrelatedEntriesWithEqualDoisAreDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoUnrelatedEntriesWithEqualDoisAreDuplicates()]
display-name: twoUnrelatedEntriesWithEqualDoisAreDuplicates()
]]></system-out>
</testcase>
<testcase name="twoInbooksWithDifferentChaptersAreNotDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoInbooksWithDifferentChaptersAreNotDuplicates()]
display-name: twoInbooksWithDifferentChaptersAreNotDuplicates()
]]></system-out>
</testcase>
<testcase name="sameBooksWithDifferentEditionsAreNotDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:sameBooksWithDifferentEditionsAreNotDuplicates()]
display-name: sameBooksWithDifferentEditionsAreNotDuplicates()
]]></system-out>
</testcase>
<testcase name="twoUnrelatedEntriesWithEqualEprintAreDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoUnrelatedEntriesWithEqualEprintAreDuplicates()]
display-name: twoUnrelatedEntriesWithEqualEprintAreDuplicates()
]]></system-out>
</testcase>
<testcase name="twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates()]
display-name: twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates()
]]></system-out>
</testcase>
<testcase name="twoEntriesWithSameDoiButDifferentTypesAreDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoEntriesWithSameDoiButDifferentTypesAreDuplicates()]
display-name: twoEntriesWithSameDoiButDifferentTypesAreDuplicates()
]]></system-out>
</testcase>
<testcase name="twoIncollectionsWithDifferentPagesAreNotDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:twoIncollectionsWithDifferentPagesAreNotDuplicates()]
display-name: twoIncollectionsWithDifferentPagesAreNotDuplicates()
]]></system-out>
</testcase>
<testcase name="sameBooksWithPartiallyMissingEditionAreDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:sameBooksWithPartiallyMissingEditionAreDuplicates()]
display-name: sameBooksWithPartiallyMissingEditionAreDuplicates()
]]></system-out>
</testcase>
<testcase name="inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()]
display-name: inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()
]]></system-out>
</testcase>
<testcase name="sameBooksWithMissingEditionAreDuplicates()" classname="org.jabref.logic.bibtex.DuplicateCheckTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.DuplicateCheckTest]/[method:sameBooksWithMissingEditionAreDuplicates()]
display-name: sameBooksWithMissingEditionAreDuplicates()
]]></system-out>
</testcase>
<testcase name="isGreaterForEntriesWithoutCrossRef()" classname="org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest]/[method:isGreaterForEntriesWithoutCrossRef()]
display-name: isGreaterForEntriesWithoutCrossRef()
]]></system-out>
</testcase>
<testcase name="isEqualForEntriesWithoutCrossRef()" classname="org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest]/[method:isEqualForEntriesWithoutCrossRef()]
display-name: isEqualForEntriesWithoutCrossRef()
]]></system-out>
</testcase>
<testcase name="isSmallerForEntriesWithCrossRef()" classname="org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest]/[method:isSmallerForEntriesWithCrossRef()]
display-name: isSmallerForEntriesWithCrossRef()
]]></system-out>
</testcase>
<testcase name="isEqualForEntriesWithCrossRef()" classname="org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest]/[method:isEqualForEntriesWithCrossRef()]
display-name: isEqualForEntriesWithCrossRef()
]]></system-out>
</testcase>
<testcase name="compareMonthFieldEquality()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.055">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareMonthFieldEquality()]
display-name: compareMonthFieldEquality()
]]></system-out>
</testcase>
<testcase name="compareStringFieldsBiggerDescending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareStringFieldsBiggerDescending()]
display-name: compareStringFieldsBiggerDescending()
]]></system-out>
</testcase>
<testcase name="compareYearFieldBiggerAscending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareYearFieldBiggerAscending()]
display-name: compareYearFieldBiggerAscending()
]]></system-out>
</testcase>
<testcase name="nameOfComparisonField()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:nameOfComparisonField()]
display-name: nameOfComparisonField()
]]></system-out>
</testcase>
<testcase name="compareMonthFieldBiggerAscending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareMonthFieldBiggerAscending()]
display-name: compareMonthFieldBiggerAscending()
]]></system-out>
</testcase>
<testcase name="compareTypeFieldBiggerAscending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareTypeFieldBiggerAscending()]
display-name: compareTypeFieldBiggerAscending()
]]></system-out>
</testcase>
<testcase name="compareStringFieldsBiggerAscending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareStringFieldsBiggerAscending()]
display-name: compareStringFieldsBiggerAscending()
]]></system-out>
</testcase>
<testcase name="compareTypeFieldIdentity()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareTypeFieldIdentity()]
display-name: compareTypeFieldIdentity()
]]></system-out>
</testcase>
<testcase name="compareStringFieldsIdentity()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareStringFieldsIdentity()]
display-name: compareStringFieldsIdentity()
]]></system-out>
</testcase>
<testcase name="nameOfComparisonFieldAlias()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:nameOfComparisonFieldAlias()]
display-name: nameOfComparisonFieldAlias()
]]></system-out>
</testcase>
<testcase name="compareTypeFieldBiggerDescending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareTypeFieldBiggerDescending()]
display-name: compareTypeFieldBiggerDescending()
]]></system-out>
</testcase>
<testcase name="compareYearFieldIdentity()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareYearFieldIdentity()]
display-name: compareYearFieldIdentity()
]]></system-out>
</testcase>
<testcase name="compareTypeFieldEquality()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareTypeFieldEquality()]
display-name: compareTypeFieldEquality()
]]></system-out>
</testcase>
<testcase name="compareStringFieldsEquality()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareStringFieldsEquality()]
display-name: compareStringFieldsEquality()
]]></system-out>
</testcase>
<testcase name="compareYearFieldEquality()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareYearFieldEquality()]
display-name: compareYearFieldEquality()
]]></system-out>
</testcase>
<testcase name="compareMonthFieldBiggerDescending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareMonthFieldBiggerDescending()]
display-name: compareMonthFieldBiggerDescending()
]]></system-out>
</testcase>
<testcase name="compareYearFieldBiggerDescending()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareYearFieldBiggerDescending()]
display-name: compareYearFieldBiggerDescending()
]]></system-out>
</testcase>
<testcase name="compareMonthFieldIdentity()" classname="org.jabref.logic.bibtex.comparator.FieldComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.FieldComparatorTest]/[method:compareMonthFieldIdentity()]
display-name: compareMonthFieldIdentity()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.bibtex.comparator.BibtexStringComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.BibtexStringComparatorTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="compareOfEmptyDatabasesReportsNoDifferences()" classname="org.jabref.logic.bibtex.comparator.BibDatabaseDiffTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.BibDatabaseDiffTest]/[method:compareOfEmptyDatabasesReportsNoDifferences()]
display-name: compareOfEmptyDatabasesReportsNoDifferences()
]]></system-out>
</testcase>
<testcase name="compareWithSameContentSelectorsDoesNotReportAnyDiffs()" classname="org.jabref.logic.bibtex.comparator.MetaDataDiffTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.MetaDataDiffTest]/[method:compareWithSameContentSelectorsDoesNotReportAnyDiffs()]
display-name: compareWithSameContentSelectorsDoesNotReportAnyDiffs()
]]></system-out>
</testcase>
<testcase name="recognizeIdenticObjectsAsEqual()" classname="org.jabref.logic.bibtex.comparator.EntryComparatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.comparator.EntryComparatorTest]/[method:recognizeIdenticObjectsAsEqual()]
display-name: recognizeIdenticObjectsAsEqual()
]]></system-out>
</testcase>
<testcase name="unifiesLineBreaks()" classname="org.jabref.logic.bibtex.FieldContentParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.FieldContentParserTest]/[method:unifiesLineBreaks()]
display-name: unifiesLineBreaks()
]]></system-out>
</testcase>
<testcase name="retainsWhitespaceForMultiLineFields()" classname="org.jabref.logic.bibtex.FieldContentParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.FieldContentParserTest]/[method:retainsWhitespaceForMultiLineFields()]
display-name: retainsWhitespaceForMultiLineFields()
]]></system-out>
</testcase>
<testcase name="removeWhitespaceFromNonMultiLineFields()" classname="org.jabref.logic.bibtex.FieldContentParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtex.FieldContentParserTest]/[method:removeWhitespaceFromNonMultiLineFields()]
display-name: removeWhitespaceFromNonMultiLineFields()
]]></system-out>
</testcase>
<testcase name="rejectPortsAbove16Bits()" classname="org.jabref.logic.remote.RemoteUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteUtilTest]/[method:rejectPortsAbove16Bits()]
display-name: rejectPortsAbove16Bits()
]]></system-out>
</testcase>
<testcase name="rejectReservedSystemPorts()" classname="org.jabref.logic.remote.RemoteUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteUtilTest]/[method:rejectReservedSystemPorts()]
display-name: rejectReservedSystemPorts()
]]></system-out>
</testcase>
<testcase name="acceptPortsAboveSystemPorts()" classname="org.jabref.logic.remote.RemoteUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteUtilTest]/[method:acceptPortsAboveSystemPorts()]
display-name: acceptPortsAboveSystemPorts()
]]></system-out>
</testcase>
<testcase name="rejectPortNumberBelowZero()" classname="org.jabref.logic.remote.RemoteUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteUtilTest]/[method:rejectPortNumberBelowZero()]
display-name: rejectPortNumberBelowZero()
]]></system-out>
</testcase>
<testcase name="pingReturnsFalseForWrongServerListening()" classname="org.jabref.logic.remote.RemoteSetupTest" time="0.493">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteSetupTest]/[method:pingReturnsFalseForWrongServerListening()]
display-name: pingReturnsFalseForWrongServerListening()
]]></system-out>
</testcase>
<testcase name="testGoodCase()" classname="org.jabref.logic.remote.RemoteSetupTest" time="0.085">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteSetupTest]/[method:testGoodCase()]
display-name: testGoodCase()
]]></system-out>
</testcase>
<testcase name="testGoodCaseWithAllLifecycleMethods()" classname="org.jabref.logic.remote.RemoteSetupTest" time="0.046">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteSetupTest]/[method:testGoodCaseWithAllLifecycleMethods()]
display-name: testGoodCaseWithAllLifecycleMethods()
]]></system-out>
</testcase>
<testcase name="testPortAlreadyInUse()" classname="org.jabref.logic.remote.RemoteSetupTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteSetupTest]/[method:testPortAlreadyInUse()]
display-name: testPortAlreadyInUse()
]]></system-out>
</testcase>
<testcase name="pingReturnsFalseForNoServerListening()" classname="org.jabref.logic.remote.RemoteSetupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteSetupTest]/[method:pingReturnsFalseForNoServerListening()]
display-name: pingReturnsFalseForNoServerListening()
]]></system-out>
</testcase>
<testcase name="testClientTimeout()" classname="org.jabref.logic.remote.RemoteSetupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteSetupTest]/[method:testClientTimeout()]
display-name: testClientTimeout()
]]></system-out>
</testcase>
<testcase name="pingReturnsTrue()" classname="org.jabref.logic.remote.RemoteCommunicationTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteCommunicationTest]/[method:pingReturnsTrue()]
display-name: pingReturnsTrue()
]]></system-out>
</testcase>
<testcase name="commandLineArgumentSinglePassedToServer()" classname="org.jabref.logic.remote.RemoteCommunicationTest" time="0.045">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteCommunicationTest]/[method:commandLineArgumentSinglePassedToServer()]
display-name: commandLineArgumentSinglePassedToServer()
]]></system-out>
</testcase>
<testcase name="commandLineArgumentTwoPassedToServer()" classname="org.jabref.logic.remote.RemoteCommunicationTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteCommunicationTest]/[method:commandLineArgumentTwoPassedToServer()]
display-name: commandLineArgumentTwoPassedToServer()
]]></system-out>
</testcase>
<testcase name="commandLineArgumentMultiLinePassedToServer()" classname="org.jabref.logic.remote.RemoteCommunicationTest" time="0.045">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemoteCommunicationTest]/[method:commandLineArgumentMultiLinePassedToServer()]
display-name: commandLineArgumentMultiLinePassedToServer()
]]></system-out>
</testcase>
<testcase name="testIsDifferentPortTrue()" classname="org.jabref.logic.remote.RemotePreferencesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemotePreferencesTest]/[method:testIsDifferentPortTrue()]
display-name: testIsDifferentPortTrue()
]]></system-out>
</testcase>
<testcase name="testUseRemoteServer()" classname="org.jabref.logic.remote.RemotePreferencesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemotePreferencesTest]/[method:testUseRemoteServer()]
display-name: testUseRemoteServer()
]]></system-out>
</testcase>
<testcase name="testIsDifferentPortFalse()" classname="org.jabref.logic.remote.RemotePreferencesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemotePreferencesTest]/[method:testIsDifferentPortFalse()]
display-name: testIsDifferentPortFalse()
]]></system-out>
</testcase>
<testcase name="testGetPort()" classname="org.jabref.logic.remote.RemotePreferencesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemotePreferencesTest]/[method:testGetPort()]
display-name: testGetPort()
]]></system-out>
</testcase>
<testcase name="testSetUseRemoteServer()" classname="org.jabref.logic.remote.RemotePreferencesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemotePreferencesTest]/[method:testSetUseRemoteServer()]
display-name: testSetUseRemoteServer()
]]></system-out>
</testcase>
<testcase name="testSetPort()" classname="org.jabref.logic.remote.RemotePreferencesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.remote.RemotePreferencesTest]/[method:testSetPort()]
display-name: testSetPort()
]]></system-out>
</testcase>
<testcase name="cleanupMovesDateToYearAndMonth()" classname="org.jabref.logic.cleanup.ConvertToBibtexCleanupTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ConvertToBibtexCleanupTest]/[method:cleanupMovesDateToYearAndMonth()]
display-name: cleanupMovesDateToYearAndMonth()
]]></system-out>
</testcase>
<testcase name="cleanupWithYearAlreadyPresentDoesNothing()" classname="org.jabref.logic.cleanup.ConvertToBibtexCleanupTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ConvertToBibtexCleanupTest]/[method:cleanupWithYearAlreadyPresentDoesNothing()]
display-name: cleanupWithYearAlreadyPresentDoesNothing()
]]></system-out>
</testcase>
<testcase name="cleanupMovesJournaltitleToJournal()" classname="org.jabref.logic.cleanup.ConvertToBibtexCleanupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ConvertToBibtexCleanupTest]/[method:cleanupMovesJournaltitleToJournal()]
display-name: cleanupMovesJournaltitleToJournal()
]]></system-out>
</testcase>
<testcase name="cleanupISSNAddsMissingDash()" classname="org.jabref.logic.cleanup.ISSNCleanupTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ISSNCleanupTest]/[method:cleanupISSNAddsMissingDash()]
display-name: cleanupISSNAddsMissingDash()
]]></system-out>
</testcase>
<testcase name="cleanupISSNJunkStaysJunk()" classname="org.jabref.logic.cleanup.ISSNCleanupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ISSNCleanupTest]/[method:cleanupISSNJunkStaysJunk()]
display-name: cleanupISSNJunkStaysJunk()
]]></system-out>
</testcase>
<testcase name="cleanupISSNReturnsCorrectISSN()" classname="org.jabref.logic.cleanup.ISSNCleanupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ISSNCleanupTest]/[method:cleanupISSNReturnsCorrectISSN()]
display-name: cleanupISSNReturnsCorrectISSN()
]]></system-out>
</testcase>
<testcase name="roundTripBibtexToBiblatexIsIdentity()" classname="org.jabref.logic.cleanup.BibtexBiblatexRoundtripTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.BibtexBiblatexRoundtripTest]/[method:roundTripBibtexToBiblatexIsIdentity()]
display-name: roundTripBibtexToBiblatexIsIdentity()
]]></system-out>
</testcase>
<testcase name="roundTripBiblatexToBibtexIsIdentity()" classname="org.jabref.logic.cleanup.BibtexBiblatexRoundtripTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.BibtexBiblatexRoundtripTest]/[method:roundTripBiblatexToBibtexIsIdentity()]
display-name: roundTripBiblatexToBibtexIsIdentity()
]]></system-out>
</testcase>
<testcase name="cleanupMovesYearMonthToDate()" classname="org.jabref.logic.cleanup.ConvertToBiblatexCleanupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ConvertToBiblatexCleanupTest]/[method:cleanupMovesYearMonthToDate()]
display-name: cleanupMovesYearMonthToDate()
]]></system-out>
</testcase>
<testcase name="cleanupWithDateAlreadyPresentDoesNothing()" classname="org.jabref.logic.cleanup.ConvertToBiblatexCleanupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ConvertToBiblatexCleanupTest]/[method:cleanupWithDateAlreadyPresentDoesNothing()]
display-name: cleanupWithDateAlreadyPresentDoesNothing()
]]></system-out>
</testcase>
<testcase name="cleanupMovesJournalToJournaltitle()" classname="org.jabref.logic.cleanup.ConvertToBiblatexCleanupTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.ConvertToBiblatexCleanupTest]/[method:cleanupMovesJournalToJournaltitle()]
display-name: cleanupMovesJournalToJournaltitle()
]]></system-out>
</testcase>
<testcase name="testInternalAllTextFieldsField()" classname="org.jabref.logic.cleanup.FieldFormatterCleanupTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.FieldFormatterCleanupTest]/[method:testInternalAllTextFieldsField()]
display-name: testInternalAllTextFieldsField()
]]></system-out>
</testcase>
<testcase name="testInternalAllField()" classname="org.jabref.logic.cleanup.FieldFormatterCleanupTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.cleanup.FieldFormatterCleanupTest]/[method:testInternalAllField()]
display-name: testInternalAllField()
]]></system-out>
</testcase>
<testcase name="testNoMatchesFromDatabaseWithArticleTypeEntry()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testNoMatchesFromDatabaseWithArticleTypeEntry()]
display-name: testNoMatchesFromDatabaseWithArticleTypeEntry()
]]></system-out>
</testcase>
<testcase name="testNoMatchFromDatabaseWithEmptyEntry()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testNoMatchFromDatabaseWithEmptyEntry()]
display-name: testNoMatchFromDatabaseWithEmptyEntry()
]]></system-out>
</testcase>
<testcase name="testGetDatabaseFromMatchesDatabaseWithEmptyEntries()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testGetDatabaseFromMatchesDatabaseWithEmptyEntries()]
display-name: testGetDatabaseFromMatchesDatabaseWithEmptyEntries()
]]></system-out>
</testcase>
<testcase name="testNoMatchesFromEmptyDatabaseWithInvalidSearchExpression()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testNoMatchesFromEmptyDatabaseWithInvalidSearchExpression()]
display-name: testNoMatchesFromEmptyDatabaseWithInvalidSearchExpression()
]]></system-out>
</testcase>
<testcase name="testCorrectMatchFromDatabaseWithArticleTypeEntry()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testCorrectMatchFromDatabaseWithArticleTypeEntry()]
display-name: testCorrectMatchFromDatabaseWithArticleTypeEntry()
]]></system-out>
</testcase>
<testcase name="testNoMatchesFromEmptyDatabaseWithInvalidQuery()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testNoMatchesFromEmptyDatabaseWithInvalidQuery()]
display-name: testNoMatchesFromEmptyDatabaseWithInvalidQuery()
]]></system-out>
</testcase>
<testcase name="testNoMatchesFromDabaseWithIncollectionTypeEntry()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testNoMatchesFromDabaseWithIncollectionTypeEntry()]
display-name: testNoMatchesFromDabaseWithIncollectionTypeEntry()
]]></system-out>
</testcase>
<testcase name="testCorrectMatchFromDatabaseWithIncollectionTypeEntry()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testCorrectMatchFromDatabaseWithIncollectionTypeEntry()]
display-name: testCorrectMatchFromDatabaseWithIncollectionTypeEntry()
]]></system-out>
</testcase>
<testcase name="testNoMatchesFromEmptyDatabase()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testNoMatchesFromEmptyDatabase()]
display-name: testNoMatchesFromEmptyDatabase()
]]></system-out>
</testcase>
<testcase name="testNoMatchesFromDatabaseWithTwoEntries()" classname="org.jabref.logic.search.DatabaseSearcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.DatabaseSearcherTest]/[method:testNoMatchesFromDatabaseWithTwoEntries()]
display-name: testNoMatchesFromDatabaseWithTwoEntries()
]]></system-out>
</testcase>
<testcase name="testSimpleTerm()" classname="org.jabref.logic.search.SearchQueryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testSimpleTerm()]
display-name: testSimpleTerm()
]]></system-out>
</testcase>
<testcase name="testIsContainsBasedSearch()" classname="org.jabref.logic.search.SearchQueryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsContainsBasedSearch()]
display-name: testIsContainsBasedSearch()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryContainsBracketNotAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryContainsBracketNotAsRegEx()]
display-name: testIsValidQueryContainsBracketNotAsRegEx()
]]></system-out>
</testcase>
<testcase name="testSearchAllFieldsAndSpecificField()" classname="org.jabref.logic.search.SearchQueryTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testSearchAllFieldsAndSpecificField()]
display-name: testSearchAllFieldsAndSpecificField()
]]></system-out>
</testcase>
<testcase name="testGrammarSearchFullEntry()" classname="org.jabref.logic.search.SearchQueryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testGrammarSearchFullEntry()]
display-name: testGrammarSearchFullEntry()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryAsRegEx()]
display-name: testIsValidQueryAsRegEx()
]]></system-out>
</testcase>
<testcase name="testToString()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testToString()]
display-name: testToString()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryWithEqualSignNotAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryWithEqualSignNotAsRegEx()]
display-name: testIsValidQueryWithEqualSignNotAsRegEx()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryWithNumbersAndEqualSignAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryWithNumbersAndEqualSignAsRegEx()]
display-name: testIsValidQueryWithNumbersAndEqualSignAsRegEx()
]]></system-out>
</testcase>
<testcase name="testSearchAllFieldsNotForSpecificField()" classname="org.jabref.logic.search.SearchQueryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testSearchAllFieldsNotForSpecificField()]
display-name: testSearchAllFieldsNotForSpecificField()
]]></system-out>
</testcase>
<testcase name="testGrammarSearch()" classname="org.jabref.logic.search.SearchQueryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testGrammarSearch()]
display-name: testGrammarSearch()
]]></system-out>
</testcase>
<testcase name="testSearchMatchesSingleKeywordNotPart()" classname="org.jabref.logic.search.SearchQueryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testSearchMatchesSingleKeywordNotPart()]
display-name: testSearchMatchesSingleKeywordNotPart()
]]></system-out>
</testcase>
<testcase name="testIsGrammarBasedSearch()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsGrammarBasedSearch()]
display-name: testIsGrammarBasedSearch()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryWithEqualSignAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryWithEqualSignAsRegEx()]
display-name: testIsValidQueryWithEqualSignAsRegEx()
]]></system-out>
</testcase>
<testcase name="testSearchMatchesSingleKeyword()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testSearchMatchesSingleKeyword()]
display-name: testSearchMatchesSingleKeyword()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryWithNumbersAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryWithNumbersAsRegEx()]
display-name: testIsValidQueryWithNumbersAsRegEx()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryContainsBracketAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryContainsBracketAsRegEx()]
display-name: testIsValidQueryContainsBracketAsRegEx()
]]></system-out>
</testcase>
<testcase name="testIsNotValidQueryContainsBracketNotAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsNotValidQueryContainsBracketNotAsRegEx()]
display-name: testIsNotValidQueryContainsBracketNotAsRegEx()
]]></system-out>
</testcase>
<testcase name="testSearchingForOpenBraketInBooktitle()" classname="org.jabref.logic.search.SearchQueryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testSearchingForOpenBraketInBooktitle()]
display-name: testSearchingForOpenBraketInBooktitle()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryWithNumbersAndEqualSignNotAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryWithNumbersAndEqualSignNotAsRegEx()]
display-name: testIsValidQueryWithNumbersAndEqualSignNotAsRegEx()
]]></system-out>
</testcase>
<testcase name="testIsValidQueryNotAsRegEx()" classname="org.jabref.logic.search.SearchQueryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsValidQueryNotAsRegEx()]
display-name: testIsValidQueryNotAsRegEx()
]]></system-out>
</testcase>
<testcase name="testSearchAllFields()" classname="org.jabref.logic.search.SearchQueryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testSearchAllFields()]
display-name: testSearchAllFields()
]]></system-out>
</testcase>
<testcase name="testGrammarSearchFullEntryLastCharMissing()" classname="org.jabref.logic.search.SearchQueryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testGrammarSearchFullEntryLastCharMissing()]
display-name: testGrammarSearchFullEntryLastCharMissing()
]]></system-out>
</testcase>
<testcase name="testIsMatch()" classname="org.jabref.logic.search.SearchQueryTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:testIsMatch()]
display-name: testIsMatch()
]]></system-out>
</testcase>
<testcase name="isMatchedForNormalAndFieldBasedSearchMixed()" classname="org.jabref.logic.search.SearchQueryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.search.SearchQueryTest]/[method:isMatchedForNormalAndFieldBasedSearchMixed()]
display-name: isMatchedForNormalAndFieldBasedSearchMixed()
]]></system-out>
</testcase>
<testcase name="testGetNoFirstName()" classname="org.jabref.logic.msbib.MsBibAuthorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.msbib.MsBibAuthorTest]/[method:testGetNoFirstName()]
display-name: testGetNoFirstName()
]]></system-out>
</testcase>
<testcase name="testGetLastName()" classname="org.jabref.logic.msbib.MsBibAuthorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.msbib.MsBibAuthorTest]/[method:testGetLastName()]
display-name: testGetLastName()
]]></system-out>
</testcase>
<testcase name="testGetMiddleName()" classname="org.jabref.logic.msbib.MsBibAuthorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.msbib.MsBibAuthorTest]/[method:testGetMiddleName()]
display-name: testGetMiddleName()
]]></system-out>
</testcase>
<testcase name="testGetFirstName()" classname="org.jabref.logic.msbib.MsBibAuthorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.msbib.MsBibAuthorTest]/[method:testGetFirstName()]
display-name: testGetFirstName()
]]></system-out>
</testcase>
<testcase name="testGetNoMiddleName()" classname="org.jabref.logic.msbib.MsBibAuthorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.msbib.MsBibAuthorTest]/[method:testGetNoMiddleName()]
display-name: testGetNoMiddleName()
]]></system-out>
</testcase>
<testcase name="backupFileNameIsCorrectlyGeneratedWithinTmpDirectory()" classname="org.jabref.logic.autosaveandbackup.BackupManagerTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.autosaveandbackup.BackupManagerTest]/[method:backupFileNameIsCorrectlyGeneratedWithinTmpDirectory()]
display-name: backupFileNameIsCorrectlyGeneratedWithinTmpDirectory()
]]></system-out>
</testcase>
<testcase name="getNextAbbreviationRemovesPoint()" classname="org.jabref.logic.journals.AbbreviationsTest" time="0.411">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationsTest]/[method:getNextAbbreviationRemovesPoint()]
display-name: getNextAbbreviationRemovesPoint()
]]></system-out>
</testcase>
<testcase name="getNextAbbreviationAbbreviatesIEEEJournalTitle()" classname="org.jabref.logic.journals.AbbreviationsTest" time="0.059">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationsTest]/[method:getNextAbbreviationAbbreviatesIEEEJournalTitle()]
display-name: getNextAbbreviationAbbreviatesIEEEJournalTitle()
]]></system-out>
</testcase>
<testcase name="getNextAbbreviationExpandsIEEEAbbreviation()" classname="org.jabref.logic.journals.AbbreviationsTest" time="0.055">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationsTest]/[method:getNextAbbreviationExpandsIEEEAbbreviation()]
display-name: getNextAbbreviationExpandsIEEEAbbreviation()
]]></system-out>
</testcase>
<testcase name="getNextAbbreviationExpandsAbbreviation()" classname="org.jabref.logic.journals.AbbreviationsTest" time="0.051">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationsTest]/[method:getNextAbbreviationExpandsAbbreviation()]
display-name: getNextAbbreviationExpandsAbbreviation()
]]></system-out>
</testcase>
<testcase name="getNextAbbreviationAbbreviatesJournalTitle()" classname="org.jabref.logic.journals.AbbreviationsTest" time="0.046">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationsTest]/[method:getNextAbbreviationAbbreviatesJournalTitle()]
display-name: getNextAbbreviationAbbreviatesJournalTitle()
]]></system-out>
</testcase>
<testcase name="testAbbreviationsWithUnusedElements()" classname="org.jabref.logic.journals.AbbreviationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationTest]/[method:testAbbreviationsWithUnusedElements()]
display-name: testAbbreviationsWithUnusedElements()
]]></system-out>
</testcase>
<testcase name="testGetNextElementWithTrailingSpaces()" classname="org.jabref.logic.journals.AbbreviationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationTest]/[method:testGetNextElementWithTrailingSpaces()]
display-name: testGetNextElementWithTrailingSpaces()
]]></system-out>
</testcase>
<testcase name="testIsoAndMedlineAbbreviationsAreSame()" classname="org.jabref.logic.journals.AbbreviationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationTest]/[method:testIsoAndMedlineAbbreviationsAreSame()]
display-name: testIsoAndMedlineAbbreviationsAreSame()
]]></system-out>
</testcase>
<testcase name="testAbbreviationsWithTrailingSpaces()" classname="org.jabref.logic.journals.AbbreviationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationTest]/[method:testAbbreviationsWithTrailingSpaces()]
display-name: testAbbreviationsWithTrailingSpaces()
]]></system-out>
</testcase>
<testcase name="testGetNextElement()" classname="org.jabref.logic.journals.AbbreviationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationTest]/[method:testGetNextElement()]
display-name: testGetNextElement()
]]></system-out>
</testcase>
<testcase name="testDuplicates()" classname="org.jabref.logic.journals.JournalAbbreviationRepositoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.JournalAbbreviationRepositoryTest]/[method:testDuplicates()]
display-name: testDuplicates()
]]></system-out>
</testcase>
<testcase name="oneElement()" classname="org.jabref.logic.journals.JournalAbbreviationRepositoryTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.JournalAbbreviationRepositoryTest]/[method:oneElement()]
display-name: oneElement()
]]></system-out>
</testcase>
<testcase name="testDuplicatesIsoOnly()" classname="org.jabref.logic.journals.JournalAbbreviationRepositoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.JournalAbbreviationRepositoryTest]/[method:testDuplicatesIsoOnly()]
display-name: testDuplicatesIsoOnly()
]]></system-out>
</testcase>
<testcase name="empty()" classname="org.jabref.logic.journals.JournalAbbreviationRepositoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.JournalAbbreviationRepositoryTest]/[method:empty()]
display-name: empty()
]]></system-out>
</testcase>
<testcase name="testDuplicateKeys()" classname="org.jabref.logic.journals.JournalAbbreviationRepositoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.JournalAbbreviationRepositoryTest]/[method:testDuplicateKeys()]
display-name: testDuplicateKeys()
]]></system-out>
</testcase>
<testcase name="noDuplicatesInShippedIEEEStandardJournalAbbreviations()" classname="org.jabref.logic.journals.ShippedJournalAbbreviationDuplicateTest" time="12.947">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.ShippedJournalAbbreviationDuplicateTest]/[method:noDuplicatesInShippedIEEEStandardJournalAbbreviations()]
display-name: noDuplicatesInShippedIEEEStandardJournalAbbreviations()
]]></system-out>
</testcase>
<testcase name="noDuplicatesInShippedIEEEOfficialJournalAbbreviations()" classname="org.jabref.logic.journals.ShippedJournalAbbreviationDuplicateTest" time="10.695">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.ShippedJournalAbbreviationDuplicateTest]/[method:noDuplicatesInShippedIEEEOfficialJournalAbbreviations()]
display-name: noDuplicatesInShippedIEEEOfficialJournalAbbreviations()
]]></system-out>
</testcase>
<testcase name="testReadJournalListFromResource()" classname="org.jabref.logic.journals.AbbreviationParserTest" time="0.024">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.journals.AbbreviationParserTest]/[method:testReadJournalListFromResource()]
display-name: testReadJournalListFromResource()
]]></system-out>
</testcase>
<testcase name="testGetCharWidth()" classname="org.jabref.logic.bst.BibtexWidthTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexWidthTest]/[method:testGetCharWidth()]
display-name: testGetCharWidth()
]]></system-out>
</testcase>
<testcase name="testWidth()" classname="org.jabref.logic.bst.BibtexWidthTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexWidthTest]/[method:testWidth()]
display-name: testWidth()
]]></system-out>
</testcase>
<testcase name="testTitleCase()" classname="org.jabref.logic.bst.BibtexCaseChangersTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexCaseChangersTest]/[method:testTitleCase()]
display-name: testTitleCase()
]]></system-out>
</testcase>
<testcase name="testColon()" classname="org.jabref.logic.bst.BibtexCaseChangersTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexCaseChangersTest]/[method:testColon()]
display-name: testColon()
]]></system-out>
</testcase>
<testcase name="testSpecialBracketPlacement()" classname="org.jabref.logic.bst.BibtexCaseChangersTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexCaseChangersTest]/[method:testSpecialBracketPlacement()]
display-name: testSpecialBracketPlacement()
]]></system-out>
</testcase>
<testcase name="testChangeCase()" classname="org.jabref.logic.bst.BibtexCaseChangersTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexCaseChangersTest]/[method:testChangeCase()]
display-name: testChangeCase()
]]></system-out>
</testcase>
<testcase name="testPurify()" classname="org.jabref.logic.bst.BibtexPurifyTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexPurifyTest]/[method:testPurify()]
display-name: testPurify()
]]></system-out>
</testcase>
<testcase name="testVMIfSkipPop()" classname="org.jabref.logic.bst.TestVM" time="0.091">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMIfSkipPop()]
display-name: testVMIfSkipPop()
]]></system-out>
</testcase>
<testcase name="testVMSimple()" classname="org.jabref.logic.bst.TestVM" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMSimple()]
display-name: testVMSimple()
]]></system-out>
</testcase>
<testcase name="testHypthenatedName()" classname="org.jabref.logic.bst.TestVM" time="0.166">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testHypthenatedName()]
display-name: testHypthenatedName()
]]></system-out>
</testcase>
<testcase name="testVMStringOps1()" classname="org.jabref.logic.bst.TestVM" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMStringOps1()]
display-name: testVMStringOps1()
]]></system-out>
</testcase>
<testcase name="testVMExecuteSimple()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMExecuteSimple()]
display-name: testVMExecuteSimple()
]]></system-out>
</testcase>
<testcase name="testAbbrv()" classname="org.jabref.logic.bst.TestVM" time="0.044">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testAbbrv()]
display-name: testAbbrv()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.bst.TestVM" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testLabel()" classname="org.jabref.logic.bst.TestVM" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testLabel()]
display-name: testLabel()
]]></system-out>
</testcase>
<testcase name="testQuote()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testQuote()]
display-name: testQuote()
]]></system-out>
</testcase>
<testcase name="testNumNames()" classname="org.jabref.logic.bst.TestVM" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testNumNames()]
display-name: testNumNames()
]]></system-out>
</testcase>
<testcase name="testWhile()" classname="org.jabref.logic.bst.TestVM" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testWhile()]
display-name: testWhile()
]]></system-out>
</testcase>
<testcase name="testWidth()" classname="org.jabref.logic.bst.TestVM" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testWidth()]
display-name: testWidth()
]]></system-out>
</testcase>
<testcase name="testSort()" classname="org.jabref.logic.bst.TestVM" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testSort()]
display-name: testSort()
]]></system-out>
</testcase>
<testcase name="testType()" classname="org.jabref.logic.bst.TestVM" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testType()]
display-name: testType()
]]></system-out>
</testcase>
<testcase name="testVMExecuteSimple2()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMExecuteSimple2()]
display-name: testVMExecuteSimple2()
]]></system-out>
</testcase>
<testcase name="testFormatName()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testFormatName()]
display-name: testFormatName()
]]></system-out>
</testcase>
<testcase name="testVMArithmetic()" classname="org.jabref.logic.bst.TestVM" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMArithmetic()]
display-name: testVMArithmetic()
]]></system-out>
</testcase>
<testcase name="testVMChrToIntIntToChr()" classname="org.jabref.logic.bst.TestVM" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMChrToIntIntToChr()]
display-name: testVMChrToIntIntToChr()
]]></system-out>
</testcase>
<testcase name="testBuildIn()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testBuildIn()]
display-name: testBuildIn()
]]></system-out>
</testcase>
<testcase name="testDuplicateEmptyPopSwapIf()" classname="org.jabref.logic.bst.TestVM" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testDuplicateEmptyPopSwapIf()]
display-name: testDuplicateEmptyPopSwapIf()
]]></system-out>
</testcase>
<testcase name="testCallType()" classname="org.jabref.logic.bst.TestVM" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testCallType()]
display-name: testCallType()
]]></system-out>
</testcase>
<testcase name="testVariables()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVariables()]
display-name: testVariables()
]]></system-out>
</testcase>
<testcase name="testMissing()" classname="org.jabref.logic.bst.TestVM" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testMissing()]
display-name: testMissing()
]]></system-out>
</testcase>
<testcase name="testVMIntToStr()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMIntToStr()]
display-name: testVMIntToStr()
]]></system-out>
</testcase>
<testcase name="testFormatName2()" classname="org.jabref.logic.bst.TestVM" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testFormatName2()]
display-name: testFormatName2()
]]></system-out>
</testcase>
<testcase name="testTextLength()" classname="org.jabref.logic.bst.TestVM" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testTextLength()]
display-name: testTextLength()
]]></system-out>
</testcase>
<testcase name="testSubstring()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testSubstring()]
display-name: testSubstring()
]]></system-out>
</testcase>
<testcase name="testChangeCase()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testChangeCase()]
display-name: testChangeCase()
]]></system-out>
</testcase>
<testcase name="testVMFunction1()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMFunction1()]
display-name: testVMFunction1()
]]></system-out>
</testcase>
<testcase name="testIterate()" classname="org.jabref.logic.bst.TestVM" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testIterate()]
display-name: testIterate()
]]></system-out>
</testcase>
<testcase name="testNumNames2()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testNumNames2()]
display-name: testNumNames2()
]]></system-out>
</testcase>
<testcase name="testVMArithmetic2()" classname="org.jabref.logic.bst.TestVM" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMArithmetic2()]
display-name: testVMArithmetic2()
]]></system-out>
</testcase>
<testcase name="testVMSwap()" classname="org.jabref.logic.bst.TestVM" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMSwap()]
display-name: testVMSwap()
]]></system-out>
</testcase>
<testcase name="testVMChrToInt()" classname="org.jabref.logic.bst.TestVM" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TestVM]/[method:testVMChrToInt()]
display-name: testVMChrToInt()
]]></system-out>
</testcase>
<testcase name="testPrefix()" classname="org.jabref.logic.bst.TextPrefixFunctionTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.TextPrefixFunctionTest]/[method:testPrefix()]
display-name: testPrefix()
]]></system-out>
</testcase>
<testcase name="testConsumeToMatchingBrace()" classname="org.jabref.logic.bst.BibtexNameFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexNameFormatterTest]/[method:testConsumeToMatchingBrace()]
display-name: testConsumeToMatchingBrace()
]]></system-out>
</testcase>
<testcase name="testFormatName()" classname="org.jabref.logic.bst.BibtexNameFormatterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexNameFormatterTest]/[method:testFormatName()]
display-name: testFormatName()
]]></system-out>
</testcase>
<testcase name="testGetFirstCharOfString()" classname="org.jabref.logic.bst.BibtexNameFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexNameFormatterTest]/[method:testGetFirstCharOfString()]
display-name: testGetFirstCharOfString()
]]></system-out>
</testcase>
<testcase name="testNumberOfChars()" classname="org.jabref.logic.bst.BibtexNameFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bst.BibtexNameFormatterTest]/[method:testNumberOfChars()]
display-name: testNumberOfChars()
]]></system-out>
</testcase>
<testcase name="charsetsShouldNotBeEmpty()" classname="org.jabref.logic.l10n.EncodingsTest" time="0.267">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.EncodingsTest]/[method:charsetsShouldNotBeEmpty()]
display-name: charsetsShouldNotBeEmpty()
]]></system-out>
</testcase>
<testcase name="charsetsShouldNotBeNull()" classname="org.jabref.logic.l10n.EncodingsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.EncodingsTest]/[method:charsetsShouldNotBeNull()]
display-name: charsetsShouldNotBeNull()
]]></system-out>
</testcase>
<testcase name="displayNamesShouldNotBeNull()" classname="org.jabref.logic.l10n.EncodingsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.EncodingsTest]/[method:displayNamesShouldNotBeNull()]
display-name: displayNamesShouldNotBeNull()
]]></system-out>
</testcase>
<testcase name="displayNamesShouldNotBeEmpty()" classname="org.jabref.logic.l10n.EncodingsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.EncodingsTest]/[method:displayNamesShouldNotBeEmpty()]
display-name: displayNamesShouldNotBeEmpty()
]]></system-out>
</testcase>
<testcase name="testReplacePlaceholders()" classname="org.jabref.logic.l10n.LocalizationKeyParamsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationKeyParamsTest]/[method:testReplacePlaceholders()]
display-name: testReplacePlaceholders()
]]></system-out>
</testcase>
<testcase name="testTooManyParams()" classname="org.jabref.logic.l10n.LocalizationKeyParamsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationKeyParamsTest]/[method:testTooManyParams()]
display-name: testTooManyParams()
]]></system-out>
</testcase>
<testcase name="testi10nFiles()" classname="org.jabref.logic.l10n.PropertiesLocaleCompletenessTest" time="0.24">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.PropertiesLocaleCompletenessTest]/[method:testi10nFiles()]
display-name: testi10nFiles()
]]></system-out>
</testcase>
<testcase name="testCompletenessOfBundles()" classname="org.jabref.logic.l10n.PropertiesLocaleCompletenessTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.PropertiesLocaleCompletenessTest]/[method:testCompletenessOfBundles()]
display-name: testCompletenessOfBundles()
]]></system-out>
</testcase>
<testcase name="testParameterParsingCode()" classname="org.jabref.logic.l10n.LocalizationParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationParserTest]/[method:testParameterParsingCode()]
display-name: testParameterParsingCode()
]]></system-out>
</testcase>
<testcase name="testKeyParsingCode()" classname="org.jabref.logic.l10n.LocalizationParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationParserTest]/[method:testKeyParsingCode()]
display-name: testKeyParsingCode()
]]></system-out>
</testcase>
<testcase name="findMissingMenuLocalizationKeys()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.67">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:findMissingMenuLocalizationKeys()]
display-name: findMissingMenuLocalizationKeys()
]]></system-out>
</testcase>
<testcase name="languageKeysShouldNotBeQuotedInFiles()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.124">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:languageKeysShouldNotBeQuotedInFiles()]
display-name: languageKeysShouldNotBeQuotedInFiles()
]]></system-out>
</testcase>
<testcase name="allFilesMustBeInLanguages()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:allFilesMustBeInLanguages()]
display-name: allFilesMustBeInLanguages()
]]></system-out>
</testcase>
<testcase name="findObsoleteLocalizationKeys()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="4.718">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:findObsoleteLocalizationKeys()]
display-name: findObsoleteLocalizationKeys()
]]></system-out>
</testcase>
<testcase name="keyValueShouldBeEqualForEnglishPropertiesMessages()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.019">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:keyValueShouldBeEqualForEnglishPropertiesMessages()]
display-name: keyValueShouldBeEqualForEnglishPropertiesMessages()
]]></system-out>
</testcase>
<testcase name="ensureNoDuplicates()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.077">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:ensureNoDuplicates()]
display-name: ensureNoDuplicates()
]]></system-out>
</testcase>
<testcase name="localizationParameterMustIncludeAString()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.208">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:localizationParameterMustIncludeAString()]
display-name: localizationParameterMustIncludeAString()
]]></system-out>
</testcase>
<testcase name="findMissingLocalizationKeys()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.346">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:findMissingLocalizationKeys()]
display-name: findMissingLocalizationKeys()
]]></system-out>
</testcase>
<testcase name="findObsoleteMenuLocalizationKeys()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.084">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:findObsoleteMenuLocalizationKeys()]
display-name: findObsoleteMenuLocalizationKeys()
]]></system-out>
</testcase>
<testcase name="keyValueShouldBeEqualForEnglishPropertiesMenu()" classname="org.jabref.logic.l10n.LocalizationConsistencyTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationConsistencyTest]/[method:keyValueShouldBeEqualForEnglishPropertiesMenu()]
display-name: keyValueShouldBeEqualForEnglishPropertiesMenu()
]]></system-out>
</testcase>
<testcase name="testSetKnownLanguage()" classname="org.jabref.logic.l10n.LocalizationTest" time="0.018">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testSetKnownLanguage()]
display-name: testSetKnownLanguage()
]]></system-out>
</testcase>
<testcase name="testKnownEnglishTranslationOfUndo()" classname="org.jabref.logic.l10n.LocalizationTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testKnownEnglishTranslationOfUndo()]
display-name: testKnownEnglishTranslationOfUndo()
]]></system-out>
</testcase>
<testcase name="testUnsetLanguageTranslation()" classname="org.jabref.logic.l10n.LocalizationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testUnsetLanguageTranslation()]
display-name: testUnsetLanguageTranslation()
]]></system-out>
</testcase>
<testcase name="testKnownGermanTranslationDoesNotHaveAmpersand()" classname="org.jabref.logic.l10n.LocalizationTest" time="0.041">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testKnownGermanTranslationDoesNotHaveAmpersand()]
display-name: testKnownGermanTranslationDoesNotHaveAmpersand()
]]></system-out>
</testcase>
<testcase name="testUnknownTranslation()" classname="org.jabref.logic.l10n.LocalizationTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testUnknownTranslation()]
display-name: testUnknownTranslation()
]]></system-out>
</testcase>
<testcase name="testKnownTranslationWithGroups()" classname="org.jabref.logic.l10n.LocalizationTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testKnownTranslationWithGroups()]
display-name: testKnownTranslationWithGroups()
]]></system-out>
</testcase>
<testcase name="testKnownTranslationWithCountryModifier()" classname="org.jabref.logic.l10n.LocalizationTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testKnownTranslationWithCountryModifier()]
display-name: testKnownTranslationWithCountryModifier()
]]></system-out>
</testcase>
<testcase name="testSetUnknownLanguage()" classname="org.jabref.logic.l10n.LocalizationTest" time="0.02">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testSetUnknownLanguage()]
display-name: testSetUnknownLanguage()
]]></system-out>
</testcase>
<testcase name="testKnownGermanTranslation()" classname="org.jabref.logic.l10n.LocalizationTest" time="0.039">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LocalizationTest]/[method:testKnownGermanTranslation()]
display-name: testKnownGermanTranslation()
]]></system-out>
</testcase>
<testcase name="convertKnownLanguageAndCountryOnly()" classname="org.jabref.logic.l10n.LanguagesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertKnownLanguageAndCountryOnly()]
display-name: convertKnownLanguageAndCountryOnly()
]]></system-out>
</testcase>
<testcase name="convertKnownLanguageAndCountryInCorrect()" classname="org.jabref.logic.l10n.LanguagesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertKnownLanguageAndCountryInCorrect()]
display-name: convertKnownLanguageAndCountryInCorrect()
]]></system-out>
</testcase>
<testcase name="convertToKnownLocaleNull()" classname="org.jabref.logic.l10n.LanguagesTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertToKnownLocaleNull()]
display-name: convertToKnownLocaleNull()
]]></system-out>
</testcase>
<testcase name="convertKnownLanguageAndUnknownCountry()" classname="org.jabref.logic.l10n.LanguagesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertKnownLanguageAndUnknownCountry()]
display-name: convertKnownLanguageAndUnknownCountry()
]]></system-out>
</testcase>
<testcase name="convertKnownLanguageOnly()" classname="org.jabref.logic.l10n.LanguagesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertKnownLanguageOnly()]
display-name: convertKnownLanguageOnly()
]]></system-out>
</testcase>
<testcase name="convertUnknownLanguage()" classname="org.jabref.logic.l10n.LanguagesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertUnknownLanguage()]
display-name: convertUnknownLanguage()
]]></system-out>
</testcase>
<testcase name="convertUnknownKnownLanguageAndUnknownCountry()" classname="org.jabref.logic.l10n.LanguagesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertUnknownKnownLanguageAndUnknownCountry()]
display-name: convertUnknownKnownLanguageAndUnknownCountry()
]]></system-out>
</testcase>
<testcase name="convertKnownLanguageAndCountryCorrect()" classname="org.jabref.logic.l10n.LanguagesTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.l10n.LanguagesTest]/[method:convertKnownLanguageAndCountryCorrect()]
display-name: convertKnownLanguageAndCountryCorrect()
]]></system-out>
</testcase>
<testcase name="testUnsupportedSpecialCommands()" classname="org.jabref.logic.openoffice.OOPreFormatterTest" time="0.02">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOPreFormatterTest]/[method:testUnsupportedSpecialCommands()]
display-name: testUnsupportedSpecialCommands()
]]></system-out>
</testcase>
<testcase name="testFormatting()" classname="org.jabref.logic.openoffice.OOPreFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOPreFormatterTest]/[method:testFormatting()]
display-name: testFormatting()
]]></system-out>
</testcase>
<testcase name="testPlainFormat()" classname="org.jabref.logic.openoffice.OOPreFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOPreFormatterTest]/[method:testPlainFormat()]
display-name: testPlainFormat()
]]></system-out>
</testcase>
<testcase name="testFormatStripLatexCommands()" classname="org.jabref.logic.openoffice.OOPreFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOPreFormatterTest]/[method:testFormatStripLatexCommands()]
display-name: testFormatStripLatexCommands()
]]></system-out>
</testcase>
<testcase name="testSpecialCommands()" classname="org.jabref.logic.openoffice.OOPreFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOPreFormatterTest]/[method:testSpecialCommands()]
display-name: testSpecialCommands()
]]></system-out>
</testcase>
<testcase name="testEquations()" classname="org.jabref.logic.openoffice.OOPreFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOPreFormatterTest]/[method:testEquations()]
display-name: testEquations()
]]></system-out>
</testcase>
<testcase name="testFormatAccents()" classname="org.jabref.logic.openoffice.OOPreFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOPreFormatterTest]/[method:testFormatAccents()]
display-name: testFormatAccents()
]]></system-out>
</testcase>
<testcase name="testRemoveInternalStyleReturnsFalseAndDoNotRemove()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.174">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testRemoveInternalStyleReturnsFalseAndDoNotRemove()]
display-name: testRemoveInternalStyleReturnsFalseAndDoNotRemove()
]]></system-out>
</testcase>
<testcase name="testInitalizeWithOneExternalFile()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.018">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testInitalizeWithOneExternalFile()]
display-name: testInitalizeWithOneExternalFile()
]]></system-out>
</testcase>
<testcase name="testGetStoredUsedStyle()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.022">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testGetStoredUsedStyle()]
display-name: testGetStoredUsedStyle()
]]></system-out>
</testcase>
<testcase name="throwNPEWithNullPreferences()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.025">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:throwNPEWithNullPreferences()]
display-name: throwNPEWithNullPreferences()
]]></system-out>
</testcase>
<testcase name="testAddStyleLeadsToOneMoreStyle()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.017">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testAddStyleLeadsToOneMoreStyle()]
display-name: testAddStyleLeadsToOneMoreStyle()
]]></system-out>
</testcase>
<testcase name="testAddNullStyleThrowsNPE()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.014">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testAddNullStyleThrowsNPE()]
display-name: testAddNullStyleThrowsNPE()
]]></system-out>
</testcase>
<testcase name="testAddInvalidStyleLeadsToNoMoreStyle()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.019">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testAddInvalidStyleLeadsToNoMoreStyle()]
display-name: testAddInvalidStyleLeadsToNoMoreStyle()
]]></system-out>
</testcase>
<testcase name="testGetDefaultUsedStyleWhenEmpty()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.014">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testGetDefaultUsedStyleWhenEmpty()]
display-name: testGetDefaultUsedStyleWhenEmpty()
]]></system-out>
</testcase>
<testcase name="testGetDefaultUsedStyleWhenIncorrect()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testGetDefaultUsedStyleWhenIncorrect()]
display-name: testGetDefaultUsedStyleWhenIncorrect()
]]></system-out>
</testcase>
<testcase name="throwNPEWithNullLayoutPreferences()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:throwNPEWithNullLayoutPreferences()]
display-name: throwNPEWithNullLayoutPreferences()
]]></system-out>
</testcase>
<testcase name="throwNPEWithNullCharset()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:throwNPEWithNullCharset()]
display-name: throwNPEWithNullCharset()
]]></system-out>
</testcase>
<testcase name="testInitalizeWithOneExternalFileRemoveStyleUpdatesPreferences()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testInitalizeWithOneExternalFileRemoveStyleUpdatesPreferences()]
display-name: testInitalizeWithOneExternalFileRemoveStyleUpdatesPreferences()
]]></system-out>
</testcase>
<testcase name="testGetStylesWithEmptyExternal()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testGetStylesWithEmptyExternal()]
display-name: testGetStylesWithEmptyExternal()
]]></system-out>
</testcase>
<testcase name="testInitalizeWithOneExternalFileRemoveStyle()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testInitalizeWithOneExternalFileRemoveStyle()]
display-name: testInitalizeWithOneExternalFileRemoveStyle()
]]></system-out>
</testcase>
<testcase name="testInitalizeWithIncorrectExternalFile()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testInitalizeWithIncorrectExternalFile()]
display-name: testInitalizeWithIncorrectExternalFile()
]]></system-out>
</testcase>
<testcase name="testAddSameStyleTwiceLeadsToOneMoreStyle()" classname="org.jabref.logic.openoffice.StyleLoaderTest" time="0.015">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.StyleLoaderTest]/[method:testAddSameStyleTwiceLeadsToOneMoreStyle()]
display-name: testAddSameStyleTwiceLeadsToOneMoreStyle()
]]></system-out>
</testcase>
<testcase name="testNumerical()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testNumerical()]
display-name: testNumerical()
]]></system-out>
</testcase>
<testcase name="testGetCitationMarkerInParenthesisUniquefiers()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetCitationMarkerInParenthesisUniquefiers()]
display-name: testGetCitationMarkerInParenthesisUniquefiers()
]]></system-out>
</testcase>
<testcase name="testCompareToEqual()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testCompareToEqual()]
display-name: testCompareToEqual()
]]></system-out>
</testcase>
<testcase name="testGetCitationMarkerInTextUniquefiersThreeSameAuthor()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetCitationMarkerInTextUniquefiersThreeSameAuthor()]
display-name: testGetCitationMarkerInTextUniquefiersThreeSameAuthor()
]]></system-out>
</testcase>
<testcase name="testEmptyEntryMarker()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testEmptyEntryMarker()]
display-name: testEmptyEntryMarker()
]]></system-out>
</testcase>
<testcase name="testGetNumCitationMarker()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetNumCitationMarker()]
display-name: testGetNumCitationMarker()
]]></system-out>
</testcase>
<testcase name="testEmptyStringPropertyAndOxfordComma()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.045">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testEmptyStringPropertyAndOxfordComma()]
display-name: testEmptyStringPropertyAndOxfordComma()
]]></system-out>
</testcase>
<testcase name="testInstitutionAuthorMarker()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testInstitutionAuthorMarker()]
display-name: testInstitutionAuthorMarker()
]]></system-out>
</testcase>
<testcase name="testNullYearMarker()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testNullYearMarker()]
display-name: testNullYearMarker()
]]></system-out>
</testcase>
<testcase name="testNullAuthorMarker()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testNullAuthorMarker()]
display-name: testNullAuthorMarker()
]]></system-out>
</testcase>
<testcase name="testVonAuthor()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testVonAuthor()]
display-name: testVonAuthor()
]]></system-out>
</testcase>
<testcase name="testGetNumCitationMarkerUndefined()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetNumCitationMarkerUndefined()]
display-name: testGetNumCitationMarkerUndefined()
]]></system-out>
</testcase>
<testcase name="testVonAuthorMarker()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testVonAuthorMarker()]
display-name: testVonAuthorMarker()
]]></system-out>
</testcase>
<testcase name="testCompareToNotEqual()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testCompareToNotEqual()]
display-name: testCompareToNotEqual()
]]></system-out>
</testcase>
<testcase name="testAuthorYearAsFile()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testAuthorYearAsFile()]
display-name: testAuthorYearAsFile()
]]></system-out>
</testcase>
<testcase name="testGetCitationMarkerInTextUniquefiers()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetCitationMarkerInTextUniquefiers()]
display-name: testGetCitationMarkerInTextUniquefiers()
]]></system-out>
</testcase>
<testcase name="testInstitutionAuthor()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testInstitutionAuthor()]
display-name: testInstitutionAuthor()
]]></system-out>
</testcase>
<testcase name="testGetCitationMarker()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.048">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetCitationMarker()]
display-name: testGetCitationMarker()
]]></system-out>
</testcase>
<testcase name="testGetCitProperty()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetCitProperty()]
display-name: testGetCitProperty()
]]></system-out>
</testcase>
<testcase name="testEquals()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testEquals()]
display-name: testEquals()
]]></system-out>
</testcase>
<testcase name="testLayout()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.026">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testLayout()]
display-name: testLayout()
]]></system-out>
</testcase>
<testcase name="testNotEquals()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testNotEquals()]
display-name: testNotEquals()
]]></system-out>
</testcase>
<testcase name="testGetCitationMarkerInParenthesisUniquefiersThreeSameAuthor()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testGetCitationMarkerInParenthesisUniquefiersThreeSameAuthor()]
display-name: testGetCitationMarkerInParenthesisUniquefiersThreeSameAuthor()
]]></system-out>
</testcase>
<testcase name="testAuthorYear()" classname="org.jabref.logic.openoffice.OOBibStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.openoffice.OOBibStyleTest]/[method:testAuthorYear()]
display-name: testAuthorYear()
]]></system-out>
</testcase>
<testcase name="testHTMLCharDoubleLineBreak()" classname="org.jabref.logic.layout.LayoutTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.LayoutTest]/[method:testHTMLCharDoubleLineBreak()]
display-name: testHTMLCharDoubleLineBreak()
]]></system-out>
</testcase>
<testcase name="testWrapFileLinksLayout()" classname="org.jabref.logic.layout.LayoutTest" time="0.023">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.LayoutTest]/[method:testWrapFileLinksLayout()]
display-name: testWrapFileLinksLayout()
]]></system-out>
</testcase>
<testcase name="testHTMLChar()" classname="org.jabref.logic.layout.LayoutTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.LayoutTest]/[method:testHTMLChar()]
display-name: testHTMLChar()
]]></system-out>
</testcase>
<testcase name="testPluginLoading()" classname="org.jabref.logic.layout.LayoutTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.LayoutTest]/[method:testPluginLoading()]
display-name: testPluginLoading()
]]></system-out>
</testcase>
<testcase name="testLayout()" classname="org.jabref.logic.layout.LayoutTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.LayoutTest]/[method:testLayout()]
display-name: testLayout()
]]></system-out>
</testcase>
<testcase name="testLayoutBibtextype()" classname="org.jabref.logic.layout.LayoutTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.LayoutTest]/[method:testLayoutBibtextype()]
display-name: testLayoutBibtextype()
]]></system-out>
</testcase>
<testcase name="testParseMethodCalls()" classname="org.jabref.logic.layout.LayoutEntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.LayoutEntryTest]/[method:testParseMethodCalls()]
display-name: testParseMethodCalls()
]]></system-out>
</testcase>
<testcase name="testSimpleText()" classname="org.jabref.logic.layout.format.ReplaceTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceTest]/[method:testSimpleText()]
display-name: testSimpleText()
]]></system-out>
</testcase>
<testcase name="testFormatNull()" classname="org.jabref.logic.layout.format.ReplaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceTest]/[method:testFormatNull()]
display-name: testFormatNull()
]]></system-out>
</testcase>
<testcase name="testNoProperArgument()" classname="org.jabref.logic.layout.format.ReplaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceTest]/[method:testNoProperArgument()]
display-name: testNoProperArgument()
]]></system-out>
</testcase>
<testcase name="testFormatEmpty()" classname="org.jabref.logic.layout.format.ReplaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceTest]/[method:testFormatEmpty()]
display-name: testFormatEmpty()
]]></system-out>
</testcase>
<testcase name="testNoArgumentSet()" classname="org.jabref.logic.layout.format.ReplaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceTest]/[method:testNoArgumentSet()]
display-name: testNoArgumentSet()
]]></system-out>
</testcase>
<testcase name="testSimpleTextNoHit()" classname="org.jabref.logic.layout.format.ReplaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceTest]/[method:testSimpleTextNoHit()]
display-name: testSimpleTextNoHit()
]]></system-out>
</testcase>
<testcase name="testFormatString()" classname="org.jabref.logic.layout.format.RemoveTildeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveTildeTest]/[method:testFormatString()]
display-name: testFormatString()
]]></system-out>
</testcase>
<testcase name="testConversionOfUnderscoreWithBraces()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.014">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testConversionOfUnderscoreWithBraces()]
display-name: testConversionOfUnderscoreWithBraces()
]]></system-out>
</testcase>
<testcase name="unknownCommandKeepsArgument()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:unknownCommandKeepsArgument()]
display-name: unknownCommandKeepsArgument()
]]></system-out>
</testcase>
<testcase name="testUpperCaseIWithDiaresis()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testUpperCaseIWithDiaresis()]
display-name: testUpperCaseIWithDiaresis()
]]></system-out>
</testcase>
<testcase name="testChi()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testChi()]
display-name: testChi()
]]></system-out>
</testcase>
<testcase name="testFormatTextit()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testFormatTextit()]
display-name: testFormatTextit()
]]></system-out>
</testcase>
<testcase name="testFormatUmlaut()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testFormatUmlaut()]
display-name: testFormatUmlaut()
]]></system-out>
</testcase>
<testcase name="testDoubleCombiningAccents()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testDoubleCombiningAccents()]
display-name: testDoubleCombiningAccents()
]]></system-out>
</testcase>
<testcase name="testIWithDiaresis()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testIWithDiaresis()]
display-name: testIWithDiaresis()
]]></system-out>
</testcase>
<testcase name="testApostrophC()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testApostrophC()]
display-name: testApostrophC()
]]></system-out>
</testcase>
<testcase name="testApostrophN()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testApostrophN()]
display-name: testApostrophN()
]]></system-out>
</testcase>
<testcase name="testApostrophO()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testApostrophO()]
display-name: testApostrophO()
]]></system-out>
</testcase>
<testcase name="testCombiningAccentsCase1()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testCombiningAccentsCase1()]
display-name: testCombiningAccentsCase1()
]]></system-out>
</testcase>
<testcase name="testCombiningAccentsCase2()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<skipped><![CDATA[This is not a standard LaTeX command. It is debatable why we should convert this.]]></skipped>
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testCombiningAccentsCase2()]
display-name: testCombiningAccentsCase2()
]]></system-out>
</testcase>
<testcase name="testPreservationOfSingleUnderscore()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testPreservationOfSingleUnderscore()]
display-name: testPreservationOfSingleUnderscore()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="unknownCommandWithEmptyArgumentIsIgnored()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:unknownCommandWithEmptyArgumentIsIgnored()]
display-name: unknownCommandWithEmptyArgumentIsIgnored()
]]></system-out>
</testcase>
<testcase name="testConversionOfOrdinal1st()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testConversionOfOrdinal1st()]
display-name: testConversionOfOrdinal1st()
]]></system-out>
</testcase>
<testcase name="testConversionOfOrdinal2nd()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testConversionOfOrdinal2nd()]
display-name: testConversionOfOrdinal2nd()
]]></system-out>
</testcase>
<testcase name="testConversionOfOrdinal3rd()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testConversionOfOrdinal3rd()]
display-name: testConversionOfOrdinal3rd()
]]></system-out>
</testcase>
<testcase name="testConversionOfOrdinal4th()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testConversionOfOrdinal4th()]
display-name: testConversionOfOrdinal4th()
]]></system-out>
</testcase>
<testcase name="testConversionOfOrdinal9th()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testConversionOfOrdinal9th()]
display-name: testConversionOfOrdinal9th()
]]></system-out>
</testcase>
<testcase name="testPlainFormat()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testPlainFormat()]
display-name: testPlainFormat()
]]></system-out>
</testcase>
<testcase name="testFormatStripLatexCommands()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testFormatStripLatexCommands()]
display-name: testFormatStripLatexCommands()
]]></system-out>
</testcase>
<testcase name="testIWithDiaresisAndEscapedI()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testIWithDiaresisAndEscapedI()]
display-name: testIWithDiaresisAndEscapedI()
]]></system-out>
</testcase>
<testcase name="testEquationsMoreComplicatedFormatting()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testEquationsMoreComplicatedFormatting()]
display-name: testEquationsMoreComplicatedFormatting()
]]></system-out>
</testcase>
<testcase name="testAcuteNLongVersion()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testAcuteNLongVersion()]
display-name: testAcuteNLongVersion()
]]></system-out>
</testcase>
<testcase name="testSWithCaron()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testSWithCaron()]
display-name: testSWithCaron()
]]></system-out>
</testcase>
<testcase name="testPolishName()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testPolishName()]
display-name: testPolishName()
]]></system-out>
</testcase>
<testcase name="testIWithDiaresisAndUnnecessaryBraces()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testIWithDiaresisAndUnnecessaryBraces()]
display-name: testIWithDiaresisAndUnnecessaryBraces()
]]></system-out>
</testcase>
<testcase name="testAcuteNShortVersion()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.049">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testAcuteNShortVersion()]
display-name: testAcuteNShortVersion()
]]></system-out>
</testcase>
<testcase name="testTildeN()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testTildeN()]
display-name: testTildeN()
]]></system-out>
</testcase>
<testcase name="testEquationsSingleSymbol()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testEquationsSingleSymbol()]
display-name: testEquationsSingleSymbol()
]]></system-out>
</testcase>
<testcase name="testEscapedDollarSign()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:testEscapedDollarSign()]
display-name: testEscapedDollarSign()
]]></system-out>
</testcase>
<testcase name="unknownCommandIsIgnored()" classname="org.jabref.logic.layout.format.LatexToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LatexToUnicodeFormatterTest]/[method:unknownCommandIsIgnored()]
display-name: unknownCommandIsIgnored()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.HTMLParagraphsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLParagraphsTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormatDoubleDash()" classname="org.jabref.logic.layout.format.FirstPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FirstPageTest]/[method:testFormatDoubleDash()]
display-name: testFormatDoubleDash()
]]></system-out>
</testcase>
<testcase name="testFormatSingleDash()" classname="org.jabref.logic.layout.format.FirstPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FirstPageTest]/[method:testFormatSingleDash()]
display-name: testFormatSingleDash()
]]></system-out>
</testcase>
<testcase name="testFormatSinglePage()" classname="org.jabref.logic.layout.format.FirstPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FirstPageTest]/[method:testFormatSinglePage()]
display-name: testFormatSinglePage()
]]></system-out>
</testcase>
<testcase name="testFormatNull()" classname="org.jabref.logic.layout.format.FirstPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FirstPageTest]/[method:testFormatNull()]
display-name: testFormatNull()
]]></system-out>
</testcase>
<testcase name="testFormatEmpty()" classname="org.jabref.logic.layout.format.FirstPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FirstPageTest]/[method:testFormatEmpty()]
display-name: testFormatEmpty()
]]></system-out>
</testcase>
<testcase name="testDefaultFormat()" classname="org.jabref.logic.layout.format.DateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DateFormatterTest]/[method:testDefaultFormat()]
display-name: testDefaultFormat()
]]></system-out>
</testcase>
<testcase name="testRequestedFormat()" classname="org.jabref.logic.layout.format.DateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DateFormatterTest]/[method:testRequestedFormat()]
display-name: testRequestedFormat()
]]></system-out>
</testcase>
<testcase name="testFileExtensionNoExtension()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testFileExtensionNoExtension()]
display-name: testFileExtensionNoExtension()
]]></system-out>
</testcase>
<testcase name="testDescriptionNoDescription()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testDescriptionNoDescription()]
display-name: testDescriptionNoDescription()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testNull()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testNull()]
display-name: testNull()
]]></system-out>
</testcase>
<testcase name="testPath()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testPath()]
display-name: testPath()
]]></system-out>
</testcase>
<testcase name="testType()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testType()]
display-name: testType()
]]></system-out>
</testcase>
<testcase name="testPathFallBackToGeneratedDir()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testPathFallBackToGeneratedDir()]
display-name: testPathFallBackToGeneratedDir()
]]></system-out>
</testcase>
<testcase name="testPlainTextString()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testPlainTextString()]
display-name: testPlainTextString()
]]></system-out>
</testcase>
<testcase name="testIteratorTwoItems()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testIteratorTwoItems()]
display-name: testIteratorTwoItems()
]]></system-out>
</testcase>
<testcase name="testEndingBracket()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testEndingBracket()]
display-name: testEndingBracket()
]]></system-out>
</testcase>
<testcase name="testFileExtension()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testFileExtension()]
display-name: testFileExtension()
]]></system-out>
</testcase>
<testcase name="testPathReturnsRelativePathIfNotFound()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testPathReturnsRelativePathIfNotFound()]
display-name: testPathReturnsRelativePathIfNotFound()
]]></system-out>
</testcase>
<testcase name="testRelativePath()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testRelativePath()]
display-name: testRelativePath()
]]></system-out>
</testcase>
<testcase name="testIterator()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testIterator()]
display-name: testIterator()
]]></system-out>
</testcase>
<testcase name="testDescription()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testDescription()]
display-name: testDescription()
]]></system-out>
</testcase>
<testcase name="testTypeNoType()" classname="org.jabref.logic.layout.format.WrapFileLinksTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapFileLinksTest]/[method:testTypeNoType()]
display-name: testTypeNoType()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorFirstLastOxfordCommasTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorFirstLastOxfordCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testTab()" classname="org.jabref.logic.layout.format.RemoveWhitespaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveWhitespaceTest]/[method:testTab()]
display-name: testTab()
]]></system-out>
</testcase>
<testcase name="testNewLineCombo()" classname="org.jabref.logic.layout.format.RemoveWhitespaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveWhitespaceTest]/[method:testNewLineCombo()]
display-name: testNewLineCombo()
]]></system-out>
</testcase>
<testcase name="testNullExpectNull()" classname="org.jabref.logic.layout.format.RemoveWhitespaceTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveWhitespaceTest]/[method:testNullExpectNull()]
display-name: testNullExpectNull()
]]></system-out>
</testcase>
<testcase name="testEmptyExpectEmpty()" classname="org.jabref.logic.layout.format.RemoveWhitespaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveWhitespaceTest]/[method:testEmptyExpectEmpty()]
display-name: testEmptyExpectEmpty()
]]></system-out>
</testcase>
<testcase name="testNormal()" classname="org.jabref.logic.layout.format.RemoveWhitespaceTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveWhitespaceTest]/[method:testNormal()]
display-name: testNormal()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorLastFirstTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorLastFirstTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorFirstLastCommasTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorFirstLastCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.RemoveBracketsAddCommaTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveBracketsAddCommaTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testSampleInput()" classname="org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest]/[method:testSampleInput()]
display-name: testSampleInput()
]]></system-out>
</testcase>
<testcase name="testPlainFormat()" classname="org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest]/[method:testPlainFormat()]
display-name: testPlainFormat()
]]></system-out>
</testcase>
<testcase name="testLigatureSequence()" classname="org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest]/[method:testLigatureSequence()]
display-name: testLigatureSequence()
]]></system-out>
</testcase>
<testcase name="testSingleLigatures()" classname="org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatterTest]/[method:testSingleLigatures()]
display-name: testSingleLigatures()
]]></system-out>
</testcase>
<testcase name="testOrgSciPlusAbbreviation()" classname="org.jabref.logic.layout.format.AuthorOrgSciTest" time="0.018">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorOrgSciTest]/[method:testOrgSciPlusAbbreviation()]
display-name: testOrgSciPlusAbbreviation()
]]></system-out>
</testcase>
<testcase name="testOrgSci()" classname="org.jabref.logic.layout.format.AuthorOrgSciTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorOrgSciTest]/[method:testOrgSci()]
display-name: testOrgSci()
]]></system-out>
</testcase>
<testcase name="testSpecialCharacters()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testSpecialCharacters()]
display-name: testSpecialCharacters()
]]></system-out>
</testcase>
<testcase name="testLaTeXHighlighting()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testLaTeXHighlighting()]
display-name: testLaTeXHighlighting()
]]></system-out>
</testcase>
<testcase name="testBasicFormat()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testBasicFormat()]
display-name: testBasicFormat()
]]></system-out>
</testcase>
<testcase name="testRTFCharacters()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testRTFCharacters()]
display-name: testRTFCharacters()
]]></system-out>
</testcase>
<testcase name="testRTFCharactersCapital()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testRTFCharactersCapital()]
display-name: testRTFCharactersCapital()
]]></system-out>
</testcase>
<testcase name="testComplicated2()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testComplicated2()]
display-name: testComplicated2()
]]></system-out>
</testcase>
<testcase name="testComplicated3()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testComplicated3()]
display-name: testComplicated3()
]]></system-out>
</testcase>
<testcase name="testComplicated4()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testComplicated4()]
display-name: testComplicated4()
]]></system-out>
</testcase>
<testcase name="testComplicated5()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testComplicated5()]
display-name: testComplicated5()
]]></system-out>
</testcase>
<testcase name="testComplicated6()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testComplicated6()]
display-name: testComplicated6()
]]></system-out>
</testcase>
<testcase name="testComplicated()" classname="org.jabref.logic.layout.format.RTFCharsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RTFCharsTest]/[method:testComplicated()]
display-name: testComplicated()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorAndsCommaReplacerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorAndsCommaReplacerTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorFirstAbbrLastCommasTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorFirstAbbrLastCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testSimpleText()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testSimpleText()]
display-name: testSimpleText()
]]></system-out>
</testcase>
<testcase name="testEmptyStart()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testEmptyStart()]
display-name: testEmptyStart()
]]></system-out>
</testcase>
<testcase name="testEscaping()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testEscaping()]
display-name: testEscaping()
]]></system-out>
</testcase>
<testcase name="testNoArgumentSetExpectNothingAdded()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testNoArgumentSetExpectNothingAdded()]
display-name: testNoArgumentSetExpectNothingAdded()
]]></system-out>
</testcase>
<testcase name="testFormatEmptyExpectNothingAdded()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testFormatEmptyExpectNothingAdded()]
display-name: testFormatEmptyExpectNothingAdded()
]]></system-out>
</testcase>
<testcase name="testFormatNullExpectNothingAdded()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testFormatNullExpectNothingAdded()]
display-name: testFormatNullExpectNothingAdded()
]]></system-out>
</testcase>
<testcase name="testEmptyEnd()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testEmptyEnd()]
display-name: testEmptyEnd()
]]></system-out>
</testcase>
<testcase name="testNoProperArgumentExpectNothingAdded()" classname="org.jabref.logic.layout.format.WrapContentTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.WrapContentTest]/[method:testNoProperArgumentExpectNothingAdded()]
display-name: testNoProperArgumentExpectNothingAdded()
]]></system-out>
</testcase>
<testcase name="testLaTeXHighlighting()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:testLaTeXHighlighting()]
display-name: testLaTeXHighlighting()
]]></system-out>
</testcase>
<testcase name="testBasicFormat()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:testBasicFormat()]
display-name: testBasicFormat()
]]></system-out>
</testcase>
<testcase name="unknownCommandKeepsArgument()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:unknownCommandKeepsArgument()]
display-name: unknownCommandKeepsArgument()
]]></system-out>
</testcase>
<testcase name="unknownCommandWithEmptyArgumentIsKept()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:unknownCommandWithEmptyArgumentIsKept()]
display-name: unknownCommandWithEmptyArgumentIsKept()
]]></system-out>
</testcase>
<testcase name="unknownCommandIsKept()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:unknownCommandIsKept()]
display-name: unknownCommandIsKept()
]]></system-out>
</testcase>
<testcase name="testQuoteSingle()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:testQuoteSingle()]
display-name: testQuoteSingle()
]]></system-out>
</testcase>
<testcase name="testNewLine()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:testNewLine()]
display-name: testNewLine()
]]></system-out>
</testcase>
<testcase name="testEquations()" classname="org.jabref.logic.layout.format.HTMLCharsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.HTMLCharsTest]/[method:testEquations()]
display-name: testEquations()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.layout.format.RisMonthTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisMonthTest]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testMonth()" classname="org.jabref.logic.layout.format.RisMonthTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisMonthTest]/[method:testMonth()]
display-name: testMonth()
]]></system-out>
</testcase>
<testcase name="testNull()" classname="org.jabref.logic.layout.format.RisMonthTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisMonthTest]/[method:testNull()]
display-name: testNull()
]]></system-out>
</testcase>
<testcase name="testInvalidMonth()" classname="org.jabref.logic.layout.format.RisMonthTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisMonthTest]/[method:testInvalidMonth()]
display-name: testInvalidMonth()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorAndsReplacerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorAndsReplacerTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorLastFirstOxfordCommasTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorLastFirstOxfordCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.DOIStripTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DOIStripTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testSpecialEtAl()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testSpecialEtAl()]
display-name: testSpecialEtAl()
]]></system-out>
</testcase>
<testcase name="testEtAl()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testEtAl()]
display-name: testEtAl()
]]></system-out>
</testcase>
<testcase name="testStandardUsageThree()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsageThree()]
display-name: testStandardUsageThree()
]]></system-out>
</testcase>
<testcase name="testEmptyEtAl()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testEmptyEtAl()]
display-name: testEmptyEtAl()
]]></system-out>
</testcase>
<testcase name="testLastName()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testLastName()]
display-name: testLastName()
]]></system-out>
</testcase>
<testcase name="testStandardUsageOne()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsageOne()]
display-name: testStandardUsageOne()
]]></system-out>
</testcase>
<testcase name="testStandardUsageSix()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsageSix()]
display-name: testStandardUsageSix()
]]></system-out>
</testcase>
<testcase name="testStandardUsageTwo()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsageTwo()]
display-name: testStandardUsageTwo()
]]></system-out>
</testcase>
<testcase name="testStandardCommaFullName()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardCommaFullName()]
display-name: testStandardCommaFullName()
]]></system-out>
</testcase>
<testcase name="testStandardUsage()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsage()]
display-name: testStandardUsage()
]]></system-out>
</testcase>
<testcase name="testEtAlNotEnoughAuthors()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testEtAlNotEnoughAuthors()]
display-name: testEtAlNotEnoughAuthors()
]]></system-out>
</testcase>
<testcase name="testMiddleInitial()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testMiddleInitial()]
display-name: testMiddleInitial()
]]></system-out>
</testcase>
<testcase name="testStandardOxford()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardOxford()]
display-name: testStandardOxford()
]]></system-out>
</testcase>
<testcase name="testNoPeriod()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testNoPeriod()]
display-name: testNoPeriod()
]]></system-out>
</testcase>
<testcase name="testStandardOxfordFullName()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardOxfordFullName()]
display-name: testStandardOxfordFullName()
]]></system-out>
</testcase>
<testcase name="testStandardAmpFullName()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardAmpFullName()]
display-name: testStandardAmpFullName()
]]></system-out>
</testcase>
<testcase name="testStandardUsageFive()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsageFive()]
display-name: testStandardUsageFive()
]]></system-out>
</testcase>
<testcase name="testStandardUsageFour()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsageFour()]
display-name: testStandardUsageFour()
]]></system-out>
</testcase>
<testcase name="testStandardUsageNull()" classname="org.jabref.logic.layout.format.AuthorsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorsTest]/[method:testStandardUsageNull()]
display-name: testStandardUsageNull()
]]></system-out>
</testcase>
<testcase name="testSimpleText()" classname="org.jabref.logic.layout.format.DefaultTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DefaultTest]/[method:testSimpleText()]
display-name: testSimpleText()
]]></system-out>
</testcase>
<testcase name="testNoArgumentSetNullInput()" classname="org.jabref.logic.layout.format.DefaultTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DefaultTest]/[method:testNoArgumentSetNullInput()]
display-name: testNoArgumentSetNullInput()
]]></system-out>
</testcase>
<testcase name="testFormatEmpty()" classname="org.jabref.logic.layout.format.DefaultTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DefaultTest]/[method:testFormatEmpty()]
display-name: testFormatEmpty()
]]></system-out>
</testcase>
<testcase name="testNoArgumentSet()" classname="org.jabref.logic.layout.format.DefaultTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DefaultTest]/[method:testNoArgumentSet()]
display-name: testNoArgumentSet()
]]></system-out>
</testcase>
<testcase name="testFormatNullExpectReplace()" classname="org.jabref.logic.layout.format.DefaultTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DefaultTest]/[method:testFormatNullExpectReplace()]
display-name: testFormatNullExpectReplace()
]]></system-out>
</testcase>
<testcase name="testNoArgumentSetEmptyInput()" classname="org.jabref.logic.layout.format.DefaultTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DefaultTest]/[method:testNoArgumentSetEmptyInput()]
display-name: testNoArgumentSetEmptyInput()
]]></system-out>
</testcase>
<testcase name="testFinalCoverageCase()" classname="org.jabref.logic.layout.format.LastPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LastPageTest]/[method:testFinalCoverageCase()]
display-name: testFinalCoverageCase()
]]></system-out>
</testcase>
<testcase name="testFormatDoubleDash()" classname="org.jabref.logic.layout.format.LastPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LastPageTest]/[method:testFormatDoubleDash()]
display-name: testFormatDoubleDash()
]]></system-out>
</testcase>
<testcase name="testFormatSingleDash()" classname="org.jabref.logic.layout.format.LastPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LastPageTest]/[method:testFormatSingleDash()]
display-name: testFormatSingleDash()
]]></system-out>
</testcase>
<testcase name="testFormatSinglePage()" classname="org.jabref.logic.layout.format.LastPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LastPageTest]/[method:testFormatSinglePage()]
display-name: testFormatSinglePage()
]]></system-out>
</testcase>
<testcase name="testFormatNull()" classname="org.jabref.logic.layout.format.LastPageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LastPageTest]/[method:testFormatNull()]
display-name: testFormatNull()
]]></system-out>
</testcase>
<testcase name="testFormatEmpty()" classname="org.jabref.logic.layout.format.LastPageTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.LastPageTest]/[method:testFormatEmpty()]
display-name: testFormatEmpty()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorLastFirstAbbrOxfordCommasTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorLastFirstAbbrOxfordCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.layout.format.ToUpperCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToUpperCaseTest]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testNull()" classname="org.jabref.logic.layout.format.ToUpperCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToUpperCaseTest]/[method:testNull()]
display-name: testNull()
]]></system-out>
</testcase>
<testcase name="testLowerCase()" classname="org.jabref.logic.layout.format.ToUpperCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToUpperCaseTest]/[method:testLowerCase()]
display-name: testLowerCase()
]]></system-out>
</testcase>
<testcase name="testUpperCase()" classname="org.jabref.logic.layout.format.ToUpperCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToUpperCaseTest]/[method:testUpperCase()]
display-name: testUpperCase()
]]></system-out>
</testcase>
<testcase name="testMixedCase()" classname="org.jabref.logic.layout.format.ToUpperCaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToUpperCaseTest]/[method:testMixedCase()]
display-name: testMixedCase()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorFirstFirstCommasTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorFirstFirstCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.layout.format.RisKeywordsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisKeywordsTest]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testNull()" classname="org.jabref.logic.layout.format.RisKeywordsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisKeywordsTest]/[method:testNull()]
display-name: testNull()
]]></system-out>
</testcase>
<testcase name="testSingleKeyword()" classname="org.jabref.logic.layout.format.RisKeywordsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisKeywordsTest]/[method:testSingleKeyword()]
display-name: testSingleKeyword()
]]></system-out>
</testcase>
<testcase name="testMultipleKeywords()" classname="org.jabref.logic.layout.format.RisKeywordsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisKeywordsTest]/[method:testMultipleKeywords()]
display-name: testMultipleKeywords()
]]></system-out>
</testcase>
<testcase name="testTwoKeywords()" classname="org.jabref.logic.layout.format.RisKeywordsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RisKeywordsTest]/[method:testTwoKeywords()]
display-name: testTwoKeywords()
]]></system-out>
</testcase>
<testcase name="testEmptyComposite()" classname="org.jabref.logic.layout.format.CompositeFormatTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.CompositeFormatTest]/[method:testEmptyComposite()]
display-name: testEmptyComposite()
]]></system-out>
</testcase>
<testcase name="testArrayComposite()" classname="org.jabref.logic.layout.format.CompositeFormatTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.CompositeFormatTest]/[method:testArrayComposite()]
display-name: testArrayComposite()
]]></system-out>
</testcase>
<testcase name="testDoubleComposite()" classname="org.jabref.logic.layout.format.CompositeFormatTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.CompositeFormatTest]/[method:testDoubleComposite()]
display-name: testDoubleComposite()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorAbbreviatorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorAbbreviatorTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.RemoveBracketsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.RemoveBracketsTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.DOICheckTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.DOICheckTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorLastFirstCommasTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorLastFirstCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormatStringStringBibtexEntry()" classname="org.jabref.logic.layout.format.NameFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.NameFormatterTest]/[method:testFormatStringStringBibtexEntry()]
display-name: testFormatStringStringBibtexEntry()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.NameFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.NameFormatterTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorFirstAbbrLastOxfordCommasTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorFirstAbbrLastOxfordCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormatThreeAuthors()" classname="org.jabref.logic.layout.format.AuthorNatBibTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorNatBibTest]/[method:testFormatThreeAuthors()]
display-name: testFormatThreeAuthors()
]]></system-out>
</testcase>
<testcase name="testFormatTwoAuthors()" classname="org.jabref.logic.layout.format.AuthorNatBibTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorNatBibTest]/[method:testFormatTwoAuthors()]
display-name: testFormatTwoAuthors()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.NoSpaceBetweenAbbreviationsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.NoSpaceBetweenAbbreviationsTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testMultiDigits()" classname="org.jabref.logic.layout.format.OrdinalTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.OrdinalTest]/[method:testMultiDigits()]
display-name: testMultiDigits()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.layout.format.OrdinalTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.OrdinalTest]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testNull()" classname="org.jabref.logic.layout.format.OrdinalTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.OrdinalTest]/[method:testNull()]
display-name: testNull()
]]></system-out>
</testcase>
<testcase name="testAlreadyOrdinals()" classname="org.jabref.logic.layout.format.OrdinalTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.OrdinalTest]/[method:testAlreadyOrdinals()]
display-name: testAlreadyOrdinals()
]]></system-out>
</testcase>
<testcase name="testLetters()" classname="org.jabref.logic.layout.format.OrdinalTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.OrdinalTest]/[method:testLetters()]
display-name: testLetters()
]]></system-out>
</testcase>
<testcase name="testFullSentence()" classname="org.jabref.logic.layout.format.OrdinalTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.OrdinalTest]/[method:testFullSentence()]
display-name: testFullSentence()
]]></system-out>
</testcase>
<testcase name="testSingleDigit()" classname="org.jabref.logic.layout.format.OrdinalTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.OrdinalTest]/[method:testSingleDigit()]
display-name: testSingleDigit()
]]></system-out>
</testcase>
<testcase name="testOnlyFilename()" classname="org.jabref.logic.layout.format.FileLinkTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FileLinkTest]/[method:testOnlyFilename()]
display-name: testOnlyFilename()
]]></system-out>
</testcase>
<testcase name="testMultipleFilesPick()" classname="org.jabref.logic.layout.format.FileLinkTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FileLinkTest]/[method:testMultipleFilesPick()]
display-name: testMultipleFilesPick()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.layout.format.FileLinkTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FileLinkTest]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testNull()" classname="org.jabref.logic.layout.format.FileLinkTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FileLinkTest]/[method:testNull()]
display-name: testNull()
]]></system-out>
</testcase>
<testcase name="testCompleteRecord()" classname="org.jabref.logic.layout.format.FileLinkTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FileLinkTest]/[method:testCompleteRecord()]
display-name: testCompleteRecord()
]]></system-out>
</testcase>
<testcase name="testMultipleFiles()" classname="org.jabref.logic.layout.format.FileLinkTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FileLinkTest]/[method:testMultipleFiles()]
display-name: testMultipleFiles()
]]></system-out>
</testcase>
<testcase name="testMultipleFilesPickNonExistant()" classname="org.jabref.logic.layout.format.FileLinkTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.FileLinkTest]/[method:testMultipleFilesPickNonExistant()]
display-name: testMultipleFilesPickNonExistant()
]]></system-out>
</testcase>
<testcase name="testCorrectFormatInBook()" classname="org.jabref.logic.layout.format.EntryTypeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.EntryTypeFormatterTest]/[method:testCorrectFormatInBook()]
display-name: testCorrectFormatInBook()
]]></system-out>
</testcase>
<testcase name="testIncorrectTypeAarticle()" classname="org.jabref.logic.layout.format.EntryTypeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.EntryTypeFormatterTest]/[method:testIncorrectTypeAarticle()]
display-name: testIncorrectTypeAarticle()
]]></system-out>
</testcase>
<testcase name="testCorrectFormatArticle()" classname="org.jabref.logic.layout.format.EntryTypeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.EntryTypeFormatterTest]/[method:testCorrectFormatArticle()]
display-name: testCorrectFormatArticle()
]]></system-out>
</testcase>
<testcase name="testEmpty()" classname="org.jabref.logic.layout.format.ToLowerCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToLowerCaseTest]/[method:testEmpty()]
display-name: testEmpty()
]]></system-out>
</testcase>
<testcase name="testNull()" classname="org.jabref.logic.layout.format.ToLowerCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToLowerCaseTest]/[method:testNull()]
display-name: testNull()
]]></system-out>
</testcase>
<testcase name="testLowerCase()" classname="org.jabref.logic.layout.format.ToLowerCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToLowerCaseTest]/[method:testLowerCase()]
display-name: testLowerCase()
]]></system-out>
</testcase>
<testcase name="testUpperCase()" classname="org.jabref.logic.layout.format.ToLowerCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToLowerCaseTest]/[method:testUpperCase()]
display-name: testUpperCase()
]]></system-out>
</testcase>
<testcase name="testMixedCase()" classname="org.jabref.logic.layout.format.ToLowerCaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.ToLowerCaseTest]/[method:testMixedCase()]
display-name: testMixedCase()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorLF_FFAbbrTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorLF_FFAbbrTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorLF_FFTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorLF_FFTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormatNull()" classname="org.jabref.logic.layout.format.IfPluralTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.IfPluralTest]/[method:testFormatNull()]
display-name: testFormatNull()
]]></system-out>
</testcase>
<testcase name="testNoProperArgument()" classname="org.jabref.logic.layout.format.IfPluralTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.IfPluralTest]/[method:testNoProperArgument()]
display-name: testNoProperArgument()
]]></system-out>
</testcase>
<testcase name="testStandardUsageTwoEditors()" classname="org.jabref.logic.layout.format.IfPluralTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.IfPluralTest]/[method:testStandardUsageTwoEditors()]
display-name: testStandardUsageTwoEditors()
]]></system-out>
</testcase>
<testcase name="testFormatEmpty()" classname="org.jabref.logic.layout.format.IfPluralTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.IfPluralTest]/[method:testFormatEmpty()]
display-name: testFormatEmpty()
]]></system-out>
</testcase>
<testcase name="testNoArgumentSet()" classname="org.jabref.logic.layout.format.IfPluralTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.IfPluralTest]/[method:testNoArgumentSet()]
display-name: testNoArgumentSet()
]]></system-out>
</testcase>
<testcase name="testStandardUsageOneEditor()" classname="org.jabref.logic.layout.format.IfPluralTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.IfPluralTest]/[method:testStandardUsageOneEditor()]
display-name: testStandardUsageOneEditor()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorFirstFirstTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorFirstFirstTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="testFormat()" classname="org.jabref.logic.layout.format.AuthorLastFirstAbbrCommasTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.layout.format.AuthorLastFirstAbbrCommasTest]/[method:testFormat()]
display-name: testFormat()
]]></system-out>
</testcase>
<testcase name="referToValidPage()" classname="org.jabref.logic.help.HelpFileTest" time="19.65">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.help.HelpFileTest]/[method:referToValidPage()]
display-name: referToValidPage()
]]></system-out>
</testcase>
<testcase name="serializeSingleContentSelectors()" classname="org.jabref.logic.exporter.MetaDataSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.MetaDataSerializerTest]/[method:serializeSingleContentSelectors()]
display-name: serializeSingleContentSelectors()
]]></system-out>
</testcase>
<testcase name="serializeSingleSaveAction()" classname="org.jabref.logic.exporter.MetaDataSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.MetaDataSerializerTest]/[method:serializeSingleSaveAction()]
display-name: serializeSingleSaveAction()
]]></system-out>
</testcase>
<testcase name="serializeNewMetadataReturnsEmptyMap()" classname="org.jabref.logic.exporter.MetaDataSerializerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.MetaDataSerializerTest]/[method:serializeNewMetadataReturnsEmptyMap()]
display-name: serializeNewMetadataReturnsEmptyMap()
]]></system-out>
</testcase>
<testcase name="checkSimpleUseCase()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0.031">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:checkSimpleUseCase()]
display-name: checkSimpleUseCase()
]]></system-out>
</testcase>
<testcase name="checkThreeSaveActionsForOneField()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:checkThreeSaveActionsForOneField()]
display-name: checkThreeSaveActionsForOneField()
]]></system-out>
</testcase>
<testcase name="invalidSaveActionSting()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:invalidSaveActionSting()]
display-name: invalidSaveActionSting()
]]></system-out>
</testcase>
<testcase name="checkMultipleSaveActions()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:checkMultipleSaveActions()]
display-name: checkMultipleSaveActions()
]]></system-out>
</testcase>
<testcase name="clearFormatterRemovesField()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:clearFormatterRemovesField()]
display-name: clearFormatterRemovesField()
]]></system-out>
</testcase>
<testcase name="checkMultipleSaveActionsWithMultipleFormatters()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:checkMultipleSaveActionsWithMultipleFormatters()]
display-name: checkMultipleSaveActionsWithMultipleFormatters()
]]></system-out>
</testcase>
<testcase name="checkTwoSaveActionsForOneField()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:checkTwoSaveActionsForOneField()]
display-name: checkTwoSaveActionsForOneField()
]]></system-out>
</testcase>
<testcase name="checkLowerCaseSaveAction()" classname="org.jabref.logic.exporter.FieldFormatterCleanupsTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.FieldFormatterCleanupsTest]/[method:checkLowerCaseSaveAction()]
display-name: checkLowerCaseSaveAction()
]]></system-out>
</testcase>
<testcase name="serializeSingleTexGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleTexGroup()]
display-name: serializeSingleTexGroup()
]]></system-out>
</testcase>
<testcase name="serializeSingleExplicitGroupWithEscapedSlash()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleExplicitGroupWithEscapedSlash()]
display-name: serializeSingleExplicitGroupWithEscapedSlash()
]]></system-out>
</testcase>
<testcase name="serializeSingleSearchGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleSearchGroup()]
display-name: serializeSingleSearchGroup()
]]></system-out>
</testcase>
<testcase name="getTreeAsStringInSimpleTree()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:getTreeAsStringInSimpleTree()]
display-name: getTreeAsStringInSimpleTree()
]]></system-out>
</testcase>
<testcase name="serializeSingleSearchGroupWithRegex()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleSearchGroupWithRegex()]
display-name: serializeSingleSearchGroupWithRegex()
]]></system-out>
</testcase>
<testcase name="serializeSingleSimpleKeywordGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleSimpleKeywordGroup()]
display-name: serializeSingleSimpleKeywordGroup()
]]></system-out>
</testcase>
<testcase name="serializeSingleAutomaticPersonGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleAutomaticPersonGroup()]
display-name: serializeSingleAutomaticPersonGroup()
]]></system-out>
</testcase>
<testcase name="serializeSingleAllEntriesGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleAllEntriesGroup()]
display-name: serializeSingleAllEntriesGroup()
]]></system-out>
</testcase>
<testcase name="serializeSingleRegexKeywordGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleRegexKeywordGroup()]
display-name: serializeSingleRegexKeywordGroup()
]]></system-out>
</testcase>
<testcase name="getTreeAsStringInComplexTree()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:getTreeAsStringInComplexTree()]
display-name: getTreeAsStringInComplexTree()
]]></system-out>
</testcase>
<testcase name="serializeSingleExplicitGroupWithIconAndDescription()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleExplicitGroupWithIconAndDescription()]
display-name: serializeSingleExplicitGroupWithIconAndDescription()
]]></system-out>
</testcase>
<testcase name="serializeSingleExplicitGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleExplicitGroup()]
display-name: serializeSingleExplicitGroup()
]]></system-out>
</testcase>
<testcase name="serializeSingleAutomaticKeywordGroup()" classname="org.jabref.logic.exporter.GroupSerializerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.GroupSerializerTest]/[method:serializeSingleAutomaticKeywordGroup()]
display-name: serializeSingleAutomaticKeywordGroup()
]]></system-out>
</testcase>
<testcase name="roundtripWithUnknownMetaData()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.018">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:roundtripWithUnknownMetaData()]
display-name: roundtripWithUnknownMetaData()
]]></system-out>
</testcase>
<testcase name="writeStringAndEncoding()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeStringAndEncoding()]
display-name: writeStringAndEncoding()
]]></system-out>
</testcase>
<testcase name="writeEntriesSorted()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEntriesSorted()]
display-name: writeEntriesSorted()
]]></system-out>
</testcase>
<testcase name="writeMetadataAndEncoding()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.039">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeMetadataAndEncoding()]
display-name: writeMetadataAndEncoding()
]]></system-out>
</testcase>
<testcase name="writeSavedSerializationOfStringIfUnchanged()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeSavedSerializationOfStringIfUnchanged()]
display-name: writeSavedSerializationOfStringIfUnchanged()
]]></system-out>
</testcase>
<testcase name="writeEntriesInOriginalOrderWhenNoSaveOrderConfigIsSetInMetadata()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEntriesInOriginalOrderWhenNoSaveOrderConfigIsSetInMetadata()]
display-name: writeEntriesInOriginalOrderWhenNoSaveOrderConfigIsSetInMetadata()
]]></system-out>
</testcase>
<testcase name="roundtripWithUserCommentAndEntryChange()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.141">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:roundtripWithUserCommentAndEntryChange()]
display-name: roundtripWithUserCommentAndEntryChange()
]]></system-out>
</testcase>
<testcase name="reformatStringIfAskedToDoSo()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:reformatStringIfAskedToDoSo()]
display-name: reformatStringIfAskedToDoSo()
]]></system-out>
</testcase>
<testcase name="writeEntryWithCustomizedTypeAlsoWritesTypeDeclaration()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEntryWithCustomizedTypeAlsoWritesTypeDeclaration()]
display-name: writeEntryWithCustomizedTypeAlsoWritesTypeDeclaration()
]]></system-out>
</testcase>
<testcase name="writeSaveOrderConfig()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeSaveOrderConfig()]
display-name: writeSaveOrderConfig()
]]></system-out>
</testcase>
<testcase name="writeGroupsAndEncoding()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeGroupsAndEncoding()]
display-name: writeGroupsAndEncoding()
]]></system-out>
</testcase>
<testcase name="writeEntry()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEntry()]
display-name: writeEntry()
]]></system-out>
</testcase>
<testcase name="writeSaveActions()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeSaveActions()]
display-name: writeSaveActions()
]]></system-out>
</testcase>
<testcase name="writeEncodingAndEntry()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEncodingAndEntry()]
display-name: writeEncodingAndEntry()
]]></system-out>
</testcase>
<testcase name="writeEncoding()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEncoding()]
display-name: writeEncoding()
]]></system-out>
</testcase>
<testcase name="roundtripWithContentSelectorsAndUmlauts()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:roundtripWithContentSelectorsAndUmlauts()]
display-name: roundtripWithContentSelectorsAndUmlauts()
]]></system-out>
</testcase>
<testcase name="writeCustomKeyPattern()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeCustomKeyPattern()]
display-name: writeCustomKeyPattern()
]]></system-out>
</testcase>
<testcase name="roundtrip()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.036">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:roundtrip()]
display-name: roundtrip()
]]></system-out>
</testcase>
<testcase name="roundtripWithUserCommentBeforeStringAndChange()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.043">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:roundtripWithUserCommentBeforeStringAndChange()]
display-name: roundtripWithUserCommentBeforeStringAndChange()
]]></system-out>
</testcase>
<testcase name="writePreambleAndEncoding()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writePreambleAndEncoding()]
display-name: writePreambleAndEncoding()
]]></system-out>
</testcase>
<testcase name="writeEpilogueAndEncoding()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEpilogueAndEncoding()]
display-name: writeEpilogueAndEncoding()
]]></system-out>
</testcase>
<testcase name="writeWithNullPreferencesThrowsException()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeWithNullPreferencesThrowsException()]
display-name: writeWithNullPreferencesThrowsException()
]]></system-out>
</testcase>
<testcase name="roundtripWithUserComment()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:roundtripWithUserComment()]
display-name: roundtripWithUserComment()
]]></system-out>
</testcase>
<testcase name="writeProtectedFlag()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeProtectedFlag()]
display-name: writeProtectedFlag()
]]></system-out>
</testcase>
<testcase name="reformatEntryIfAskedToDoSo()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.015">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:reformatEntryIfAskedToDoSo()]
display-name: reformatEntryIfAskedToDoSo()
]]></system-out>
</testcase>
<testcase name="writeGroups()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeGroups()]
display-name: writeGroups()
]]></system-out>
</testcase>
<testcase name="writePreamble()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writePreamble()]
display-name: writePreamble()
]]></system-out>
</testcase>
<testcase name="writeWithNullContextThrowsException()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeWithNullContextThrowsException()]
display-name: writeWithNullContextThrowsException()
]]></system-out>
</testcase>
<testcase name="writeFileDirectories()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeFileDirectories()]
display-name: writeFileDirectories()
]]></system-out>
</testcase>
<testcase name="writeWithNullEntriesThrowsException()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeWithNullEntriesThrowsException()]
display-name: writeWithNullEntriesThrowsException()
]]></system-out>
</testcase>
<testcase name="writeString()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeString()]
display-name: writeString()
]]></system-out>
</testcase>
<testcase name="writeBiblatexMode()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeBiblatexMode()]
display-name: writeBiblatexMode()
]]></system-out>
</testcase>
<testcase name="writeEpilogue()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeEpilogue()]
display-name: writeEpilogue()
]]></system-out>
</testcase>
<testcase name="writeSavedSerializationOfEntryIfUnchanged()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeSavedSerializationOfEntryIfUnchanged()]
display-name: writeSavedSerializationOfEntryIfUnchanged()
]]></system-out>
</testcase>
<testcase name="writeMetadata()" classname="org.jabref.logic.exporter.BibtexDatabaseWriterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.exporter.BibtexDatabaseWriterTest]/[method:writeMetadata()]
display-name: writeMetadata()
]]></system-out>
</testcase>
<testcase name="testDetermineMimeType()" classname="org.jabref.logic.net.URLDownloadTest" time="1.189">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:testDetermineMimeType()]
display-name: testDetermineMimeType()
]]></system-out>
</testcase>
<testcase name="downloadToTemporaryFileKeepsName()" classname="org.jabref.logic.net.URLDownloadTest" time="1.422">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:downloadToTemporaryFileKeepsName()]
display-name: downloadToTemporaryFileKeepsName()
]]></system-out>
</testcase>
<testcase name="testStringDownload()" classname="org.jabref.logic.net.URLDownloadTest" time="0.663">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:testStringDownload()]
display-name: testStringDownload()
]]></system-out>
</testcase>
<testcase name="downloadOfFTPSucceeds()" classname="org.jabref.logic.net.URLDownloadTest" time="5.958">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:downloadOfFTPSucceeds()]
display-name: downloadOfFTPSucceeds()
]]></system-out>
</testcase>
<testcase name="downloadOfHttpSucceeds()" classname="org.jabref.logic.net.URLDownloadTest" time="0.713">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:downloadOfHttpSucceeds()]
display-name: downloadOfHttpSucceeds()
]]></system-out>
</testcase>
<testcase name="downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()" classname="org.jabref.logic.net.URLDownloadTest" time="0.615">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()]
display-name: downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()
]]></system-out>
</testcase>
<testcase name="downloadOfHttpsSucceeds()" classname="org.jabref.logic.net.URLDownloadTest" time="0.906">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:downloadOfHttpsSucceeds()]
display-name: downloadOfHttpsSucceeds()
]]></system-out>
</testcase>
<testcase name="testStringDownloadWithSetEncoding()" classname="org.jabref.logic.net.URLDownloadTest" time="0.611">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:testStringDownloadWithSetEncoding()]
display-name: testStringDownloadWithSetEncoding()
]]></system-out>
</testcase>
<testcase name="testFileDownload()" classname="org.jabref.logic.net.URLDownloadTest" time="0.532">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLDownloadTest]/[method:testFileDownload()]
display-name: testFileDownload()
]]></system-out>
</testcase>
<testcase name="cleanGoogleSearchURL()" classname="org.jabref.logic.net.URLUtilTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLUtilTest]/[method:cleanGoogleSearchURL()]
display-name: cleanGoogleSearchURL()
]]></system-out>
</testcase>
<testcase name="isURLshouldAcceptValidURL()" classname="org.jabref.logic.net.URLUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLUtilTest]/[method:isURLshouldAcceptValidURL()]
display-name: isURLshouldAcceptValidURL()
]]></system-out>
</testcase>
<testcase name="isURLshouldRejectInvalidURL()" classname="org.jabref.logic.net.URLUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.net.URLUtilTest]/[method:isURLshouldRejectInvalidURL()]
display-name: isURLshouldRejectInvalidURL()
]]></system-out>
</testcase>
<testcase name="testIgnoreCarriageReturnNewLine()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="10.614">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testIgnoreCarriageReturnNewLine()]
display-name: testIgnoreCarriageReturnNewLine()
]]></system-out>
</testcase>
<testcase name="testXslFoFormat()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="0.691">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testXslFoFormat()]
display-name: testXslFoFormat()
]]></system-out>
</testcase>
<testcase name="testRtfFormat()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="0.185">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testRtfFormat()]
display-name: testRtfFormat()
]]></system-out>
</testcase>
<testcase name="testAsciiDocFormat()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="0.175">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testAsciiDocFormat()]
display-name: testAsciiDocFormat()
]]></system-out>
</testcase>
<testcase name="testIgnoreNewLine()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="0.098">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testIgnoreNewLine()]
display-name: testIgnoreNewLine()
]]></system-out>
</testcase>
<testcase name="testTextFormat()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="0.163">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testTextFormat()]
display-name: testTextFormat()
]]></system-out>
</testcase>
<testcase name="testMissingCitationStyle()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testMissingCitationStyle()]
display-name: testMissingCitationStyle()
]]></system-out>
</testcase>
<testcase name="testHtmlFormat()" classname="org.jabref.logic.citationstyle.CitationStyleGeneratorTest" time="0.127">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleGeneratorTest]/[method:testHtmlFormat()]
display-name: testHtmlFormat()
]]></system-out>
</testcase>
<testcase name="getDefault()" classname="org.jabref.logic.citationstyle.CitationStyleTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleTest]/[method:getDefault()]
display-name: getDefault()
]]></system-out>
</testcase>
<testcase name="testDefaultCitation()" classname="org.jabref.logic.citationstyle.CitationStyleTest" time="0.14">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.citationstyle.CitationStyleTest]/[method:testDefaultCitation()]
display-name: testDefaultCitation()
]]></system-out>
</testcase>
<testcase name="testTestDatabase()" classname="org.jabref.logic.importer.DatabaseFileLookupTest" time="0.042">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.DatabaseFileLookupTest]/[method:testTestDatabase()]
display-name: testTestDatabase()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.PdfContentImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfContentImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.PdfContentImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfContentImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="doesNotHandleEncryptedPdfs()" classname="org.jabref.logic.importer.fileformat.PdfContentImporterTest" time="0.023">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfContentImporterTest]/[method:doesNotHandleEncryptedPdfs()]
display-name: doesNotHandleEncryptedPdfs()
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testImportEmpty()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testImportEmpty()]
display-name: testImportEmpty()
]]></system-out>
</testcase>
<testcase name="testImportEntries1()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testImportEntries1()]
display-name: testImportEntries1()
]]></system-out>
</testcase>
<testcase name="testImportEntries2()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testImportEntries2()]
display-name: testImportEntries2()
]]></system-out>
</testcase>
<testcase name="testImportSingleEntries()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.029">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testImportSingleEntries()]
display-name: testImportSingleEntries()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[1]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] OvidImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[2]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] OvidImporterTest7.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[3]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] OvidImporterTest6.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[4]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] OvidImporterTest5.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[5]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] OvidImporterTest4.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[6]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] OvidImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[1]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] AutosavedSharedDatabase.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[2]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RisImporterTest5b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[3]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] BibTeXMLImporterTestTechReport.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[4]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] CopacImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[5]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] Endnote.pattern.no_enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[6]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] BibTeXMLImporterTestConference.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[7]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#7]
display-name: [7] MsBibImporterTest4.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[8]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#8]
display-name: [8] NbibImporterTest.nbib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[9]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#9]
display-name: [9] BiblioscapeImporterTestJournalArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[10]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#10]
display-name: [10] MODSImporterTestMinimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[11]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#11]
display-name: [11] MedlinePlainImporterTestMultiAbstract.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[12]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#12]
display-name: [12] BibTeXMLImporterTestMasterThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[13]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#13]
display-name: [13] MsBibImporterMsBibFieldsTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[14]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#14]
display-name: [14] BibtexImporter.examples.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[15]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#15]
display-name: [15] RisImporterTest7.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[16]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#16]
display-name: [16] BiblioscapeImporterTestUnknownFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[17]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#17]
display-name: [17] MsBibImporterTest3.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[18]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#18]
display-name: [18] MedlinePlainImporterTestInvalidFormat.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[19]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#19]
display-name: [19] MedlineImporterTestKeywordSingleEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[20]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#20]
display-name: [20] Endnote.pattern.A.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[21]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#21]
display-name: [21] MedlineImporterTestPubmedBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[22]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#22]
display-name: [22] BibTeXMLImporterTestInProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[23]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#23]
display-name: [23] BibTeXMLImporterTestManual.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[24]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#24]
display-name: [24] encrypted.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[25]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#25]
display-name: [25] BibTeXMLImporterTestInBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[26]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#26]
display-name: [26] MedlineImporterTestArticleNoISSN.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[27]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#27]
display-name: [27] BibTeXMLImporterTestTechReport.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[28]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#28]
display-name: [28] BibTeXMLImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[29]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#29]
display-name: [29] MsBibImporterTitleTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[30]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#30]
display-name: [30] MsBibImporterTest6.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[31]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#31]
display-name: [31] BiblioscapeImporterTestKeywords.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[32]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#32]
display-name: [32] MsBibImporterInvalidMonth.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[33]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#33]
display-name: [33] MsBibExportFormatUmlauts.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[34]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#34]
display-name: [34] MODSImporterTestAllFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[35]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#35]
display-name: [35] SilverPlatterImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[36]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#36]
display-name: [36] MODSImporterTestModsCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[37]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#37]
display-name: [37] MsBibImporterMsBibFieldsTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[38]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#38]
display-name: [38] MedlinePlainImporterTestCompleteEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[39]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#39]
display-name: [39] BibTeXMLImporterTestProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[40]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#40]
display-name: [40] BiblioscapeImporterTestComments.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[41]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#41]
display-name: [41] BibTeXMLImporterTestUnpublished.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[42]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#42]
display-name: [42] MsBibImporterTestTranslator.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[43]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#43]
display-name: [43] BibTeXMLImporterTestManual.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[44]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#44]
display-name: [44] MsBibImporterTest7.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[45]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#45]
display-name: [45] RisImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[46]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#46]
display-name: [46] EndnoteXmlImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[47]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.017">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#47]
display-name: [47] annotated.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[48]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#48]
display-name: [48] RisImporterTestScopus.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[49]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#49]
display-name: [49] BibTeXMLImporterTestIncollectionWithoutChapter.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[50]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#50]
display-name: [50] MedlineImporterTestMinimalEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[51]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#51]
display-name: [51] RepecNepImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[52]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#52]
display-name: [52] IsiImporterTest2.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[53]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#53]
display-name: [53] RisImporterTestScopus.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[54]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#54]
display-name: [54] RepecNepImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[55]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#55]
display-name: [55] RisImporterCorrupted.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[56]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#56]
display-name: [56] MsBibImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[57]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#57]
display-name: [57] MsBibLocationTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[58]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#58]
display-name: [58] MsBibImporterInvalidMonth.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[59]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#59]
display-name: [59] MsBibImporterTest5.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[60]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#60]
display-name: [60] MsBibLCID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[61]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#61]
display-name: [61] EndnoteXmlImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[62]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#62]
display-name: [62] RisImporterTestDoiAndJournalTitle.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[63]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#63]
display-name: [63] Endnote.pattern.E.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[64]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#64]
display-name: [64] MedlineImporterTestMinimalEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[65]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#65]
display-name: [65] MsBibImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[66]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#66]
display-name: [66] BiblioscapeImporterTestCorrupt.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[67]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#67]
display-name: [67] MedlinePlainImporterTestMultiTitle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[68]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#68]
display-name: [68] InspecImportTestFalse.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[69]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#69]
display-name: [69] SilverPlatterImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[70]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#70]
display-name: [70] BibTeXMLImporterTestConference.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[71]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#71]
display-name: [71] LNCS-minimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[72]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#72]
display-name: [72] MsBibImporterTest4.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[73]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#73]
display-name: [73] BiblioscapeImporterTestArticleST.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[74]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#74]
display-name: [74] RisImporterTest6.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[75]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#75]
display-name: [75] IsiImporterTestWOS.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[76]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#76]
display-name: [76] MODSImporterTestMinimal.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[77]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#77]
display-name: [77] BiblioscapeImporterTestUnknownFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[78]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#78]
display-name: [78] RepecNepImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[79]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#79]
display-name: [79] BibTeXMLImporterTestMisc.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[80]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#80]
display-name: [80] MedlinePlainImporterStringOutOfBounds.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[81]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#81]
display-name: [81] RisImporterTest4b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[82]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#82]
display-name: [82] emptyFile.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[83]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#83]
display-name: [83] IEEEImport1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[84]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#84]
display-name: [84] BibTeXMLImporterTestEmpty.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[85]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#85]
display-name: [85] EndnoteXmlImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[86]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#86]
display-name: [86] BibTeXMLImporterTestArticleWithoutID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[87]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#87]
display-name: [87] BibTeXMLImporterTestInProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[88]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#88]
display-name: [88] BiblioscapeImporterTestInbook.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[89]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#89]
display-name: [89] MedlinePlainImporterStringOutOfBounds.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[90]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#90]
display-name: [90] MsBibMultiLocationAddressTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[91]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#91]
display-name: [91] IsiImporterTest1.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[92]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#92]
display-name: [92] MedlinePlainImporterTestDOI.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[93]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#93]
display-name: [93] MedlinePlainImporterTestCompleteEntry.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[94]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#94]
display-name: [94] MsBibImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[95]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#95]
display-name: [95] RisImporterTest3.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[96]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#96]
display-name: [96] MODSImporterTestModsCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[97]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#97]
display-name: [97] EndnoteXmlImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[98]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#98]
display-name: [98] BibTeXMLImporterTestMisc.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[99]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#99]
display-name: [99] RepecNepImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[100]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#100]
display-name: [100] BiblioscapeImporterTestOptionalFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[101]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#101]
display-name: [101] RisImporterTestDoiAndJournalTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[102]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#102]
display-name: [102] MsBibShorttitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[103]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#103]
display-name: [103] BibTeXMLImporterTestInvalidInbook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[104]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#104]
display-name: [104] BiblioscapeImporterTestKeywords.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[105]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#105]
display-name: [105] RisImporterTest1.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[106]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#106]
display-name: [106] BiblioscapeImporterTestComments.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[107]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#107]
display-name: [107] RisImporterTest5a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[108]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#108]
display-name: [108] InspecImportTest.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[109]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#109]
display-name: [109] BibTeXMLImporterTestBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[110]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#110]
display-name: [110] MsBibPatent.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[111]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#111]
display-name: [111] MedlinePlainImporterTestMultipleEntries.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[112]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#112]
display-name: [112] MODSImporterTestMods.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[113]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#113]
display-name: [113] SilverPlatterImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[114]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#114]
display-name: [114] BibTeXMLImporterTestBooklet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[115]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#115]
display-name: [115] RisImporterTest4a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[116]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#116]
display-name: [116] RisImporterTest4b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[117]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#117]
display-name: [117] BiblioscapeImporterTestUnknownType.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[118]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#118]
display-name: [118] MedlineImporterTestMalformedEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[119]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#119]
display-name: [119] Endnote.book.example.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[120]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#120]
display-name: [120] MedlineImporterTestKeywordSingleEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[121]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#121]
display-name: [121] BibTeXMLImporterTestInCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[122]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#122]
display-name: [122] BiblioscapeImporterTestInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[123]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#123]
display-name: [123] MedlineImporterTestArticleID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[124]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#124]
display-name: [124] CopacImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[125]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#125]
display-name: [125] RisImporterTest5b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[126]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#126]
display-name: [126] CopacImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[127]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#127]
display-name: [127] MsBibPatent.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[128]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#128]
display-name: [128] BiblioscapeImporterTestUnknownType.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[129]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#129]
display-name: [129] IsiImporterTestMedline.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[130]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#130]
display-name: [130] MODSImporterTestAllFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[131]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#131]
display-name: [131] MsBibLocationTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[132]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#132]
display-name: [132] CopacImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[133]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#133]
display-name: [133] BiblioscapeImporterTestOptionalFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[134]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#134]
display-name: [134] MedlinePlainImporterTestDOI.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[135]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#135]
display-name: [135] InspecImportTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[136]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#136]
display-name: [136] RisImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[137]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#137]
display-name: [137] BibTeXMLImporterTestEmpty.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[138]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#138]
display-name: [138] LNCS-minimal-protected.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[139]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#139]
display-name: [139] MedlinePlainImporterTestInproceeding.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[140]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#140]
display-name: [140] BiblioscapeImporterTestJournalArticle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[141]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#141]
display-name: [141] MedlineImporterTestArticleID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[142]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#142]
display-name: [142] BibTeXMLImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[143]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#143]
display-name: [143] BibTeXMLImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[144]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#144]
display-name: [144] MsBibImporterTestTranslator.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[145]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#145]
display-name: [145] MsBibShorttitle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[146]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#146]
display-name: [146] BibTeXMLImporterTestUnpublished.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[147]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#147]
display-name: [147] MODSImporterTestMods.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[148]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#148]
display-name: [148] BibTeXMLImporterTestInvalidInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[149]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#149]
display-name: [149] BibTeXMLImporterTestBooklet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[150]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#150]
display-name: [150] MsBibImporterTest5.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[151]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#151]
display-name: [151] SilverPlatterImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[152]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#152]
display-name: [152] LNCS-minimal.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[153]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#153]
display-name: [153] Empty.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[154]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#154]
display-name: [154] MedlineImporterTestPubmedBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[155]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#155]
display-name: [155] MsBibExportFormatUmlauts.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[156]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#156]
display-name: [156] MedlinePlainImporterTestInproceeding.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[157]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#157]
display-name: [157] IsiImporterTestEmpty.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[158]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#158]
display-name: [158] BiblioscapeImporterTestArticleST.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[159]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#159]
display-name: [159] MedlinePlainImporterTestMultiTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[160]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#160]
display-name: [160] RisImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[161]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#161]
display-name: [161] Endnote.entries.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[162]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#162]
display-name: [162] RisImporterTestScience.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[163]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#163]
display-name: [163] empty.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[164]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#164]
display-name: [164] MedlineImporterTestNbib.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[165]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#165]
display-name: [165] BibTeXMLImporterTestPhdThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[166]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#166]
display-name: [166] MsBibMultiLocationAddressTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[167]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#167]
display-name: [167] LNCS-minimal-protected.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[168]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#168]
display-name: [168] MedlineImporterTestBookArticleSet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[169]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#169]
display-name: [169] RisImporterTest4a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[170]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#170]
display-name: [170] BibTeXMLImporterTestMasterThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[171]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#171]
display-name: [171] RisImporterTest4c.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[172]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#172]
display-name: [172] MedlineImporterTestBookArticleSet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[173]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#173]
display-name: [173] EmptyMsBib_Test.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[174]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#174]
display-name: [174] RepecNepImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[175]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#175]
display-name: [175] BibTeXMLImporterTestBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[176]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#176]
display-name: [176] RisImporterTest5a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[177]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#177]
display-name: [177] MedlineImporterTestNbib.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[178]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#178]
display-name: [178] BibTeXMLImporterTestInbookLessFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[179]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#179]
display-name: [179] BibTeXMLImporterTestInBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[180]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#180]
display-name: [180] NbibImporterTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[181]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#181]
display-name: [181] BibTeXMLImporterTestInCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[182]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#182]
display-name: [182] BibTeXMLImporterTestArticleWithoutID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[183]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#183]
display-name: [183] RisImporterTest4c.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[184]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#184]
display-name: [184] MsBibImporterTitleTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[185]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#185]
display-name: [185] MedlineImporterTestArticleNoISSN.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[186]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#186]
display-name: [186] IsiImporterTestInspec.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[187]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#187]
display-name: [187] BibTeXMLImporterTestPhdThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[188]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#188]
display-name: [188] MedlinePlainImporterTestMultiAbstract.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[189]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#189]
display-name: [189] BibTeXMLImporterTestInbookLessFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[190]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#190]
display-name: [190] RisImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[191]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#191]
display-name: [191] MsBibLCID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[192]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#192]
display-name: [192] RepecNepImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[193]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#193]
display-name: [193] BibTeXMLImporterTestProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[194]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#194]
display-name: [194] BibTeXMLImporterTestIncollectionWithoutChapter.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[195]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#195]
display-name: [195] RisImporterTestScience.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[196]" classname="org.jabref.logic.importer.fileformat.OvidImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.OvidImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#196]
display-name: [196] BibTeXMLImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testImportEntries()" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.036">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[method:testImportEntries()]
display-name: testImportEntries()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat()" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.022">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[method:testIsRecognizedFormat()]
display-name: testIsRecognizedFormat()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="importEncryptedFileReturnsError()" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[method:importEncryptedFileReturnsError()]
display-name: importEncryptedFileReturnsError()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testGetCommandLineId()" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[method:testGetCommandLineId()]
display-name: testGetCommandLineId()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[1]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] AutosavedSharedDatabase.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[2]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RisImporterTest5b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[3]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] BibTeXMLImporterTestTechReport.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[4]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] OvidImporterTestBib6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[5]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] CopacImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[6]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] Endnote.pattern.no_enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[7]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#7]
display-name: [7] BibTeXMLImporterTestConference.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[8]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#8]
display-name: [8] MsBibImporterTest4.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[9]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#9]
display-name: [9] NbibImporterTest.nbib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[10]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#10]
display-name: [10] OvidImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[11]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#11]
display-name: [11] BiblioscapeImporterTestJournalArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[12]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#12]
display-name: [12] MODSImporterTestMinimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[13]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#13]
display-name: [13] MedlinePlainImporterTestMultiAbstract.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[14]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#14]
display-name: [14] BibTeXMLImporterTestMasterThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[15]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#15]
display-name: [15] MsBibImporterMsBibFieldsTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[16]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#16]
display-name: [16] BibtexImporter.examples.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[17]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#17]
display-name: [17] RisImporterTest7.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[18]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#18]
display-name: [18] BiblioscapeImporterTestUnknownFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[19]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#19]
display-name: [19] MsBibImporterTest3.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[20]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#20]
display-name: [20] MedlinePlainImporterTestInvalidFormat.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[21]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#21]
display-name: [21] MedlineImporterTestKeywordSingleEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[22]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#22]
display-name: [22] Endnote.pattern.A.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[23]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#23]
display-name: [23] MedlineImporterTestPubmedBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[24]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#24]
display-name: [24] BibTeXMLImporterTestInProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[25]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#25]
display-name: [25] BibTeXMLImporterTestManual.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[26]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#26]
display-name: [26] encrypted.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[27]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#27]
display-name: [27] BibTeXMLImporterTestInBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[28]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#28]
display-name: [28] MedlineImporterTestArticleNoISSN.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[29]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#29]
display-name: [29] BibTeXMLImporterTestTechReport.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[30]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#30]
display-name: [30] BibTeXMLImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[31]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#31]
display-name: [31] MsBibImporterTitleTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[32]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#32]
display-name: [32] MsBibImporterTest6.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[33]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#33]
display-name: [33] BiblioscapeImporterTestKeywords.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[34]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#34]
display-name: [34] MsBibImporterInvalidMonth.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[35]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#35]
display-name: [35] OvidImporterTestBib3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[36]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#36]
display-name: [36] MsBibExportFormatUmlauts.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[37]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#37]
display-name: [37] MODSImporterTestAllFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[38]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#38]
display-name: [38] SilverPlatterImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[39]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#39]
display-name: [39] OvidImporterTest7.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[40]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#40]
display-name: [40] MODSImporterTestModsCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[41]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#41]
display-name: [41] MsBibImporterMsBibFieldsTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[42]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#42]
display-name: [42] MedlinePlainImporterTestCompleteEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[43]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#43]
display-name: [43] BibTeXMLImporterTestProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[44]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#44]
display-name: [44] BiblioscapeImporterTestComments.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[45]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#45]
display-name: [45] BibTeXMLImporterTestUnpublished.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[46]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#46]
display-name: [46] MsBibImporterTestTranslator.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[47]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#47]
display-name: [47] BibTeXMLImporterTestManual.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[48]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#48]
display-name: [48] OvidImporterTest2Invalid.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[49]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#49]
display-name: [49] MsBibImporterTest7.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[50]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#50]
display-name: [50] RisImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[51]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#51]
display-name: [51] EndnoteXmlImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[52]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#52]
display-name: [52] OvidImporterTest6.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[53]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#53]
display-name: [53] RisImporterTestScopus.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[54]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#54]
display-name: [54] BibTeXMLImporterTestIncollectionWithoutChapter.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[55]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#55]
display-name: [55] MedlineImporterTestMinimalEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[56]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#56]
display-name: [56] RepecNepImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[57]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#57]
display-name: [57] IsiImporterTest2.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[58]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#58]
display-name: [58] RisImporterTestScopus.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[59]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#59]
display-name: [59] RepecNepImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[60]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#60]
display-name: [60] RisImporterCorrupted.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[61]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#61]
display-name: [61] MsBibImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[62]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#62]
display-name: [62] MsBibLocationTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[63]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#63]
display-name: [63] MsBibImporterInvalidMonth.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[64]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#64]
display-name: [64] MsBibImporterTest5.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[65]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#65]
display-name: [65] MsBibLCID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[66]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#66]
display-name: [66] EndnoteXmlImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[67]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#67]
display-name: [67] OvidImporterTest5.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[68]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#68]
display-name: [68] RisImporterTestDoiAndJournalTitle.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[69]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#69]
display-name: [69] Endnote.pattern.E.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[70]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#70]
display-name: [70] MedlineImporterTestMinimalEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[71]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#71]
display-name: [71] MsBibImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[72]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#72]
display-name: [72] BiblioscapeImporterTestCorrupt.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[73]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#73]
display-name: [73] OvidImporterTest4.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[74]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#74]
display-name: [74] MedlinePlainImporterTestMultiTitle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[75]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#75]
display-name: [75] InspecImportTestFalse.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[76]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#76]
display-name: [76] SilverPlatterImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[77]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#77]
display-name: [77] BibTeXMLImporterTestConference.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[78]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#78]
display-name: [78] LNCS-minimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[79]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#79]
display-name: [79] OvidImporterTestBib7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[80]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#80]
display-name: [80] MsBibImporterTest4.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[81]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#81]
display-name: [81] BiblioscapeImporterTestArticleST.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[82]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#82]
display-name: [82] RisImporterTest6.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[83]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#83]
display-name: [83] IsiImporterTestWOS.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[84]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#84]
display-name: [84] MODSImporterTestMinimal.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[85]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#85]
display-name: [85] BiblioscapeImporterTestUnknownFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[86]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#86]
display-name: [86] RepecNepImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[87]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#87]
display-name: [87] BibTeXMLImporterTestMisc.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[88]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#88]
display-name: [88] MedlinePlainImporterStringOutOfBounds.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[89]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#89]
display-name: [89] RisImporterTest4b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[90]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#90]
display-name: [90] OvidImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[91]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#91]
display-name: [91] emptyFile.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[92]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#92]
display-name: [92] IEEEImport1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[93]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#93]
display-name: [93] BibTeXMLImporterTestEmpty.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[94]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#94]
display-name: [94] EndnoteXmlImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[95]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#95]
display-name: [95] BibTeXMLImporterTestArticleWithoutID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[96]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#96]
display-name: [96] BibTeXMLImporterTestInProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[97]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#97]
display-name: [97] BiblioscapeImporterTestInbook.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[98]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#98]
display-name: [98] MedlinePlainImporterStringOutOfBounds.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[99]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#99]
display-name: [99] MsBibMultiLocationAddressTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[100]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#100]
display-name: [100] IsiImporterTest1.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[101]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#101]
display-name: [101] MedlinePlainImporterTestDOI.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[102]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#102]
display-name: [102] MedlinePlainImporterTestCompleteEntry.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[103]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#103]
display-name: [103] MsBibImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[104]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#104]
display-name: [104] RisImporterTest3.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[105]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#105]
display-name: [105] MODSImporterTestModsCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[106]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#106]
display-name: [106] EndnoteXmlImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[107]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#107]
display-name: [107] BibTeXMLImporterTestMisc.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[108]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#108]
display-name: [108] RepecNepImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[109]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#109]
display-name: [109] BiblioscapeImporterTestOptionalFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[110]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#110]
display-name: [110] RisImporterTestDoiAndJournalTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[111]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#111]
display-name: [111] MsBibShorttitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[112]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#112]
display-name: [112] BibTeXMLImporterTestInvalidInbook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[113]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#113]
display-name: [113] BiblioscapeImporterTestKeywords.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[114]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#114]
display-name: [114] RisImporterTest1.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[115]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#115]
display-name: [115] BiblioscapeImporterTestComments.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[116]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#116]
display-name: [116] RisImporterTest5a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[117]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#117]
display-name: [117] InspecImportTest.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[118]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#118]
display-name: [118] BibTeXMLImporterTestBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[119]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#119]
display-name: [119] MsBibPatent.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[120]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#120]
display-name: [120] MedlinePlainImporterTestMultipleEntries.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[121]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#121]
display-name: [121] MODSImporterTestMods.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[122]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#122]
display-name: [122] SilverPlatterImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[123]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#123]
display-name: [123] BibTeXMLImporterTestBooklet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[124]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#124]
display-name: [124] RisImporterTest4a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[125]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#125]
display-name: [125] RisImporterTest4b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[126]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#126]
display-name: [126] BiblioscapeImporterTestUnknownType.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[127]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#127]
display-name: [127] MedlineImporterTestMalformedEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[128]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#128]
display-name: [128] Endnote.book.example.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[129]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#129]
display-name: [129] MedlineImporterTestKeywordSingleEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[130]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#130]
display-name: [130] BibTeXMLImporterTestInCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[131]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#131]
display-name: [131] BiblioscapeImporterTestInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[132]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#132]
display-name: [132] MedlineImporterTestArticleID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[133]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#133]
display-name: [133] CopacImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[134]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#134]
display-name: [134] RisImporterTest5b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[135]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#135]
display-name: [135] CopacImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[136]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#136]
display-name: [136] MsBibPatent.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[137]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#137]
display-name: [137] BiblioscapeImporterTestUnknownType.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[138]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#138]
display-name: [138] IsiImporterTestMedline.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[139]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#139]
display-name: [139] MODSImporterTestAllFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[140]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#140]
display-name: [140] MsBibLocationTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[141]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#141]
display-name: [141] CopacImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[142]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#142]
display-name: [142] BiblioscapeImporterTestOptionalFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[143]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#143]
display-name: [143] MedlinePlainImporterTestDOI.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[144]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#144]
display-name: [144] InspecImportTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[145]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#145]
display-name: [145] RisImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[146]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#146]
display-name: [146] BibTeXMLImporterTestEmpty.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[147]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.315">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#147]
display-name: [147] LNCS-minimal-protected.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[148]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#148]
display-name: [148] MedlinePlainImporterTestInproceeding.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[149]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#149]
display-name: [149] BiblioscapeImporterTestJournalArticle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[150]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#150]
display-name: [150] MedlineImporterTestArticleID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[151]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#151]
display-name: [151] BibTeXMLImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[152]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#152]
display-name: [152] BibTeXMLImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[153]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#153]
display-name: [153] MsBibImporterTestTranslator.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[154]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#154]
display-name: [154] MsBibShorttitle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[155]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#155]
display-name: [155] BibTeXMLImporterTestUnpublished.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[156]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#156]
display-name: [156] MODSImporterTestMods.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[157]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#157]
display-name: [157] BibTeXMLImporterTestInvalidInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[158]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#158]
display-name: [158] BibTeXMLImporterTestBooklet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[159]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#159]
display-name: [159] MsBibImporterTest5.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[160]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.538">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#160]
display-name: [160] SilverPlatterImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[161]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#161]
display-name: [161] LNCS-minimal.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[162]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#162]
display-name: [162] Empty.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[163]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#163]
display-name: [163] MedlineImporterTestPubmedBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[164]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#164]
display-name: [164] MsBibExportFormatUmlauts.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[165]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#165]
display-name: [165] MedlinePlainImporterTestInproceeding.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[166]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#166]
display-name: [166] IsiImporterTestEmpty.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[167]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#167]
display-name: [167] BiblioscapeImporterTestArticleST.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[168]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#168]
display-name: [168] MedlinePlainImporterTestMultiTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[169]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#169]
display-name: [169] RisImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[170]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#170]
display-name: [170] Endnote.entries.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[171]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#171]
display-name: [171] RisImporterTestScience.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[172]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#172]
display-name: [172] empty.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[173]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#173]
display-name: [173] MedlineImporterTestNbib.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[174]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#174]
display-name: [174] BibTeXMLImporterTestPhdThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[175]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#175]
display-name: [175] MsBibMultiLocationAddressTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[176]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#176]
display-name: [176] LNCS-minimal-protected.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[177]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#177]
display-name: [177] OvidImporterTestBib5.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[178]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#178]
display-name: [178] MedlineImporterTestBookArticleSet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[179]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#179]
display-name: [179] RisImporterTest4a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[180]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#180]
display-name: [180] BibTeXMLImporterTestMasterThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[181]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#181]
display-name: [181] RisImporterTest4c.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[182]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#182]
display-name: [182] MedlineImporterTestBookArticleSet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[183]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#183]
display-name: [183] EmptyMsBib_Test.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[184]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#184]
display-name: [184] RepecNepImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[185]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#185]
display-name: [185] BibTeXMLImporterTestBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[186]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#186]
display-name: [186] RisImporterTest5a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[187]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#187]
display-name: [187] MedlineImporterTestNbib.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[188]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#188]
display-name: [188] BibTeXMLImporterTestInbookLessFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[189]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#189]
display-name: [189] BibTeXMLImporterTestInBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[190]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#190]
display-name: [190] NbibImporterTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[191]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#191]
display-name: [191] BibTeXMLImporterTestInCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[192]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#192]
display-name: [192] BibTeXMLImporterTestArticleWithoutID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[193]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#193]
display-name: [193] RisImporterTest4c.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[194]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#194]
display-name: [194] MsBibImporterTitleTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[195]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#195]
display-name: [195] MedlineImporterTestArticleNoISSN.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[196]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#196]
display-name: [196] IsiImporterTestInspec.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[197]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#197]
display-name: [197] BibTeXMLImporterTestPhdThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[198]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#198]
display-name: [198] MedlinePlainImporterTestMultiAbstract.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[199]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#199]
display-name: [199] BibTeXMLImporterTestInbookLessFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[200]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#200]
display-name: [200] RisImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[201]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#201]
display-name: [201] MsBibLCID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[202]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#202]
display-name: [202] RepecNepImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[203]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#203]
display-name: [203] BibTeXMLImporterTestProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[204]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#204]
display-name: [204] BibTeXMLImporterTestIncollectionWithoutChapter.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[205]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#205]
display-name: [205] RisImporterTestScience.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[206]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#206]
display-name: [206] BibTeXMLImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[207]" classname="org.jabref.logic.importer.fileformat.PdfXmpImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.PdfXmpImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#207]
display-name: [207] OvidImporterTestBib4.bib
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.MedlineImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlineImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.MedlineImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlineImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.MedlineImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlineImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.MedlineImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlineImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.BibTeXMLImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibTeXMLImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.BibTeXMLImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibTeXMLImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.BibTeXMLImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibTeXMLImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.BibTeXMLImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibTeXMLImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testImportEmptyEntries()" classname="org.jabref.logic.importer.fileformat.CopacImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CopacImporterTest]/[method:testImportEmptyEntries()]
display-name: testImportEmptyEntries()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.CopacImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CopacImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.CopacImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CopacImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testImportEntriesWOS()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testImportEntriesWOS()]
display-name: testImportEntriesWOS()
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testProcessSubSup()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testProcessSubSup()]
display-name: testProcessSubSup()
]]></system-out>
</testcase>
<testcase name="testIEEEImport()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testIEEEImport()]
display-name: testIEEEImport()
]]></system-out>
</testcase>
<testcase name="testImportEntriesEmpty()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testImportEntriesEmpty()]
display-name: testImportEntriesEmpty()
]]></system-out>
</testcase>
<testcase name="testParseMonthException()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testParseMonthException()]
display-name: testParseMonthException()
]]></system-out>
</testcase>
<testcase name="testImportEntriesINSPEC()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testImportEntriesINSPEC()]
display-name: testImportEntriesINSPEC()
]]></system-out>
</testcase>
<testcase name="testImportIEEEExport()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testImportIEEEExport()]
display-name: testImportIEEEExport()
]]></system-out>
</testcase>
<testcase name="testMonthConvert()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testMonthConvert()]
display-name: testMonthConvert()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testIsiAuthorConvert()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testIsiAuthorConvert()]
display-name: testIsiAuthorConvert()
]]></system-out>
</testcase>
<testcase name="testIsiAuthorsConvert()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testIsiAuthorsConvert()]
display-name: testIsiAuthorsConvert()
]]></system-out>
</testcase>
<testcase name="testImportEntries1()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testImportEntries1()]
display-name: testImportEntries1()
]]></system-out>
</testcase>
<testcase name="testImportEntries2()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testImportEntries2()]
display-name: testImportEntries2()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testImportEntriesMedline()" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[method:testImportEntriesMedline()]
display-name: testImportEntriesMedline()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccepted(String)[1]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatAccepted(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] IsiImporterTest2.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccepted(String)[2]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatAccepted(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] IsiImporterTestWOS.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccepted(String)[3]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatAccepted(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] IsiImporterTest1.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccepted(String)[4]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatAccepted(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] IsiImporterTestMedline.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccepted(String)[5]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatAccepted(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] IsiImporterTestInspec.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[1]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] AutosavedSharedDatabase.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[2]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RisImporterTest5b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[3]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] BibTeXMLImporterTestTechReport.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[4]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] OvidImporterTestBib6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[5]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] CopacImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[6]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] Endnote.pattern.no_enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[7]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#7]
display-name: [7] BibTeXMLImporterTestConference.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[8]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#8]
display-name: [8] MsBibImporterTest4.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[9]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#9]
display-name: [9] NbibImporterTest.nbib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[10]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#10]
display-name: [10] OvidImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[11]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#11]
display-name: [11] BiblioscapeImporterTestJournalArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[12]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#12]
display-name: [12] MODSImporterTestMinimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[13]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#13]
display-name: [13] MedlinePlainImporterTestMultiAbstract.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[14]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#14]
display-name: [14] BibTeXMLImporterTestMasterThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[15]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#15]
display-name: [15] MsBibImporterMsBibFieldsTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[16]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#16]
display-name: [16] BibtexImporter.examples.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[17]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#17]
display-name: [17] RisImporterTest7.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[18]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#18]
display-name: [18] BiblioscapeImporterTestUnknownFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[19]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#19]
display-name: [19] MsBibImporterTest3.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[20]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#20]
display-name: [20] MedlinePlainImporterTestInvalidFormat.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[21]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#21]
display-name: [21] MedlineImporterTestKeywordSingleEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[22]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#22]
display-name: [22] Endnote.pattern.A.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[23]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#23]
display-name: [23] MedlineImporterTestPubmedBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[24]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#24]
display-name: [24] BibTeXMLImporterTestInProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[25]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#25]
display-name: [25] BibTeXMLImporterTestManual.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[26]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#26]
display-name: [26] encrypted.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[27]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#27]
display-name: [27] BibTeXMLImporterTestInBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[28]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#28]
display-name: [28] MedlineImporterTestArticleNoISSN.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[29]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#29]
display-name: [29] BibTeXMLImporterTestTechReport.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[30]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#30]
display-name: [30] BibTeXMLImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[31]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#31]
display-name: [31] MsBibImporterTitleTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[32]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#32]
display-name: [32] MsBibImporterTest6.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[33]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#33]
display-name: [33] BiblioscapeImporterTestKeywords.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[34]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#34]
display-name: [34] MsBibImporterInvalidMonth.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[35]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#35]
display-name: [35] OvidImporterTestBib3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[36]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#36]
display-name: [36] MsBibExportFormatUmlauts.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[37]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#37]
display-name: [37] MODSImporterTestAllFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[38]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#38]
display-name: [38] SilverPlatterImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[39]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#39]
display-name: [39] OvidImporterTest7.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[40]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#40]
display-name: [40] MODSImporterTestModsCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[41]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#41]
display-name: [41] MsBibImporterMsBibFieldsTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[42]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#42]
display-name: [42] MedlinePlainImporterTestCompleteEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[43]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#43]
display-name: [43] BibTeXMLImporterTestProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[44]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#44]
display-name: [44] BiblioscapeImporterTestComments.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[45]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#45]
display-name: [45] BibTeXMLImporterTestUnpublished.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[46]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#46]
display-name: [46] MsBibImporterTestTranslator.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[47]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#47]
display-name: [47] BibTeXMLImporterTestManual.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[48]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#48]
display-name: [48] OvidImporterTest2Invalid.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[49]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#49]
display-name: [49] MsBibImporterTest7.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[50]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#50]
display-name: [50] RisImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[51]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#51]
display-name: [51] EndnoteXmlImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[52]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#52]
display-name: [52] OvidImporterTest6.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[53]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#53]
display-name: [53] annotated.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[54]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#54]
display-name: [54] RisImporterTestScopus.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[55]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#55]
display-name: [55] BibTeXMLImporterTestIncollectionWithoutChapter.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[56]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#56]
display-name: [56] MedlineImporterTestMinimalEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[57]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#57]
display-name: [57] RepecNepImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[58]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#58]
display-name: [58] RisImporterTestScopus.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[59]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#59]
display-name: [59] RepecNepImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[60]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#60]
display-name: [60] RisImporterCorrupted.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[61]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#61]
display-name: [61] MsBibImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[62]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#62]
display-name: [62] MsBibLocationTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[63]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#63]
display-name: [63] MsBibImporterInvalidMonth.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[64]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#64]
display-name: [64] MsBibImporterTest5.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[65]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#65]
display-name: [65] MsBibLCID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[66]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#66]
display-name: [66] EndnoteXmlImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[67]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#67]
display-name: [67] OvidImporterTest5.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[68]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#68]
display-name: [68] RisImporterTestDoiAndJournalTitle.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[69]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#69]
display-name: [69] Endnote.pattern.E.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[70]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#70]
display-name: [70] MedlineImporterTestMinimalEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[71]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#71]
display-name: [71] MsBibImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[72]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#72]
display-name: [72] BiblioscapeImporterTestCorrupt.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[73]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#73]
display-name: [73] OvidImporterTest4.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[74]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#74]
display-name: [74] MedlinePlainImporterTestMultiTitle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[75]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#75]
display-name: [75] InspecImportTestFalse.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[76]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#76]
display-name: [76] SilverPlatterImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[77]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#77]
display-name: [77] BibTeXMLImporterTestConference.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[78]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#78]
display-name: [78] LNCS-minimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[79]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#79]
display-name: [79] OvidImporterTestBib7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[80]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#80]
display-name: [80] MsBibImporterTest4.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[81]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#81]
display-name: [81] BiblioscapeImporterTestArticleST.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[82]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#82]
display-name: [82] RisImporterTest6.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[83]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#83]
display-name: [83] MODSImporterTestMinimal.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[84]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#84]
display-name: [84] BiblioscapeImporterTestUnknownFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[85]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#85]
display-name: [85] RepecNepImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[86]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#86]
display-name: [86] BibTeXMLImporterTestMisc.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[87]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#87]
display-name: [87] MedlinePlainImporterStringOutOfBounds.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[88]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#88]
display-name: [88] RisImporterTest4b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[89]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#89]
display-name: [89] OvidImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[90]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#90]
display-name: [90] emptyFile.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[91]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#91]
display-name: [91] IEEEImport1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[92]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#92]
display-name: [92] BibTeXMLImporterTestEmpty.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[93]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#93]
display-name: [93] EndnoteXmlImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[94]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#94]
display-name: [94] BibTeXMLImporterTestArticleWithoutID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[95]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#95]
display-name: [95] BibTeXMLImporterTestInProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[96]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#96]
display-name: [96] BiblioscapeImporterTestInbook.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[97]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#97]
display-name: [97] MedlinePlainImporterStringOutOfBounds.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[98]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#98]
display-name: [98] MsBibMultiLocationAddressTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[99]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#99]
display-name: [99] MedlinePlainImporterTestDOI.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[100]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#100]
display-name: [100] MedlinePlainImporterTestCompleteEntry.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[101]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#101]
display-name: [101] MsBibImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[102]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#102]
display-name: [102] RisImporterTest3.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[103]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#103]
display-name: [103] MODSImporterTestModsCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[104]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#104]
display-name: [104] EndnoteXmlImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[105]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#105]
display-name: [105] BibTeXMLImporterTestMisc.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[106]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#106]
display-name: [106] RepecNepImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[107]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#107]
display-name: [107] BiblioscapeImporterTestOptionalFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[108]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#108]
display-name: [108] RisImporterTestDoiAndJournalTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[109]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#109]
display-name: [109] MsBibShorttitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[110]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#110]
display-name: [110] BibTeXMLImporterTestInvalidInbook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[111]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#111]
display-name: [111] BiblioscapeImporterTestKeywords.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[112]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#112]
display-name: [112] RisImporterTest1.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[113]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#113]
display-name: [113] BiblioscapeImporterTestComments.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[114]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#114]
display-name: [114] RisImporterTest5a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[115]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#115]
display-name: [115] InspecImportTest.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[116]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#116]
display-name: [116] BibTeXMLImporterTestBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[117]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#117]
display-name: [117] MsBibPatent.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[118]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#118]
display-name: [118] MedlinePlainImporterTestMultipleEntries.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[119]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#119]
display-name: [119] MODSImporterTestMods.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[120]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#120]
display-name: [120] SilverPlatterImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[121]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#121]
display-name: [121] BibTeXMLImporterTestBooklet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[122]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#122]
display-name: [122] RisImporterTest4a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[123]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#123]
display-name: [123] RisImporterTest4b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[124]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#124]
display-name: [124] BiblioscapeImporterTestUnknownType.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[125]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#125]
display-name: [125] MedlineImporterTestMalformedEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[126]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#126]
display-name: [126] Endnote.book.example.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[127]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#127]
display-name: [127] MedlineImporterTestKeywordSingleEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[128]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#128]
display-name: [128] BibTeXMLImporterTestInCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[129]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#129]
display-name: [129] BiblioscapeImporterTestInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[130]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#130]
display-name: [130] MedlineImporterTestArticleID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[131]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#131]
display-name: [131] CopacImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[132]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#132]
display-name: [132] RisImporterTest5b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[133]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#133]
display-name: [133] CopacImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[134]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#134]
display-name: [134] MsBibPatent.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[135]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#135]
display-name: [135] BiblioscapeImporterTestUnknownType.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[136]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#136]
display-name: [136] MODSImporterTestAllFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[137]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#137]
display-name: [137] MsBibLocationTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[138]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#138]
display-name: [138] CopacImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[139]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#139]
display-name: [139] BiblioscapeImporterTestOptionalFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[140]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#140]
display-name: [140] MedlinePlainImporterTestDOI.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[141]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#141]
display-name: [141] InspecImportTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[142]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#142]
display-name: [142] RisImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[143]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#143]
display-name: [143] BibTeXMLImporterTestEmpty.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[144]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#144]
display-name: [144] LNCS-minimal-protected.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[145]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#145]
display-name: [145] MedlinePlainImporterTestInproceeding.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[146]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#146]
display-name: [146] BiblioscapeImporterTestJournalArticle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[147]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#147]
display-name: [147] MedlineImporterTestArticleID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[148]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#148]
display-name: [148] BibTeXMLImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[149]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#149]
display-name: [149] BibTeXMLImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[150]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#150]
display-name: [150] MsBibImporterTestTranslator.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[151]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#151]
display-name: [151] MsBibShorttitle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[152]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#152]
display-name: [152] BibTeXMLImporterTestUnpublished.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[153]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#153]
display-name: [153] MODSImporterTestMods.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[154]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#154]
display-name: [154] BibTeXMLImporterTestInvalidInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[155]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#155]
display-name: [155] BibTeXMLImporterTestBooklet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[156]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#156]
display-name: [156] MsBibImporterTest5.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[157]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#157]
display-name: [157] SilverPlatterImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[158]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#158]
display-name: [158] LNCS-minimal.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[159]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#159]
display-name: [159] Empty.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[160]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#160]
display-name: [160] MedlineImporterTestPubmedBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[161]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#161]
display-name: [161] MsBibExportFormatUmlauts.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[162]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#162]
display-name: [162] MedlinePlainImporterTestInproceeding.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[163]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#163]
display-name: [163] BiblioscapeImporterTestArticleST.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[164]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#164]
display-name: [164] MedlinePlainImporterTestMultiTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[165]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#165]
display-name: [165] RisImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[166]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#166]
display-name: [166] Endnote.entries.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[167]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#167]
display-name: [167] RisImporterTestScience.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[168]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#168]
display-name: [168] empty.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[169]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#169]
display-name: [169] MedlineImporterTestNbib.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[170]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#170]
display-name: [170] BibTeXMLImporterTestPhdThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[171]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#171]
display-name: [171] MsBibMultiLocationAddressTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[172]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#172]
display-name: [172] LNCS-minimal-protected.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[173]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#173]
display-name: [173] OvidImporterTestBib5.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[174]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#174]
display-name: [174] MedlineImporterTestBookArticleSet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[175]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#175]
display-name: [175] RisImporterTest4a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[176]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#176]
display-name: [176] BibTeXMLImporterTestMasterThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[177]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#177]
display-name: [177] RisImporterTest4c.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[178]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#178]
display-name: [178] MedlineImporterTestBookArticleSet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[179]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#179]
display-name: [179] EmptyMsBib_Test.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[180]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#180]
display-name: [180] RepecNepImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[181]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#181]
display-name: [181] BibTeXMLImporterTestBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[182]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#182]
display-name: [182] RisImporterTest5a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[183]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#183]
display-name: [183] MedlineImporterTestNbib.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[184]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#184]
display-name: [184] BibTeXMLImporterTestInbookLessFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[185]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#185]
display-name: [185] BibTeXMLImporterTestInBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[186]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#186]
display-name: [186] NbibImporterTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[187]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#187]
display-name: [187] BibTeXMLImporterTestInCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[188]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#188]
display-name: [188] BibTeXMLImporterTestArticleWithoutID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[189]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#189]
display-name: [189] RisImporterTest4c.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[190]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#190]
display-name: [190] MsBibImporterTitleTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[191]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#191]
display-name: [191] MedlineImporterTestArticleNoISSN.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[192]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#192]
display-name: [192] BibTeXMLImporterTestPhdThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[193]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#193]
display-name: [193] MedlinePlainImporterTestMultiAbstract.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[194]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#194]
display-name: [194] BibTeXMLImporterTestInbookLessFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[195]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#195]
display-name: [195] RisImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[196]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#196]
display-name: [196] MsBibLCID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[197]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#197]
display-name: [197] RepecNepImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[198]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#198]
display-name: [198] BibTeXMLImporterTestProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[199]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#199]
display-name: [199] BibTeXMLImporterTestIncollectionWithoutChapter.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[200]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#200]
display-name: [200] RisImporterTestScience.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[201]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#201]
display-name: [201] BibTeXMLImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatRejected(String)[202]" classname="org.jabref.logic.importer.fileformat.IsiImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.IsiImporterTest]/[test-template:testIsRecognizedFormatRejected(java.lang.String)]/[test-template-invocation:#202]
display-name: [202] OvidImporterTestBib4.bib
]]></system-out>
</testcase>
<testcase name="testImportEntries()" classname="org.jabref.logic.importer.fileformat.BibtexImporterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexImporterTest]/[method:testImportEntries()]
display-name: testImportEntries()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat()" classname="org.jabref.logic.importer.fileformat.BibtexImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexImporterTest]/[method:testIsRecognizedFormat()]
display-name: testIsRecognizedFormat()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.BibtexImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.BibtexImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testRecognizesDatabaseID()" classname="org.jabref.logic.importer.fileformat.BibtexImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexImporterTest]/[method:testRecognizesDatabaseID()]
display-name: testRecognizesDatabaseID()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.BibtexImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="importConferencePaperGivesInproceedings()" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[method:importConferencePaperGivesInproceedings()]
display-name: importConferencePaperGivesInproceedings()
]]></system-out>
</testcase>
<testcase name="importMiscGivesMisc()" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[method:importMiscGivesMisc()]
display-name: importMiscGivesMisc()
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testCompleteBibtexEntryOnJournalPaperImport()" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[method:testCompleteBibtexEntryOnJournalPaperImport()]
display-name: testCompleteBibtexEntryOnJournalPaperImport()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[1]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] InspecImportTest.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatAccept(String)[2]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatAccept(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] InspecImportTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[1]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] AutosavedSharedDatabase.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[2]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RisImporterTest5b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[3]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] BibTeXMLImporterTestTechReport.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[4]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] OvidImporterTestBib6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[5]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] CopacImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[6]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] Endnote.pattern.no_enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[7]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#7]
display-name: [7] BibTeXMLImporterTestConference.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[8]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#8]
display-name: [8] MsBibImporterTest4.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[9]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#9]
display-name: [9] NbibImporterTest.nbib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[10]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#10]
display-name: [10] OvidImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[11]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#11]
display-name: [11] BiblioscapeImporterTestJournalArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[12]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#12]
display-name: [12] MODSImporterTestMinimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[13]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#13]
display-name: [13] MedlinePlainImporterTestMultiAbstract.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[14]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#14]
display-name: [14] BibTeXMLImporterTestMasterThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[15]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#15]
display-name: [15] MsBibImporterMsBibFieldsTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[16]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#16]
display-name: [16] BibtexImporter.examples.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[17]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#17]
display-name: [17] RisImporterTest7.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[18]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#18]
display-name: [18] BiblioscapeImporterTestUnknownFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[19]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#19]
display-name: [19] MsBibImporterTest3.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[20]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#20]
display-name: [20] MedlinePlainImporterTestInvalidFormat.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[21]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#21]
display-name: [21] MedlineImporterTestKeywordSingleEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[22]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#22]
display-name: [22] Endnote.pattern.A.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[23]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#23]
display-name: [23] MedlineImporterTestPubmedBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[24]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#24]
display-name: [24] BibTeXMLImporterTestInProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[25]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#25]
display-name: [25] BibTeXMLImporterTestManual.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[26]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#26]
display-name: [26] encrypted.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[27]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#27]
display-name: [27] BibTeXMLImporterTestInBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[28]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#28]
display-name: [28] MedlineImporterTestArticleNoISSN.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[29]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#29]
display-name: [29] BibTeXMLImporterTestTechReport.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[30]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#30]
display-name: [30] BibTeXMLImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[31]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#31]
display-name: [31] MsBibImporterTitleTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[32]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#32]
display-name: [32] MsBibImporterTest6.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[33]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#33]
display-name: [33] BiblioscapeImporterTestKeywords.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[34]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#34]
display-name: [34] MsBibImporterInvalidMonth.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[35]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#35]
display-name: [35] OvidImporterTestBib3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[36]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#36]
display-name: [36] MsBibExportFormatUmlauts.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[37]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#37]
display-name: [37] MODSImporterTestAllFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[38]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#38]
display-name: [38] SilverPlatterImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[39]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#39]
display-name: [39] OvidImporterTest7.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[40]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#40]
display-name: [40] MODSImporterTestModsCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[41]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#41]
display-name: [41] MsBibImporterMsBibFieldsTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[42]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#42]
display-name: [42] MedlinePlainImporterTestCompleteEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[43]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#43]
display-name: [43] BibTeXMLImporterTestProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[44]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#44]
display-name: [44] BiblioscapeImporterTestComments.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[45]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#45]
display-name: [45] BibTeXMLImporterTestUnpublished.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[46]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#46]
display-name: [46] MsBibImporterTestTranslator.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[47]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#47]
display-name: [47] BibTeXMLImporterTestManual.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[48]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#48]
display-name: [48] OvidImporterTest2Invalid.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[49]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#49]
display-name: [49] MsBibImporterTest7.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[50]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#50]
display-name: [50] RisImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[51]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#51]
display-name: [51] EndnoteXmlImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[52]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#52]
display-name: [52] OvidImporterTest6.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[53]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#53]
display-name: [53] annotated.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[54]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#54]
display-name: [54] RisImporterTestScopus.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[55]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#55]
display-name: [55] BibTeXMLImporterTestIncollectionWithoutChapter.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[56]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#56]
display-name: [56] MedlineImporterTestMinimalEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[57]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#57]
display-name: [57] RepecNepImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[58]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#58]
display-name: [58] IsiImporterTest2.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[59]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#59]
display-name: [59] RisImporterTestScopus.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[60]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#60]
display-name: [60] RepecNepImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[61]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#61]
display-name: [61] RisImporterCorrupted.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[62]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#62]
display-name: [62] MsBibImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[63]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#63]
display-name: [63] MsBibLocationTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[64]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#64]
display-name: [64] MsBibImporterInvalidMonth.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[65]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#65]
display-name: [65] MsBibImporterTest5.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[66]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#66]
display-name: [66] MsBibLCID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[67]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#67]
display-name: [67] EndnoteXmlImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[68]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#68]
display-name: [68] OvidImporterTest5.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[69]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#69]
display-name: [69] RisImporterTestDoiAndJournalTitle.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[70]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#70]
display-name: [70] Endnote.pattern.E.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[71]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#71]
display-name: [71] MedlineImporterTestMinimalEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[72]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#72]
display-name: [72] MsBibImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[73]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#73]
display-name: [73] BiblioscapeImporterTestCorrupt.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[74]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#74]
display-name: [74] OvidImporterTest4.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[75]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#75]
display-name: [75] MedlinePlainImporterTestMultiTitle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[76]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#76]
display-name: [76] SilverPlatterImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[77]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#77]
display-name: [77] BibTeXMLImporterTestConference.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[78]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#78]
display-name: [78] LNCS-minimal.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[79]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#79]
display-name: [79] OvidImporterTestBib7.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[80]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#80]
display-name: [80] MsBibImporterTest4.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[81]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#81]
display-name: [81] BiblioscapeImporterTestArticleST.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[82]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#82]
display-name: [82] RisImporterTest6.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[83]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#83]
display-name: [83] IsiImporterTestWOS.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[84]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#84]
display-name: [84] MODSImporterTestMinimal.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[85]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#85]
display-name: [85] BiblioscapeImporterTestUnknownFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[86]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#86]
display-name: [86] RepecNepImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[87]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#87]
display-name: [87] BibTeXMLImporterTestMisc.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[88]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#88]
display-name: [88] MedlinePlainImporterStringOutOfBounds.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[89]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#89]
display-name: [89] RisImporterTest4b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[90]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#90]
display-name: [90] OvidImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[91]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#91]
display-name: [91] emptyFile.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[92]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#92]
display-name: [92] IEEEImport1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[93]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#93]
display-name: [93] BibTeXMLImporterTestEmpty.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[94]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#94]
display-name: [94] EndnoteXmlImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[95]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#95]
display-name: [95] BibTeXMLImporterTestArticleWithoutID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[96]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#96]
display-name: [96] BibTeXMLImporterTestInProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[97]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#97]
display-name: [97] BiblioscapeImporterTestInbook.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[98]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#98]
display-name: [98] MedlinePlainImporterStringOutOfBounds.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[99]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#99]
display-name: [99] MsBibMultiLocationAddressTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[100]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#100]
display-name: [100] IsiImporterTest1.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[101]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#101]
display-name: [101] MedlinePlainImporterTestDOI.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[102]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#102]
display-name: [102] MedlinePlainImporterTestCompleteEntry.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[103]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#103]
display-name: [103] MsBibImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[104]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#104]
display-name: [104] RisImporterTest3.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[105]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#105]
display-name: [105] MODSImporterTestModsCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[106]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#106]
display-name: [106] EndnoteXmlImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[107]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#107]
display-name: [107] BibTeXMLImporterTestMisc.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[108]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#108]
display-name: [108] RepecNepImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[109]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#109]
display-name: [109] BiblioscapeImporterTestOptionalFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[110]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#110]
display-name: [110] RisImporterTestDoiAndJournalTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[111]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#111]
display-name: [111] MsBibShorttitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[112]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#112]
display-name: [112] BibTeXMLImporterTestInvalidInbook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[113]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#113]
display-name: [113] BiblioscapeImporterTestKeywords.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[114]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#114]
display-name: [114] RisImporterTest1.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[115]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#115]
display-name: [115] BiblioscapeImporterTestComments.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[116]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#116]
display-name: [116] RisImporterTest5a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[117]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#117]
display-name: [117] BibTeXMLImporterTestBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[118]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#118]
display-name: [118] MsBibPatent.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[119]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#119]
display-name: [119] MedlinePlainImporterTestMultipleEntries.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[120]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#120]
display-name: [120] MODSImporterTestMods.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[121]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#121]
display-name: [121] SilverPlatterImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[122]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#122]
display-name: [122] BibTeXMLImporterTestBooklet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[123]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#123]
display-name: [123] RisImporterTest4a.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[124]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#124]
display-name: [124] RisImporterTest4b.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[125]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#125]
display-name: [125] BiblioscapeImporterTestUnknownType.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[126]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#126]
display-name: [126] MedlineImporterTestMalformedEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[127]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#127]
display-name: [127] Endnote.book.example.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[128]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#128]
display-name: [128] MedlineImporterTestKeywordSingleEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[129]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#129]
display-name: [129] BibTeXMLImporterTestInCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[130]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#130]
display-name: [130] BiblioscapeImporterTestInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[131]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#131]
display-name: [131] MedlineImporterTestArticleID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[132]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#132]
display-name: [132] CopacImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[133]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#133]
display-name: [133] RisImporterTest5b.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[134]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#134]
display-name: [134] CopacImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[135]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#135]
display-name: [135] MsBibPatent.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[136]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#136]
display-name: [136] BiblioscapeImporterTestUnknownType.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[137]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#137]
display-name: [137] IsiImporterTestMedline.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[138]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#138]
display-name: [138] MODSImporterTestAllFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[139]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#139]
display-name: [139] MsBibLocationTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[140]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#140]
display-name: [140] CopacImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[141]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#141]
display-name: [141] BiblioscapeImporterTestOptionalFields.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[142]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#142]
display-name: [142] MedlinePlainImporterTestDOI.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[143]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#143]
display-name: [143] RisImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[144]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#144]
display-name: [144] BibTeXMLImporterTestEmpty.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[145]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.065">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#145]
display-name: [145] LNCS-minimal-protected.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[146]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#146]
display-name: [146] MedlinePlainImporterTestInproceeding.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[147]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#147]
display-name: [147] BiblioscapeImporterTestJournalArticle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[148]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#148]
display-name: [148] MedlineImporterTestArticleID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[149]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#149]
display-name: [149] BibTeXMLImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[150]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#150]
display-name: [150] BibTeXMLImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[151]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#151]
display-name: [151] MsBibImporterTestTranslator.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[152]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#152]
display-name: [152] MsBibShorttitle.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[153]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#153]
display-name: [153] BibTeXMLImporterTestUnpublished.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[154]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#154]
display-name: [154] MODSImporterTestMods.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[155]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#155]
display-name: [155] BibTeXMLImporterTestInvalidInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[156]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#156]
display-name: [156] BibTeXMLImporterTestBooklet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[157]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#157]
display-name: [157] MsBibImporterTest5.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[158]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#158]
display-name: [158] SilverPlatterImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[159]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.05">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#159]
display-name: [159] LNCS-minimal.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[160]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#160]
display-name: [160] Empty.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[161]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#161]
display-name: [161] MedlineImporterTestPubmedBook.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[162]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#162]
display-name: [162] MsBibExportFormatUmlauts.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[163]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#163]
display-name: [163] MedlinePlainImporterTestInproceeding.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[164]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#164]
display-name: [164] IsiImporterTestEmpty.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[165]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#165]
display-name: [165] BiblioscapeImporterTestArticleST.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[166]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#166]
display-name: [166] MedlinePlainImporterTestMultiTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[167]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#167]
display-name: [167] RisImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[168]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#168]
display-name: [168] Endnote.entries.enw
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[169]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#169]
display-name: [169] RisImporterTestScience.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[170]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#170]
display-name: [170] empty.pdf
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[171]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#171]
display-name: [171] MedlineImporterTestNbib.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[172]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#172]
display-name: [172] BibTeXMLImporterTestPhdThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[173]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#173]
display-name: [173] MsBibMultiLocationAddressTest.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[174]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#174]
display-name: [174] LNCS-minimal-protected.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[175]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#175]
display-name: [175] OvidImporterTestBib5.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[176]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#176]
display-name: [176] MedlineImporterTestBookArticleSet.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[177]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#177]
display-name: [177] RisImporterTest4a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[178]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#178]
display-name: [178] BibTeXMLImporterTestMasterThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[179]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#179]
display-name: [179] RisImporterTest4c.ris
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[180]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#180]
display-name: [180] MedlineImporterTestBookArticleSet.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[181]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#181]
display-name: [181] EmptyMsBib_Test.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[182]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#182]
display-name: [182] RepecNepImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[183]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#183]
display-name: [183] BibTeXMLImporterTestBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[184]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#184]
display-name: [184] RisImporterTest5a.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[185]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#185]
display-name: [185] MedlineImporterTestNbib.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[186]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#186]
display-name: [186] BibTeXMLImporterTestInbookLessFields.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[187]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#187]
display-name: [187] BibTeXMLImporterTestInBook.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[188]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#188]
display-name: [188] NbibImporterTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[189]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#189]
display-name: [189] BibTeXMLImporterTestInCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[190]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#190]
display-name: [190] BibTeXMLImporterTestArticleWithoutID.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[191]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#191]
display-name: [191] RisImporterTest4c.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[192]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#192]
display-name: [192] MsBibImporterTitleTest.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[193]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#193]
display-name: [193] MedlineImporterTestArticleNoISSN.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[194]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#194]
display-name: [194] IsiImporterTestInspec.isi
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[195]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#195]
display-name: [195] BibTeXMLImporterTestPhdThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[196]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#196]
display-name: [196] MedlinePlainImporterTestMultiAbstract.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[197]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#197]
display-name: [197] BibTeXMLImporterTestInbookLessFields.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[198]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#198]
display-name: [198] RisImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[199]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#199]
display-name: [199] MsBibLCID.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[200]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#200]
display-name: [200] RepecNepImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[201]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#201]
display-name: [201] BibTeXMLImporterTestProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[202]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#202]
display-name: [202] BibTeXMLImporterTestIncollectionWithoutChapter.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[203]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#203]
display-name: [203] RisImporterTestScience.bib
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[204]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#204]
display-name: [204] BibTeXMLImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject(String)[205]" classname="org.jabref.logic.importer.fileformat.InspecImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.InspecImporterTest]/[test-template:testIsRecognizedFormatReject(java.lang.String)]/[test-template-invocation:#205]
display-name: [205] OvidImporterTestBib4.bib
]]></system-out>
</testcase>
<testcase name="testImportEntriesNotRecognizedFormat()" classname="org.jabref.logic.importer.fileformat.MsBibImporterTest" time="0.069">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MsBibImporterTest]/[method:testImportEntriesNotRecognizedFormat()]
display-name: testImportEntriesNotRecognizedFormat()
]]></system-out>
</testcase>
<testcase name="testImportEntriesEmpty()" classname="org.jabref.logic.importer.fileformat.MsBibImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MsBibImporterTest]/[method:testImportEntriesEmpty()]
display-name: testImportEntriesEmpty()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.MsBibImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MsBibImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.MsBibImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MsBibImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat()" classname="org.jabref.logic.importer.fileformat.MsBibImporterTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MsBibImporterTest]/[method:testIsNotRecognizedFormat()]
display-name: testIsNotRecognizedFormat()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.MsBibImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MsBibImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testGetCommandLineId()" classname="org.jabref.logic.importer.fileformat.MsBibImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MsBibImporterTest]/[method:testGetCommandLineId()]
display-name: testGetCommandLineId()
]]></system-out>
</testcase>
<testcase name="parseRecognizesStringAndEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesStringAndEntry()]
display-name: parseRecognizesStringAndEntry()
]]></system-out>
</testcase>
<testcase name="integrationTestGroupTree()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestGroupTree()]
display-name: integrationTestGroupTree()
]]></system-out>
</testcase>
<testcase name="integrationTestBiblatexMode()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestBiblatexMode()]
display-name: integrationTestBiblatexMode()
]]></system-out>
</testcase>
<testcase name="parseIgnoresComments()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresComments()]
display-name: parseIgnoresComments()
]]></system-out>
</testcase>
<testcase name="parseCommentContainingEntries()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCommentContainingEntries()]
display-name: parseCommentContainingEntries()
]]></system-out>
</testcase>
<testcase name="parsePreservesTabsInAbstractField()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parsePreservesTabsInAbstractField()]
display-name: parsePreservesTabsInAbstractField()
]]></system-out>
</testcase>
<testcase name="singleFromStringReturnsEmptyFromEmptyString()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:singleFromStringReturnsEmptyFromEmptyString()]
display-name: singleFromStringReturnsEmptyFromEmptyString()
]]></system-out>
</testcase>
<testcase name="parseRecognizesDatabaseID()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesDatabaseID()]
display-name: parseRecognizesDatabaseID()
]]></system-out>
</testcase>
<testcase name="parseCommentAndEntryInOneLine()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCommentAndEntryInOneLine()]
display-name: parseCommentAndEntryInOneLine()
]]></system-out>
</testcase>
<testcase name="parseSavesOneNewlineAfterEntryInParsedSerialization()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseSavesOneNewlineAfterEntryInParsedSerialization()]
display-name: parseSavesOneNewlineAfterEntryInParsedSerialization()
]]></system-out>
</testcase>
<testcase name="parseAcceptsEntryWithAtSymbolInBrackets()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseAcceptsEntryWithAtSymbolInBrackets()]
display-name: parseAcceptsEntryWithAtSymbolInBrackets()
]]></system-out>
</testcase>
<testcase name="parseRecognizesPreambleWithConcatenation()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesPreambleWithConcatenation()]
display-name: parseRecognizesPreambleWithConcatenation()
]]></system-out>
</testcase>
<testcase name="parseIgnoresWhitespaceInEpilogueAfterEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresWhitespaceInEpilogueAfterEntry()]
display-name: parseIgnoresWhitespaceInEpilogueAfterEntry()
]]></system-out>
</testcase>
<testcase name="parseRecognizesFieldValuesInQuotationMarks()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesFieldValuesInQuotationMarks()]
display-name: parseRecognizesFieldValuesInQuotationMarks()
]]></system-out>
</testcase>
<testcase name="parsePreservesMultipleSpacesInNonWrappableField()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parsePreservesMultipleSpacesInNonWrappableField()]
display-name: parsePreservesMultipleSpacesInNonWrappableField()
]]></system-out>
</testcase>
<testcase name="parseYear()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseYear()]
display-name: parseYear()
]]></system-out>
</testcase>
<testcase name="parseTrimsWhitespaceInEpilogueAfterEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseTrimsWhitespaceInEpilogueAfterEntry()]
display-name: parseTrimsWhitespaceInEpilogueAfterEntry()
]]></system-out>
</testcase>
<testcase name="parseSavesNewlinesBeforeEntryInParsedSerialization()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseSavesNewlinesBeforeEntryInParsedSerialization()]
display-name: parseSavesNewlinesBeforeEntryInParsedSerialization()
]]></system-out>
</testcase>
<testcase name="parseRecognizesStringInParenthesis()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesStringInParenthesis()]
display-name: parseRecognizesStringInParenthesis()
]]></system-out>
</testcase>
<testcase name="parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()]
display-name: parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()
]]></system-out>
</testcase>
<testcase name="parseRecognizesFieldsWithEscapedQuotationMarks()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesFieldsWithEscapedQuotationMarks()]
display-name: parseRecognizesFieldsWithEscapedQuotationMarks()
]]></system-out>
</testcase>
<testcase name="parseReturnsEmptyListIfNoEntryExistent()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseReturnsEmptyListIfNoEntryExistent()]
display-name: parseReturnsEmptyListIfNoEntryExistent()
]]></system-out>
</testcase>
<testcase name="parseWithNullThrowsNullPointerException()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseWithNullThrowsNullPointerException()]
display-name: parseWithNullThrowsNullPointerException()
]]></system-out>
</testcase>
<testcase name="parseAddsEscapedOpenBracketToFieldValue()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseAddsEscapedOpenBracketToFieldValue()]
display-name: parseAddsEscapedOpenBracketToFieldValue()
]]></system-out>
</testcase>
<testcase name="integrationTestCustomKeyPattern()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestCustomKeyPattern()]
display-name: integrationTestCustomKeyPattern()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithUnknownType()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithUnknownType()]
display-name: parseRecognizesEntryWithUnknownType()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryPrecedingComment()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryPrecedingComment()]
display-name: parseRecognizesEntryPrecedingComment()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithAtInField()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithAtInField()]
display-name: parseRecognizesEntryWithAtInField()
]]></system-out>
</testcase>
<testcase name="parseSetsParsedSerialization()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseSetsParsedSerialization()]
display-name: parseSetsParsedSerialization()
]]></system-out>
</testcase>
<testcase name="parseRecognizesString()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesString()]
display-name: parseRecognizesString()
]]></system-out>
</testcase>
<testcase name="parseConvertsMultipleNewlinesToSpace()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseConvertsMultipleNewlinesToSpace()]
display-name: parseConvertsMultipleNewlinesToSpace()
]]></system-out>
</testcase>
<testcase name="parseDoesNotRecognizeDatabaseIDasUserComment()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseDoesNotRecognizeDatabaseIDasUserComment()]
display-name: parseDoesNotRecognizeDatabaseIDasUserComment()
]]></system-out>
</testcase>
<testcase name="parseFileHeaderAndPreambleWithoutNewLine()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseFileHeaderAndPreambleWithoutNewLine()]
display-name: parseFileHeaderAndPreambleWithoutNewLine()
]]></system-out>
</testcase>
<testcase name="integrationTestSaveActions()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestSaveActions()]
display-name: integrationTestSaveActions()
]]></system-out>
</testcase>
<testcase name="parseSavesNewlinesBetweenEntriesInParsedSerialization()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseSavesNewlinesBetweenEntriesInParsedSerialization()]
display-name: parseSavesNewlinesBetweenEntriesInParsedSerialization()
]]></system-out>
</testcase>
<testcase name="preserveEncodingPrefixInsideEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:preserveEncodingPrefixInsideEntry()]
display-name: preserveEncodingPrefixInsideEntry()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithVeryLongType()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithVeryLongType()]
display-name: parseRecognizesEntryWithVeryLongType()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithWhitespaceAtBegining()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithWhitespaceAtBegining()]
display-name: parseRecognizesEntryWithWhitespaceAtBegining()
]]></system-out>
</testcase>
<testcase name="parseReturnsEmptyListIfNoEntryRecognized()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseReturnsEmptyListIfNoEntryRecognized()]
display-name: parseReturnsEmptyListIfNoEntryRecognized()
]]></system-out>
</testcase>
<testcase name="parsePreservesNewlineInAbstractField()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parsePreservesNewlineInAbstractField()]
display-name: parsePreservesNewlineInAbstractField()
]]></system-out>
</testcase>
<testcase name="parseRecognizesMonthFieldsWithFollowingComma()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesMonthFieldsWithFollowingComma()]
display-name: parseRecognizesMonthFieldsWithFollowingComma()
]]></system-out>
</testcase>
<testcase name="parseQuotedEntries()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseQuotedEntries()]
display-name: parseQuotedEntries()
]]></system-out>
</testcase>
<testcase name="integrationTestContentSelectors()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestContentSelectors()]
display-name: integrationTestContentSelectors()
]]></system-out>
</testcase>
<testcase name="parseRecognizesBibtexKeyWithSpecialCharacters()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesBibtexKeyWithSpecialCharacters()]
display-name: parseRecognizesBibtexKeyWithSpecialCharacters()
]]></system-out>
</testcase>
<testcase name="fromStringReturnsEmptyListFromEmptyString()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:fromStringReturnsEmptyListFromEmptyString()]
display-name: fromStringReturnsEmptyListFromEmptyString()
]]></system-out>
</testcase>
<testcase name="parseIgnoresArbitraryContentAfterEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresArbitraryContentAfterEntry()]
display-name: parseIgnoresArbitraryContentAfterEntry()
]]></system-out>
</testcase>
<testcase name="parseIgnoresCommentsAfterEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresCommentsAfterEntry()]
display-name: parseIgnoresCommentsAfterEntry()
]]></system-out>
</testcase>
<testcase name="parseRecognizesPreambleWithWhitespace()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesPreambleWithWhitespace()]
display-name: parseRecognizesPreambleWithWhitespace()
]]></system-out>
</testcase>
<testcase name="integrationTestProtectedFlag()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestProtectedFlag()]
display-name: integrationTestProtectedFlag()
]]></system-out>
</testcase>
<testcase name="parseCombinesMultipleEditorFields()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCombinesMultipleEditorFields()]
display-name: parseCombinesMultipleEditorFields()
]]></system-out>
</testcase>
<testcase name="parseRecognizesPreambleInParenthesis()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesPreambleInParenthesis()]
display-name: parseRecognizesPreambleInParenthesis()
]]></system-out>
</testcase>
<testcase name="parseReallyUnknownType()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseReallyUnknownType()]
display-name: parseReallyUnknownType()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWhereLastFieldIsFinishedWithComma()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWhereLastFieldIsFinishedWithComma()]
display-name: parseRecognizesEntryWhereLastFieldIsFinishedWithComma()
]]></system-out>
</testcase>
<testcase name="parseConvertsTabToSpace()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseConvertsTabToSpace()]
display-name: parseConvertsTabToSpace()
]]></system-out>
</testcase>
<testcase name="parseRecognizesDuplicateBibtexKeys()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesDuplicateBibtexKeys()]
display-name: parseRecognizesDuplicateBibtexKeys()
]]></system-out>
</testcase>
<testcase name="parseCommentWithoutBracketsBeforeEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCommentWithoutBracketsBeforeEntry()]
display-name: parseCommentWithoutBracketsBeforeEntry()
]]></system-out>
</testcase>
<testcase name="parseNotWarnsAboutEntryWithoutBibtexKey()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseNotWarnsAboutEntryWithoutBibtexKey()]
display-name: parseNotWarnsAboutEntryWithoutBibtexKey()
]]></system-out>
</testcase>
<testcase name="parseRecognizesUppercasePreamble()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesUppercasePreamble()]
display-name: parseRecognizesUppercasePreamble()
]]></system-out>
</testcase>
<testcase name="parseIgnoresTextBeforeEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresTextBeforeEntry()]
display-name: parseIgnoresTextBeforeEntry()
]]></system-out>
</testcase>
<testcase name="parseSavesOneNewlineAfterStringInParsedSerialization()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseSavesOneNewlineAfterStringInParsedSerialization()]
display-name: parseSavesOneNewlineAfterStringInParsedSerialization()
]]></system-out>
</testcase>
<testcase name="integrationTestFileDirectories()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestFileDirectories()]
display-name: integrationTestFileDirectories()
]]></system-out>
</testcase>
<testcase name="parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()]
display-name: parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()
]]></system-out>
</testcase>
<testcase name="singleFromStringRecognizesEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:singleFromStringRecognizesEntry()]
display-name: singleFromStringRecognizesEntry()
]]></system-out>
</testcase>
<testcase name="parseRecognizesMultipleStrings()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesMultipleStrings()]
display-name: parseRecognizesMultipleStrings()
]]></system-out>
</testcase>
<testcase name="parseCommentContainingEntriesAndAtSymbols()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCommentContainingEntriesAndAtSymbols()]
display-name: parseCommentContainingEntriesAndAtSymbols()
]]></system-out>
</testcase>
<testcase name="singleFromStringReturnsEmptyIfNoEntryRecognized()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:singleFromStringReturnsEmptyIfNoEntryRecognized()]
display-name: singleFromStringReturnsEmptyIfNoEntryRecognized()
]]></system-out>
</testcase>
<testcase name="parseRemovesEncodingLineInParsedSerialization()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRemovesEncodingLineInParsedSerialization()]
display-name: parseRemovesEncodingLineInParsedSerialization()
]]></system-out>
</testcase>
<testcase name="parseRecognizesAbsoluteFile()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesAbsoluteFile()]
display-name: parseRecognizesAbsoluteFile()
]]></system-out>
</testcase>
<testcase name="parseCombinesMultipleKeywordsFields()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCombinesMultipleKeywordsFields()]
display-name: parseCombinesMultipleKeywordsFields()
]]></system-out>
</testcase>
<testcase name="parseWarnsAboutUnmatchedContentInEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseWarnsAboutUnmatchedContentInEntry()]
display-name: parseWarnsAboutUnmatchedContentInEntry()
]]></system-out>
</testcase>
<testcase name="parseWarnsAboutUnmatchedContentInEntryWithoutComma()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseWarnsAboutUnmatchedContentInEntryWithoutComma()]
display-name: parseWarnsAboutUnmatchedContentInEntryWithoutComma()
]]></system-out>
</testcase>
<testcase name="parseRecognizesMultipleEntries()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesMultipleEntries()]
display-name: parseRecognizesMultipleEntries()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithAtSymbolInQuotationMarks()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithAtSymbolInQuotationMarks()]
display-name: parseRecognizesEntryWithAtSymbolInQuotationMarks()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithNewlines()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithNewlines()]
display-name: parseRecognizesEntryWithNewlines()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryInParenthesis()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryInParenthesis()]
display-name: parseRecognizesEntryInParenthesis()
]]></system-out>
</testcase>
<testcase name="parseHandlesAccentsCorrectly()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseHandlesAccentsCorrectly()]
display-name: parseHandlesAccentsCorrectly()
]]></system-out>
</testcase>
<testcase name="parseEmptyPreambleLeadsToEmpty()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseEmptyPreambleLeadsToEmpty()]
display-name: parseEmptyPreambleLeadsToEmpty()
]]></system-out>
</testcase>
<testcase name="fromStringReturnsEmptyListIfNoEntryRecognized()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:fromStringReturnsEmptyListIfNoEntryRecognized()]
display-name: fromStringReturnsEmptyListIfNoEntryRecognized()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryOnlyWithKey()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryOnlyWithKey()]
display-name: parseRecognizesEntryOnlyWithKey()
]]></system-out>
</testcase>
<testcase name="parseCommentWithoutBrackets()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCommentWithoutBrackets()]
display-name: parseCommentWithoutBrackets()
]]></system-out>
</testcase>
<testcase name="parseRecognizesStringWithWhitespace()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesStringWithWhitespace()]
display-name: parseRecognizesStringWithWhitespace()
]]></system-out>
</testcase>
<testcase name="parseReturnsEntriesInSameOrder()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseReturnsEntriesInSameOrder()]
display-name: parseReturnsEntriesInSameOrder()
]]></system-out>
</testcase>
<testcase name="parseCombinesMultipleAuthorFields()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseCombinesMultipleAuthorFields()]
display-name: parseCombinesMultipleAuthorFields()
]]></system-out>
</testcase>
<testcase name="parseRecognizesMultipleEntriesOnSameLine()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesMultipleEntriesOnSameLine()]
display-name: parseRecognizesMultipleEntriesOnSameLine()
]]></system-out>
</testcase>
<testcase name="parseRecognizesFormatedEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesFormatedEntry()]
display-name: parseRecognizesFormatedEntry()
]]></system-out>
</testcase>
<testcase name="parseRecognizesSaveActionsAfterEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesSaveActionsAfterEntry()]
display-name: parseRecognizesSaveActionsAfterEntry()
]]></system-out>
</testcase>
<testcase name="parseIgnoresUpercaseComments()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresUpercaseComments()]
display-name: parseIgnoresUpercaseComments()
]]></system-out>
</testcase>
<testcase name="parseIgnoresText()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresText()]
display-name: parseIgnoresText()
]]></system-out>
</testcase>
<testcase name="parseIgnoresWhitespaceInEpilogue()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresWhitespaceInEpilogue()]
display-name: parseIgnoresWhitespaceInEpilogue()
]]></system-out>
</testcase>
<testcase name="parseRecognizesUppercaseFields()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesUppercaseFields()]
display-name: parseRecognizesUppercaseFields()
]]></system-out>
</testcase>
<testcase name="parseYearWithMonthNumber()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseYearWithMonthNumber()]
display-name: parseYearWithMonthNumber()
]]></system-out>
</testcase>
<testcase name="parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()]
display-name: parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()
]]></system-out>
</testcase>
<testcase name="parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()]
display-name: parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()
]]></system-out>
</testcase>
<testcase name="parseIgnoresTextAfterEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresTextAfterEntry()]
display-name: parseIgnoresTextAfterEntry()
]]></system-out>
</testcase>
<testcase name="parseIgnoresCommentsBeforeEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresCommentsBeforeEntry()]
display-name: parseIgnoresCommentsBeforeEntry()
]]></system-out>
</testcase>
<testcase name="parseConvertsMultipleTabsToSpace()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseConvertsMultipleTabsToSpace()]
display-name: parseConvertsMultipleTabsToSpace()
]]></system-out>
</testcase>
<testcase name="parseRecognizesNumbersWithoutBracketsOrQuotationMarks()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesNumbersWithoutBracketsOrQuotationMarks()]
display-name: parseRecognizesNumbersWithoutBracketsOrQuotationMarks()
]]></system-out>
</testcase>
<testcase name="parseBracketedComment()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseBracketedComment()]
display-name: parseBracketedComment()
]]></system-out>
</testcase>
<testcase name="parseYearWithMonthString()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseYearWithMonthString()]
display-name: parseYearWithMonthString()
]]></system-out>
</testcase>
<testcase name="fromStringRecognizesEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:fromStringRecognizesEntry()]
display-name: fromStringRecognizesEntry()
]]></system-out>
</testcase>
<testcase name="parseOtherTypeTest()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseOtherTypeTest()]
display-name: parseOtherTypeTest()
]]></system-out>
</testcase>
<testcase name="parseRecognizesHeaderButIgnoresEncoding()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesHeaderButIgnoresEncoding()]
display-name: parseRecognizesHeaderButIgnoresEncoding()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntry()]
display-name: parseRecognizesEntry()
]]></system-out>
</testcase>
<testcase name="parsePrecedingComment()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parsePrecedingComment()]
display-name: parsePrecedingComment()
]]></system-out>
</testcase>
<testcase name="singleFromStringRecognizesEntryInMultiple()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:singleFromStringRecognizesEntryInMultiple()]
display-name: singleFromStringRecognizesEntryInMultiple()
]]></system-out>
</testcase>
<testcase name="parseAddsEscapedClosingBracketToFieldValue()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseAddsEscapedClosingBracketToFieldValue()]
display-name: parseAddsEscapedClosingBracketToFieldValue()
]]></system-out>
</testcase>
<testcase name="parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()]
display-name: parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()
]]></system-out>
</testcase>
<testcase name="parseRegularCommentBeforeEntry()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRegularCommentBeforeEntry()]
display-name: parseRegularCommentBeforeEntry()
]]></system-out>
</testcase>
<testcase name="parseRecognizesPreamble()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesPreamble()]
display-name: parseRecognizesPreamble()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithBigNumbers()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithBigNumbers()]
display-name: parseRecognizesEntryWithBigNumbers()
]]></system-out>
</testcase>
<testcase name="parseRecognizesEntryWithWhitespace()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesEntryWithWhitespace()]
display-name: parseRecognizesEntryWithWhitespace()
]]></system-out>
</testcase>
<testcase name="integrationTestCustomEntryType()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestCustomEntryType()]
display-name: integrationTestCustomEntryType()
]]></system-out>
</testcase>
<testcase name="parseRecognizesDateFieldWithConcatenation()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseRecognizesDateFieldWithConcatenation()]
display-name: parseRecognizesDateFieldWithConcatenation()
]]></system-out>
</testcase>
<testcase name="parseSavesEntryInParsedSerialization()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseSavesEntryInParsedSerialization()]
display-name: parseSavesEntryInParsedSerialization()
]]></system-out>
</testcase>
<testcase name="parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()]
display-name: parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()
]]></system-out>
</testcase>
<testcase name="integrationTestSaveOrderConfig()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:integrationTestSaveOrderConfig()]
display-name: integrationTestSaveOrderConfig()
]]></system-out>
</testcase>
<testcase name="parseConvertsNewlineToSpace()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseConvertsNewlineToSpace()]
display-name: parseConvertsNewlineToSpace()
]]></system-out>
</testcase>
<testcase name="parseEmptyFileLeadsToPreamble()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parseEmptyFileLeadsToPreamble()]
display-name: parseEmptyFileLeadsToPreamble()
]]></system-out>
</testcase>
<testcase name="parsePreambleAndEntryWithoutNewLine()" classname="org.jabref.logic.importer.fileformat.BibtexParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BibtexParserTest]/[method:parsePreambleAndEntryWithoutNewLine()]
display-name: parsePreambleAndEntryWithoutNewLine()
]]></system-out>
</testcase>
<testcase name="testGetCliId()" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[method:testGetCliId()]
display-name: testGetCliId()
]]></system-out>
</testcase>
<testcase name="testGetExtension()" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[method:testGetExtension()]
display-name: testGetExtension()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testImportEntries(String)[1]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testImportEntries(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] RepecNepImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testImportEntries(String)[2]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testImportEntries(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RepecNepImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testImportEntries(String)[3]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testImportEntries(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] RepecNepImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[1]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] RepecNepImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[2]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RepecNepImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[3]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] RepecNepImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[1]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] AutosavedSharedDatabase.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[2]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RisImporterTest5b.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[3]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] BibTeXMLImporterTestTechReport.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[4]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] OvidImporterTestBib6.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[5]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] CopacImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[6]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] Endnote.pattern.no_enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[7]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#7]
display-name: [7] BibTeXMLImporterTestConference.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[8]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#8]
display-name: [8] MsBibImporterTest4.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[9]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#9]
display-name: [9] NbibImporterTest.nbib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[10]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#10]
display-name: [10] OvidImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[11]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#11]
display-name: [11] BiblioscapeImporterTestJournalArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[12]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#12]
display-name: [12] MODSImporterTestMinimal.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[13]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#13]
display-name: [13] MedlinePlainImporterTestMultiAbstract.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[14]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#14]
display-name: [14] BibTeXMLImporterTestMasterThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[15]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#15]
display-name: [15] MsBibImporterMsBibFieldsTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[16]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#16]
display-name: [16] BibtexImporter.examples.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[17]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#17]
display-name: [17] RisImporterTest7.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[18]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#18]
display-name: [18] BiblioscapeImporterTestUnknownFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[19]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#19]
display-name: [19] MsBibImporterTest3.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[20]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#20]
display-name: [20] MedlinePlainImporterTestInvalidFormat.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[21]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#21]
display-name: [21] MedlineImporterTestKeywordSingleEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[22]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#22]
display-name: [22] Endnote.pattern.A.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[23]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#23]
display-name: [23] MedlineImporterTestPubmedBook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[24]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#24]
display-name: [24] BibTeXMLImporterTestInProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[25]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#25]
display-name: [25] BibTeXMLImporterTestManual.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[26]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#26]
display-name: [26] encrypted.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[27]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#27]
display-name: [27] BibTeXMLImporterTestInBook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[28]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#28]
display-name: [28] MedlineImporterTestArticleNoISSN.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[29]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#29]
display-name: [29] BibTeXMLImporterTestTechReport.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[30]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#30]
display-name: [30] BibTeXMLImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[31]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#31]
display-name: [31] MsBibImporterTitleTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[32]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#32]
display-name: [32] MsBibImporterTest6.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[33]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#33]
display-name: [33] BiblioscapeImporterTestKeywords.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[34]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#34]
display-name: [34] MsBibImporterInvalidMonth.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[35]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#35]
display-name: [35] OvidImporterTestBib3.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[36]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#36]
display-name: [36] MsBibExportFormatUmlauts.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[37]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#37]
display-name: [37] MODSImporterTestAllFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[38]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#38]
display-name: [38] SilverPlatterImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[39]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#39]
display-name: [39] OvidImporterTest7.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[40]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#40]
display-name: [40] MODSImporterTestModsCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[41]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#41]
display-name: [41] MsBibImporterMsBibFieldsTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[42]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#42]
display-name: [42] MedlinePlainImporterTestCompleteEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[43]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#43]
display-name: [43] BibTeXMLImporterTestProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[44]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#44]
display-name: [44] BiblioscapeImporterTestComments.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[45]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#45]
display-name: [45] BibTeXMLImporterTestUnpublished.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[46]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#46]
display-name: [46] MsBibImporterTestTranslator.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[47]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#47]
display-name: [47] BibTeXMLImporterTestManual.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[48]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#48]
display-name: [48] OvidImporterTest2Invalid.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[49]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#49]
display-name: [49] MsBibImporterTest7.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[50]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#50]
display-name: [50] RisImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[51]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#51]
display-name: [51] EndnoteXmlImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[52]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#52]
display-name: [52] OvidImporterTest6.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[53]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#53]
display-name: [53] annotated.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[54]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#54]
display-name: [54] RisImporterTestScopus.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[55]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#55]
display-name: [55] BibTeXMLImporterTestIncollectionWithoutChapter.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[56]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#56]
display-name: [56] MedlineImporterTestMinimalEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[57]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#57]
display-name: [57] IsiImporterTest2.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[58]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#58]
display-name: [58] RisImporterTestScopus.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[59]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#59]
display-name: [59] RisImporterCorrupted.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[60]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#60]
display-name: [60] MsBibImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[61]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#61]
display-name: [61] MsBibLocationTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[62]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#62]
display-name: [62] MsBibImporterInvalidMonth.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[63]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#63]
display-name: [63] MsBibImporterTest5.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[64]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#64]
display-name: [64] MsBibLCID.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[65]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#65]
display-name: [65] EndnoteXmlImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[66]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#66]
display-name: [66] OvidImporterTest5.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[67]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#67]
display-name: [67] RisImporterTestDoiAndJournalTitle.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[68]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#68]
display-name: [68] Endnote.pattern.E.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[69]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#69]
display-name: [69] MedlineImporterTestMinimalEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[70]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#70]
display-name: [70] MsBibImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[71]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#71]
display-name: [71] BiblioscapeImporterTestCorrupt.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[72]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#72]
display-name: [72] OvidImporterTest4.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[73]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#73]
display-name: [73] MedlinePlainImporterTestMultiTitle.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[74]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#74]
display-name: [74] InspecImportTestFalse.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[75]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#75]
display-name: [75] SilverPlatterImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[76]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#76]
display-name: [76] BibTeXMLImporterTestConference.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[77]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#77]
display-name: [77] LNCS-minimal.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[78]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#78]
display-name: [78] OvidImporterTestBib7.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[79]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#79]
display-name: [79] MsBibImporterTest4.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[80]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#80]
display-name: [80] BiblioscapeImporterTestArticleST.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[81]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#81]
display-name: [81] RisImporterTest6.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[82]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#82]
display-name: [82] IsiImporterTestWOS.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[83]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#83]
display-name: [83] MODSImporterTestMinimal.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[84]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#84]
display-name: [84] BiblioscapeImporterTestUnknownFields.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[85]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#85]
display-name: [85] BibTeXMLImporterTestMisc.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[86]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#86]
display-name: [86] MedlinePlainImporterStringOutOfBounds.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[87]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#87]
display-name: [87] RisImporterTest4b.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[88]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#88]
display-name: [88] OvidImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[89]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#89]
display-name: [89] emptyFile.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[90]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#90]
display-name: [90] IEEEImport1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[91]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#91]
display-name: [91] BibTeXMLImporterTestEmpty.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[92]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#92]
display-name: [92] EndnoteXmlImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[93]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#93]
display-name: [93] BibTeXMLImporterTestArticleWithoutID.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[94]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#94]
display-name: [94] BibTeXMLImporterTestInProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[95]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#95]
display-name: [95] BiblioscapeImporterTestInbook.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[96]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#96]
display-name: [96] MedlinePlainImporterStringOutOfBounds.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[97]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#97]
display-name: [97] MsBibMultiLocationAddressTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[98]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#98]
display-name: [98] IsiImporterTest1.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[99]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#99]
display-name: [99] MedlinePlainImporterTestDOI.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[100]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#100]
display-name: [100] MedlinePlainImporterTestCompleteEntry.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[101]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#101]
display-name: [101] MsBibImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[102]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#102]
display-name: [102] RisImporterTest3.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[103]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#103]
display-name: [103] MODSImporterTestModsCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[104]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#104]
display-name: [104] EndnoteXmlImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[105]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#105]
display-name: [105] BibTeXMLImporterTestMisc.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[106]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#106]
display-name: [106] BiblioscapeImporterTestOptionalFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[107]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#107]
display-name: [107] RisImporterTestDoiAndJournalTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[108]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#108]
display-name: [108] MsBibShorttitle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[109]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#109]
display-name: [109] BibTeXMLImporterTestInvalidInbook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[110]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#110]
display-name: [110] BiblioscapeImporterTestKeywords.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[111]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#111]
display-name: [111] RisImporterTest1.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[112]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#112]
display-name: [112] BiblioscapeImporterTestComments.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[113]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#113]
display-name: [113] RisImporterTest5a.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[114]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#114]
display-name: [114] InspecImportTest.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[115]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#115]
display-name: [115] BibTeXMLImporterTestBook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[116]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#116]
display-name: [116] MsBibPatent.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[117]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#117]
display-name: [117] MedlinePlainImporterTestMultipleEntries.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[118]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#118]
display-name: [118] MODSImporterTestMods.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[119]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#119]
display-name: [119] SilverPlatterImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[120]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#120]
display-name: [120] BibTeXMLImporterTestBooklet.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[121]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#121]
display-name: [121] RisImporterTest4a.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[122]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#122]
display-name: [122] RisImporterTest4b.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[123]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#123]
display-name: [123] BiblioscapeImporterTestUnknownType.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[124]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#124]
display-name: [124] MedlineImporterTestMalformedEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[125]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#125]
display-name: [125] Endnote.book.example.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[126]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#126]
display-name: [126] MedlineImporterTestKeywordSingleEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[127]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#127]
display-name: [127] BibTeXMLImporterTestInCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[128]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#128]
display-name: [128] BiblioscapeImporterTestInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[129]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#129]
display-name: [129] MedlineImporterTestArticleID.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[130]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#130]
display-name: [130] CopacImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[131]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#131]
display-name: [131] RisImporterTest5b.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[132]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#132]
display-name: [132] CopacImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[133]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#133]
display-name: [133] MsBibPatent.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[134]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#134]
display-name: [134] BiblioscapeImporterTestUnknownType.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[135]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#135]
display-name: [135] IsiImporterTestMedline.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[136]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#136]
display-name: [136] MODSImporterTestAllFields.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[137]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#137]
display-name: [137] MsBibLocationTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[138]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#138]
display-name: [138] CopacImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[139]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#139]
display-name: [139] BiblioscapeImporterTestOptionalFields.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[140]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#140]
display-name: [140] MedlinePlainImporterTestDOI.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[141]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#141]
display-name: [141] InspecImportTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[142]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#142]
display-name: [142] RisImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[143]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#143]
display-name: [143] BibTeXMLImporterTestEmpty.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[144]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#144]
display-name: [144] LNCS-minimal-protected.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[145]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#145]
display-name: [145] MedlinePlainImporterTestInproceeding.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[146]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#146]
display-name: [146] BiblioscapeImporterTestJournalArticle.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[147]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#147]
display-name: [147] MedlineImporterTestArticleID.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[148]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#148]
display-name: [148] BibTeXMLImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[149]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#149]
display-name: [149] BibTeXMLImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[150]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#150]
display-name: [150] MsBibImporterTestTranslator.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[151]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#151]
display-name: [151] MsBibShorttitle.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[152]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#152]
display-name: [152] BibTeXMLImporterTestUnpublished.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[153]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#153]
display-name: [153] MODSImporterTestMods.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[154]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#154]
display-name: [154] BibTeXMLImporterTestInvalidInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[155]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#155]
display-name: [155] BibTeXMLImporterTestBooklet.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[156]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#156]
display-name: [156] MsBibImporterTest5.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[157]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#157]
display-name: [157] SilverPlatterImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[158]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#158]
display-name: [158] LNCS-minimal.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[159]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#159]
display-name: [159] Empty.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[160]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#160]
display-name: [160] MedlineImporterTestPubmedBook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[161]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#161]
display-name: [161] MsBibExportFormatUmlauts.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[162]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#162]
display-name: [162] MedlinePlainImporterTestInproceeding.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[163]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#163]
display-name: [163] IsiImporterTestEmpty.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[164]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#164]
display-name: [164] BiblioscapeImporterTestArticleST.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[165]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#165]
display-name: [165] MedlinePlainImporterTestMultiTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[166]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#166]
display-name: [166] RisImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[167]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#167]
display-name: [167] Endnote.entries.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[168]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#168]
display-name: [168] RisImporterTestScience.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[169]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#169]
display-name: [169] empty.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[170]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#170]
display-name: [170] MedlineImporterTestNbib.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[171]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#171]
display-name: [171] BibTeXMLImporterTestPhdThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[172]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#172]
display-name: [172] MsBibMultiLocationAddressTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[173]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#173]
display-name: [173] LNCS-minimal-protected.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[174]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#174]
display-name: [174] OvidImporterTestBib5.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[175]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#175]
display-name: [175] MedlineImporterTestBookArticleSet.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[176]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#176]
display-name: [176] RisImporterTest4a.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[177]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#177]
display-name: [177] BibTeXMLImporterTestMasterThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[178]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#178]
display-name: [178] RisImporterTest4c.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[179]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#179]
display-name: [179] MedlineImporterTestBookArticleSet.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[180]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#180]
display-name: [180] EmptyMsBib_Test.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[181]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#181]
display-name: [181] BibTeXMLImporterTestBook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[182]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#182]
display-name: [182] RisImporterTest5a.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[183]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#183]
display-name: [183] MedlineImporterTestNbib.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[184]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#184]
display-name: [184] BibTeXMLImporterTestInbookLessFields.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[185]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#185]
display-name: [185] BibTeXMLImporterTestInBook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[186]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#186]
display-name: [186] NbibImporterTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[187]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#187]
display-name: [187] BibTeXMLImporterTestInCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[188]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#188]
display-name: [188] BibTeXMLImporterTestArticleWithoutID.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[189]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#189]
display-name: [189] RisImporterTest4c.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[190]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#190]
display-name: [190] MsBibImporterTitleTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[191]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#191]
display-name: [191] MedlineImporterTestArticleNoISSN.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[192]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#192]
display-name: [192] IsiImporterTestInspec.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[193]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#193]
display-name: [193] BibTeXMLImporterTestPhdThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[194]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#194]
display-name: [194] MedlinePlainImporterTestMultiAbstract.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[195]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#195]
display-name: [195] BibTeXMLImporterTestInbookLessFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[196]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#196]
display-name: [196] RisImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[197]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#197]
display-name: [197] MsBibLCID.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[198]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#198]
display-name: [198] BibTeXMLImporterTestProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[199]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#199]
display-name: [199] BibTeXMLImporterTestIncollectionWithoutChapter.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[200]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#200]
display-name: [200] RisImporterTestScience.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[201]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#201]
display-name: [201] BibTeXMLImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[202]" classname="org.jabref.logic.importer.fileformat.RepecNepImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RepecNepImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#202]
display-name: [202] OvidImporterTestBib4.bib
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testImportEntriesBookExample()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testImportEntriesBookExample()]
display-name: testImportEntriesBookExample()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testIsRecognizedFormat()]
display-name: testIsRecognizedFormat()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormatReject()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testIsRecognizedFormatReject()]
display-name: testIsRecognizedFormatReject()
]]></system-out>
</testcase>
<testcase name="testImportEntries0()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0.044">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testImportEntries0()]
display-name: testImportEntries0()
]]></system-out>
</testcase>
<testcase name="testImportEntries1()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testImportEntries1()]
display-name: testImportEntries1()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.EndnoteImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.EndnoteImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testEmptyFileImport()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.031">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testEmptyFileImport()]
display-name: testEmptyFileImport()
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testMultiLineComments()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testMultiLineComments()]
display-name: testMultiLineComments()
]]></system-out>
</testcase>
<testcase name="testAllArticleTypes()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testAllArticleTypes()]
display-name: testAllArticleTypes()
]]></system-out>
</testcase>
<testcase name="testWithMultipleEntries()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.02">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testWithMultipleEntries()]
display-name: testWithMultipleEntries()
]]></system-out>
</testcase>
<testcase name="testInvalidFormat()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testInvalidFormat()]
display-name: testInvalidFormat()
]]></system-out>
</testcase>
<testcase name="testImportSingleEntriesInSingleFiles()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.017">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testImportSingleEntriesInSingleFiles()]
display-name: testImportSingleEntriesInSingleFiles()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testNullReader()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testNullReader()]
display-name: testNullReader()
]]></system-out>
</testcase>
<testcase name="testKeyWords()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testKeyWords()]
display-name: testKeyWords()
]]></system-out>
</testcase>
<testcase name="doesNotRecognizeEmptyFiles()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:doesNotRecognizeEmptyFiles()]
display-name: doesNotRecognizeEmptyFiles()
]]></system-out>
</testcase>
<testcase name="testImportMultipleEntriesInSingleFile()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.115">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testImportMultipleEntriesInSingleFile()]
display-name: testImportMultipleEntriesInSingleFile()
]]></system-out>
</testcase>
<testcase name="testWithNbibFile()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testWithNbibFile()]
display-name: testWithNbibFile()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[1]" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] MedlinePlainImporterTestMultiAbstract.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[2]" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] MedlinePlainImporterTestMultiTitle.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[3]" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] MedlinePlainImporterTestDOI.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[4]" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] MedlinePlainImporterTestCompleteEntry.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[5]" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] MedlinePlainImporterTestMultipleEntries.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[6]" classname="org.jabref.logic.importer.fileformat.MedlinePlainImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MedlinePlainImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] MedlinePlainImporterTestInproceeding.txt
]]></system-out>
</testcase>
<testcase name="testGetCLIId()" classname="org.jabref.logic.importer.fileformat.RISImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RISImporterTest]/[method:testGetCLIId()]
display-name: testGetCLIId()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.RISImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RISImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.RISImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RISImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.RISImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RISImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testIfNotRecognizedFormat()" classname="org.jabref.logic.importer.fileformat.RISImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.RISImporterTest]/[method:testIfNotRecognizedFormat()]
display-name: testIfNotRecognizedFormat()
]]></system-out>
</testcase>
<testcase name="testCompareToSmaller()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testCompareToSmaller()]
display-name: testCompareToSmaller()
]]></system-out>
</testcase>
<testcase name="testGetId()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testGetId()]
display-name: testGetId()
]]></system-out>
</testcase>
<testcase name="testToString()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testToString()]
display-name: testToString()
]]></system-out>
</testcase>
<testcase name="testClassicConstructor()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testClassicConstructor()]
display-name: testClassicConstructor()
]]></system-out>
</testcase>
<testcase name="equalsIsBasedOnName()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:equalsIsBasedOnName()]
display-name: equalsIsBasedOnName()
]]></system-out>
</testcase>
<testcase name="testGetName()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testGetName()]
display-name: testGetName()
]]></system-out>
</testcase>
<testcase name="equalsWithSameReference()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:equalsWithSameReference()]
display-name: equalsWithSameReference()
]]></system-out>
</testcase>
<testcase name="testGetBasePath()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testGetBasePath()]
display-name: testGetBasePath()
]]></system-out>
</testcase>
<testcase name="testCompareToEven()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testCompareToEven()]
display-name: testCompareToEven()
]]></system-out>
</testcase>
<testcase name="testCompareToGreater()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testCompareToGreater()]
display-name: testCompareToGreater()
]]></system-out>
</testcase>
<testcase name="testGetClassName()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testGetClassName()]
display-name: testGetClassName()
]]></system-out>
</testcase>
<testcase name="testGetAsStringList()" classname="org.jabref.logic.importer.fileformat.CustomImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.CustomImporterTest]/[method:testGetAsStringList()]
display-name: testGetAsStringList()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testImportEntries(String)[1]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testImportEntries(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] SilverPlatterImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testImportEntries(String)[2]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testImportEntries(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] SilverPlatterImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[1]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] SilverPlatterImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsRecognizedFormat(String)[2]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsRecognizedFormat(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] SilverPlatterImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[1]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#1]
display-name: [1] AutosavedSharedDatabase.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[2]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#2]
display-name: [2] RisImporterTest5b.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[3]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#3]
display-name: [3] BibTeXMLImporterTestTechReport.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[4]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#4]
display-name: [4] OvidImporterTestBib6.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[5]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#5]
display-name: [5] CopacImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[6]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#6]
display-name: [6] Endnote.pattern.no_enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[7]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#7]
display-name: [7] BibTeXMLImporterTestConference.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[8]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#8]
display-name: [8] MsBibImporterTest4.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[9]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#9]
display-name: [9] NbibImporterTest.nbib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[10]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#10]
display-name: [10] OvidImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[11]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#11]
display-name: [11] BiblioscapeImporterTestJournalArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[12]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#12]
display-name: [12] MODSImporterTestMinimal.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[13]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#13]
display-name: [13] MedlinePlainImporterTestMultiAbstract.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[14]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#14]
display-name: [14] BibTeXMLImporterTestMasterThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[15]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#15]
display-name: [15] MsBibImporterMsBibFieldsTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[16]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#16]
display-name: [16] BibtexImporter.examples.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[17]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#17]
display-name: [17] RisImporterTest7.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[18]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#18]
display-name: [18] BiblioscapeImporterTestUnknownFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[19]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#19]
display-name: [19] MsBibImporterTest3.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[20]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#20]
display-name: [20] MedlinePlainImporterTestInvalidFormat.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[21]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#21]
display-name: [21] MedlineImporterTestKeywordSingleEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[22]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#22]
display-name: [22] Endnote.pattern.A.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[23]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#23]
display-name: [23] MedlineImporterTestPubmedBook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[24]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#24]
display-name: [24] BibTeXMLImporterTestInProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[25]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#25]
display-name: [25] BibTeXMLImporterTestManual.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[26]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#26]
display-name: [26] encrypted.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[27]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#27]
display-name: [27] BibTeXMLImporterTestInBook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[28]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#28]
display-name: [28] MedlineImporterTestArticleNoISSN.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[29]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#29]
display-name: [29] BibTeXMLImporterTestTechReport.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[30]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#30]
display-name: [30] BibTeXMLImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[31]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#31]
display-name: [31] MsBibImporterTitleTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[32]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#32]
display-name: [32] MsBibImporterTest6.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[33]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#33]
display-name: [33] BiblioscapeImporterTestKeywords.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[34]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#34]
display-name: [34] MsBibImporterInvalidMonth.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[35]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#35]
display-name: [35] OvidImporterTestBib3.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[36]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#36]
display-name: [36] MsBibExportFormatUmlauts.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[37]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#37]
display-name: [37] MODSImporterTestAllFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[38]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#38]
display-name: [38] OvidImporterTest7.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[39]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#39]
display-name: [39] MODSImporterTestModsCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[40]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#40]
display-name: [40] MsBibImporterMsBibFieldsTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[41]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#41]
display-name: [41] MedlinePlainImporterTestCompleteEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[42]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#42]
display-name: [42] BibTeXMLImporterTestProceedings.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[43]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#43]
display-name: [43] BiblioscapeImporterTestComments.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[44]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#44]
display-name: [44] BibTeXMLImporterTestUnpublished.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[45]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#45]
display-name: [45] MsBibImporterTestTranslator.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[46]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#46]
display-name: [46] BibTeXMLImporterTestManual.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[47]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#47]
display-name: [47] OvidImporterTest2Invalid.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[48]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#48]
display-name: [48] MsBibImporterTest7.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[49]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#49]
display-name: [49] RisImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[50]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#50]
display-name: [50] EndnoteXmlImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[51]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#51]
display-name: [51] OvidImporterTest6.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[52]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#52]
display-name: [52] annotated.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[53]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#53]
display-name: [53] RisImporterTestScopus.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[54]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#54]
display-name: [54] BibTeXMLImporterTestIncollectionWithoutChapter.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[55]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#55]
display-name: [55] MedlineImporterTestMinimalEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[56]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#56]
display-name: [56] RepecNepImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[57]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#57]
display-name: [57] IsiImporterTest2.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[58]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#58]
display-name: [58] RisImporterTestScopus.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[59]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#59]
display-name: [59] RepecNepImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[60]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#60]
display-name: [60] RisImporterCorrupted.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[61]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#61]
display-name: [61] MsBibImporterTest7.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[62]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#62]
display-name: [62] MsBibLocationTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[63]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#63]
display-name: [63] MsBibImporterInvalidMonth.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[64]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#64]
display-name: [64] MsBibImporterTest5.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[65]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#65]
display-name: [65] MsBibLCID.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[66]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#66]
display-name: [66] EndnoteXmlImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[67]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#67]
display-name: [67] OvidImporterTest5.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[68]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#68]
display-name: [68] RisImporterTestDoiAndJournalTitle.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[69]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#69]
display-name: [69] Endnote.pattern.E.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[70]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#70]
display-name: [70] MedlineImporterTestMinimalEntry.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[71]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#71]
display-name: [71] MsBibImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[72]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#72]
display-name: [72] BiblioscapeImporterTestCorrupt.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[73]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#73]
display-name: [73] OvidImporterTest4.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[74]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#74]
display-name: [74] MedlinePlainImporterTestMultiTitle.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[75]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#75]
display-name: [75] InspecImportTestFalse.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[76]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#76]
display-name: [76] BibTeXMLImporterTestConference.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[77]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#77]
display-name: [77] LNCS-minimal.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[78]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#78]
display-name: [78] OvidImporterTestBib7.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[79]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#79]
display-name: [79] MsBibImporterTest4.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[80]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#80]
display-name: [80] BiblioscapeImporterTestArticleST.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[81]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#81]
display-name: [81] RisImporterTest6.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[82]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#82]
display-name: [82] IsiImporterTestWOS.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[83]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#83]
display-name: [83] MODSImporterTestMinimal.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[84]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#84]
display-name: [84] BiblioscapeImporterTestUnknownFields.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[85]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#85]
display-name: [85] RepecNepImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[86]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#86]
display-name: [86] BibTeXMLImporterTestMisc.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[87]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#87]
display-name: [87] MedlinePlainImporterStringOutOfBounds.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[88]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#88]
display-name: [88] RisImporterTest4b.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[89]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#89]
display-name: [89] OvidImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[90]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#90]
display-name: [90] emptyFile.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[91]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#91]
display-name: [91] IEEEImport1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[92]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#92]
display-name: [92] BibTeXMLImporterTestEmpty.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[93]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#93]
display-name: [93] EndnoteXmlImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[94]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#94]
display-name: [94] BibTeXMLImporterTestArticleWithoutID.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[95]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#95]
display-name: [95] BibTeXMLImporterTestInProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[96]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#96]
display-name: [96] BiblioscapeImporterTestInbook.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[97]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#97]
display-name: [97] MedlinePlainImporterStringOutOfBounds.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[98]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#98]
display-name: [98] MsBibMultiLocationAddressTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[99]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#99]
display-name: [99] IsiImporterTest1.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[100]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#100]
display-name: [100] MedlinePlainImporterTestDOI.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[101]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#101]
display-name: [101] MedlinePlainImporterTestCompleteEntry.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[102]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#102]
display-name: [102] MsBibImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[103]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#103]
display-name: [103] RisImporterTest3.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[104]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#104]
display-name: [104] MODSImporterTestModsCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[105]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#105]
display-name: [105] EndnoteXmlImporterTestArticle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[106]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#106]
display-name: [106] BibTeXMLImporterTestMisc.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[107]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#107]
display-name: [107] RepecNepImporterTest3.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[108]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#108]
display-name: [108] BiblioscapeImporterTestOptionalFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[109]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#109]
display-name: [109] RisImporterTestDoiAndJournalTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[110]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#110]
display-name: [110] MsBibShorttitle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[111]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#111]
display-name: [111] BibTeXMLImporterTestInvalidInbook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[112]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#112]
display-name: [112] BiblioscapeImporterTestKeywords.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[113]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#113]
display-name: [113] RisImporterTest1.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[114]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#114]
display-name: [114] BiblioscapeImporterTestComments.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[115]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#115]
display-name: [115] RisImporterTest5a.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[116]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#116]
display-name: [116] InspecImportTest.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[117]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#117]
display-name: [117] BibTeXMLImporterTestBook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[118]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#118]
display-name: [118] MsBibPatent.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[119]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#119]
display-name: [119] MedlinePlainImporterTestMultipleEntries.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[120]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#120]
display-name: [120] MODSImporterTestMods.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[121]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#121]
display-name: [121] BibTeXMLImporterTestBooklet.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[122]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#122]
display-name: [122] RisImporterTest4a.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[123]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#123]
display-name: [123] RisImporterTest4b.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[124]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#124]
display-name: [124] BiblioscapeImporterTestUnknownType.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[125]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#125]
display-name: [125] MedlineImporterTestMalformedEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[126]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#126]
display-name: [126] Endnote.book.example.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[127]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#127]
display-name: [127] MedlineImporterTestKeywordSingleEntry.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[128]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#128]
display-name: [128] BibTeXMLImporterTestInCollection.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[129]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#129]
display-name: [129] BiblioscapeImporterTestInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[130]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#130]
display-name: [130] MedlineImporterTestArticleID.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[131]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#131]
display-name: [131] CopacImporterTest2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[132]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#132]
display-name: [132] RisImporterTest5b.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[133]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#133]
display-name: [133] CopacImporterTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[134]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#134]
display-name: [134] MsBibPatent.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[135]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#135]
display-name: [135] BiblioscapeImporterTestUnknownType.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[136]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#136]
display-name: [136] IsiImporterTestMedline.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[137]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#137]
display-name: [137] MODSImporterTestAllFields.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[138]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#138]
display-name: [138] MsBibLocationTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[139]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#139]
display-name: [139] CopacImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[140]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#140]
display-name: [140] BiblioscapeImporterTestOptionalFields.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[141]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#141]
display-name: [141] MedlinePlainImporterTestDOI.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[142]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#142]
display-name: [142] InspecImportTest2.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[143]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#143]
display-name: [143] RisImporterTest6.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[144]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#144]
display-name: [144] BibTeXMLImporterTestEmpty.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[145]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.027">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#145]
display-name: [145] LNCS-minimal-protected.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[146]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#146]
display-name: [146] MedlinePlainImporterTestInproceeding.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[147]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#147]
display-name: [147] BiblioscapeImporterTestJournalArticle.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[148]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#148]
display-name: [148] MedlineImporterTestArticleID.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[149]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#149]
display-name: [149] BibTeXMLImporterTestArticle.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[150]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#150]
display-name: [150] BibTeXMLImporterTestArticle2.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[151]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#151]
display-name: [151] MsBibImporterTestTranslator.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[152]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#152]
display-name: [152] MsBibShorttitle.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[153]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#153]
display-name: [153] BibTeXMLImporterTestUnpublished.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[154]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#154]
display-name: [154] MODSImporterTestMods.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[155]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#155]
display-name: [155] BibTeXMLImporterTestInvalidInbook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[156]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#156]
display-name: [156] BibTeXMLImporterTestBooklet.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[157]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#157]
display-name: [157] MsBibImporterTest5.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[158]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.028">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#158]
display-name: [158] LNCS-minimal.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[159]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#159]
display-name: [159] Empty.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[160]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#160]
display-name: [160] MedlineImporterTestPubmedBook.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[161]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#161]
display-name: [161] MsBibExportFormatUmlauts.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[162]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#162]
display-name: [162] MedlinePlainImporterTestInproceeding.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[163]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#163]
display-name: [163] IsiImporterTestEmpty.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[164]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#164]
display-name: [164] BiblioscapeImporterTestArticleST.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[165]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#165]
display-name: [165] MedlinePlainImporterTestMultiTitle.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[166]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#166]
display-name: [166] RisImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[167]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#167]
display-name: [167] Endnote.entries.enw
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[168]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#168]
display-name: [168] RisImporterTestScience.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[169]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#169]
display-name: [169] empty.pdf
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[170]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#170]
display-name: [170] MedlineImporterTestNbib.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[171]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#171]
display-name: [171] BibTeXMLImporterTestPhdThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[172]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#172]
display-name: [172] MsBibMultiLocationAddressTest.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[173]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#173]
display-name: [173] LNCS-minimal-protected.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[174]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#174]
display-name: [174] OvidImporterTestBib5.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[175]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#175]
display-name: [175] MedlineImporterTestBookArticleSet.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[176]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#176]
display-name: [176] RisImporterTest4a.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[177]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#177]
display-name: [177] BibTeXMLImporterTestMasterThesis.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[178]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#178]
display-name: [178] RisImporterTest4c.ris
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[179]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#179]
display-name: [179] MedlineImporterTestBookArticleSet.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[180]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#180]
display-name: [180] EmptyMsBib_Test.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[181]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#181]
display-name: [181] RepecNepImporterTest1.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[182]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#182]
display-name: [182] BibTeXMLImporterTestBook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[183]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#183]
display-name: [183] RisImporterTest5a.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[184]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#184]
display-name: [184] MedlineImporterTestNbib.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[185]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#185]
display-name: [185] BibTeXMLImporterTestInbookLessFields.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[186]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#186]
display-name: [186] BibTeXMLImporterTestInBook.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[187]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#187]
display-name: [187] NbibImporterTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[188]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#188]
display-name: [188] BibTeXMLImporterTestInCollection.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[189]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#189]
display-name: [189] BibTeXMLImporterTestArticleWithoutID.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[190]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#190]
display-name: [190] RisImporterTest4c.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[191]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#191]
display-name: [191] MsBibImporterTitleTest.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[192]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#192]
display-name: [192] MedlineImporterTestArticleNoISSN.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[193]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#193]
display-name: [193] IsiImporterTestInspec.isi
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[194]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#194]
display-name: [194] BibTeXMLImporterTestPhdThesis.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[195]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#195]
display-name: [195] MedlinePlainImporterTestMultiAbstract.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[196]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#196]
display-name: [196] BibTeXMLImporterTestInbookLessFields.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[197]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#197]
display-name: [197] RisImporterTest3.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[198]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#198]
display-name: [198] MsBibLCID.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[199]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#199]
display-name: [199] RepecNepImporterTest1.txt
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[200]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#200]
display-name: [200] BibTeXMLImporterTestProceedings.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[201]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#201]
display-name: [201] BibTeXMLImporterTestIncollectionWithoutChapter.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[202]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#202]
display-name: [202] RisImporterTestScience.bib
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[203]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#203]
display-name: [203] BibTeXMLImporterTestArticle2.xml
]]></system-out>
</testcase>
<testcase name="testIsNotRecognizedFormat(String)[204]" classname="org.jabref.logic.importer.fileformat.SilverPlatterImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.SilverPlatterImporterTest]/[test-template:testIsNotRecognizedFormat(java.lang.String)]/[test-template-invocation:#204]
display-name: [204] OvidImporterTestBib4.bib
]]></system-out>
</testcase>
<testcase name="validate001()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate001()]
display-name: validate001()
]]></system-out>
</testcase>
<testcase name="validate002()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate002()]
display-name: validate002()
]]></system-out>
</testcase>
<testcase name="validate003()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate003()]
display-name: validate003()
]]></system-out>
</testcase>
<testcase name="validate004()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate004()]
display-name: validate004()
]]></system-out>
</testcase>
<testcase name="validate005()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate005()]
display-name: validate005()
]]></system-out>
</testcase>
<testcase name="validate006()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate006()]
display-name: validate006()
]]></system-out>
</testcase>
<testcase name="validate007()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate007()]
display-name: validate007()
]]></system-out>
</testcase>
<testcase name="validate008()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate008()]
display-name: validate008()
]]></system-out>
</testcase>
<testcase name="validate009()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate009()]
display-name: validate009()
]]></system-out>
</testcase>
<testcase name="validate010()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate010()]
display-name: validate010()
]]></system-out>
</testcase>
<testcase name="validate011()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate011()]
display-name: validate011()
]]></system-out>
</testcase>
<testcase name="validate012()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate012()]
display-name: validate012()
]]></system-out>
</testcase>
<testcase name="validate013()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate013()]
display-name: validate013()
]]></system-out>
</testcase>
<testcase name="validate014()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate014()]
display-name: validate014()
]]></system-out>
</testcase>
<testcase name="validate015()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate015()]
display-name: validate015()
]]></system-out>
</testcase>
<testcase name="validate016()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate016()]
display-name: validate016()
]]></system-out>
</testcase>
<testcase name="validate01()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate01()]
display-name: validate01()
]]></system-out>
</testcase>
<testcase name="validate0001()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0001()]
display-name: validate0001()
]]></system-out>
</testcase>
<testcase name="validate0002()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0002()]
display-name: validate0002()
]]></system-out>
</testcase>
<testcase name="validate0003()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0003()]
display-name: validate0003()
]]></system-out>
</testcase>
<testcase name="validate0004()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0004()]
display-name: validate0004()
]]></system-out>
</testcase>
<testcase name="validate0005()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0005()]
display-name: validate0005()
]]></system-out>
</testcase>
<testcase name="validate0006()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0006()]
display-name: validate0006()
]]></system-out>
</testcase>
<testcase name="validate0007()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0007()]
display-name: validate0007()
]]></system-out>
</testcase>
<testcase name="validate0008()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0008()]
display-name: validate0008()
]]></system-out>
</testcase>
<testcase name="validate0009()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0009()]
display-name: validate0009()
]]></system-out>
</testcase>
<testcase name="validate0010()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0010()]
display-name: validate0010()
]]></system-out>
</testcase>
<testcase name="validate0011()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0011()]
display-name: validate0011()
]]></system-out>
</testcase>
<testcase name="validate0012()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0012()]
display-name: validate0012()
]]></system-out>
</testcase>
<testcase name="validate0013()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0013()]
display-name: validate0013()
]]></system-out>
</testcase>
<testcase name="validate0014()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0014()]
display-name: validate0014()
]]></system-out>
</testcase>
<testcase name="validate0015()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0015()]
display-name: validate0015()
]]></system-out>
</testcase>
<testcase name="validate0016()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0016()]
display-name: validate0016()
]]></system-out>
</testcase>
<testcase name="validate0017()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0017()]
display-name: validate0017()
]]></system-out>
</testcase>
<testcase name="validate0018()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0018()]
display-name: validate0018()
]]></system-out>
</testcase>
<testcase name="validate0019()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0019()]
display-name: validate0019()
]]></system-out>
</testcase>
<testcase name="validate0020()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0020()]
display-name: validate0020()
]]></system-out>
</testcase>
<testcase name="validate0021()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0021()]
display-name: validate0021()
]]></system-out>
</testcase>
<testcase name="validate0022()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0022()]
display-name: validate0022()
]]></system-out>
</testcase>
<testcase name="validate0023()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0023()]
display-name: validate0023()
]]></system-out>
</testcase>
<testcase name="validate0024()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0024()]
display-name: validate0024()
]]></system-out>
</testcase>
<testcase name="validate0025()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0025()]
display-name: validate0025()
]]></system-out>
</testcase>
<testcase name="validate0026()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0026()]
display-name: validate0026()
]]></system-out>
</testcase>
<testcase name="validate0027()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0027()]
display-name: validate0027()
]]></system-out>
</testcase>
<testcase name="validate0028()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0028()]
display-name: validate0028()
]]></system-out>
</testcase>
<testcase name="validate0029()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0029()]
display-name: validate0029()
]]></system-out>
</testcase>
<testcase name="validate0030()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0030()]
display-name: validate0030()
]]></system-out>
</testcase>
<testcase name="validate0031()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0031()]
display-name: validate0031()
]]></system-out>
</testcase>
<testcase name="validate0032()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0032()]
display-name: validate0032()
]]></system-out>
</testcase>
<testcase name="validate0033()" classname="org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ObjectFactoryTest]/[method:validate0033()]
display-name: validate0033()
]]></system-out>
</testcase>
<testcase name="validate01()" classname="org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest]/[method:validate01()]
display-name: validate01()
]]></system-out>
</testcase>
<testcase name="validate02()" classname="org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest]/[method:validate02()]
display-name: validate02()
]]></system-out>
</testcase>
<testcase name="validate03()" classname="org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest]/[method:validate03()]
display-name: validate03()
]]></system-out>
</testcase>
<testcase name="validate04()" classname="org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest]/[method:validate04()]
display-name: validate04()
]]></system-out>
</testcase>
<testcase name="validate05()" classname="org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.MonthTypeStringTest]/[method:validate05()]
display-name: validate05()
]]></system-out>
</testcase>
<testcase name="validate01()" classname="org.jabref.logic.importer.fileformat.bibtexml.FileTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.FileTest]/[method:validate01()]
display-name: validate01()
]]></system-out>
</testcase>
<testcase name="validate01()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate01()]
display-name: validate01()
]]></system-out>
</testcase>
<testcase name="validate02()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate02()]
display-name: validate02()
]]></system-out>
</testcase>
<testcase name="validate03()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate03()]
display-name: validate03()
]]></system-out>
</testcase>
<testcase name="validate04()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate04()]
display-name: validate04()
]]></system-out>
</testcase>
<testcase name="validate05()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate05()]
display-name: validate05()
]]></system-out>
</testcase>
<testcase name="validate06()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate06()]
display-name: validate06()
]]></system-out>
</testcase>
<testcase name="validate07()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate07()]
display-name: validate07()
]]></system-out>
</testcase>
<testcase name="validate08()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate08()]
display-name: validate08()
]]></system-out>
</testcase>
<testcase name="validate09()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate09()]
display-name: validate09()
]]></system-out>
</testcase>
<testcase name="validate10()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate10()]
display-name: validate10()
]]></system-out>
</testcase>
<testcase name="validate11()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate11()]
display-name: validate11()
]]></system-out>
</testcase>
<testcase name="validate12()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate12()]
display-name: validate12()
]]></system-out>
</testcase>
<testcase name="validate13()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate13()]
display-name: validate13()
]]></system-out>
</testcase>
<testcase name="validate14()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate14()]
display-name: validate14()
]]></system-out>
</testcase>
<testcase name="validate15()" classname="org.jabref.logic.importer.fileformat.bibtexml.EntryTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.EntryTest]/[method:validate15()]
display-name: validate15()
]]></system-out>
</testcase>
<testcase name="validate01()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate01()]
display-name: validate01()
]]></system-out>
</testcase>
<testcase name="validate02()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate02()]
display-name: validate02()
]]></system-out>
</testcase>
<testcase name="validate03()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate03()]
display-name: validate03()
]]></system-out>
</testcase>
<testcase name="validate04()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate04()]
display-name: validate04()
]]></system-out>
</testcase>
<testcase name="validate05()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate05()]
display-name: validate05()
]]></system-out>
</testcase>
<testcase name="validate06()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate06()]
display-name: validate06()
]]></system-out>
</testcase>
<testcase name="validate07()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate07()]
display-name: validate07()
]]></system-out>
</testcase>
<testcase name="validate08()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate08()]
display-name: validate08()
]]></system-out>
</testcase>
<testcase name="validate09()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate09()]
display-name: validate09()
]]></system-out>
</testcase>
<testcase name="validate10()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate10()]
display-name: validate10()
]]></system-out>
</testcase>
<testcase name="validate11()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate11()]
display-name: validate11()
]]></system-out>
</testcase>
<testcase name="validate12()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate12()]
display-name: validate12()
]]></system-out>
</testcase>
<testcase name="validate13()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate13()]
display-name: validate13()
]]></system-out>
</testcase>
<testcase name="validate14()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate14()]
display-name: validate14()
]]></system-out>
</testcase>
<testcase name="validate15()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate15()]
display-name: validate15()
]]></system-out>
</testcase>
<testcase name="validate16()" classname="org.jabref.logic.importer.fileformat.bibtexml.ManualTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.bibtexml.ManualTest]/[method:validate16()]
display-name: validate16()
]]></system-out>
</testcase>
<testcase name="testGetCLIID()" classname="org.jabref.logic.importer.fileformat.BiblioscapeImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BiblioscapeImporterTest]/[method:testGetCLIID()]
display-name: testGetCLIID()
]]></system-out>
</testcase>
<testcase name="testsGetExtensions()" classname="org.jabref.logic.importer.fileformat.BiblioscapeImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BiblioscapeImporterTest]/[method:testsGetExtensions()]
display-name: testsGetExtensions()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.BiblioscapeImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BiblioscapeImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testImportEntriesAbortion()" classname="org.jabref.logic.importer.fileformat.BiblioscapeImporterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BiblioscapeImporterTest]/[method:testImportEntriesAbortion()]
display-name: testImportEntriesAbortion()
]]></system-out>
</testcase>
<testcase name="testGetFormatName()" classname="org.jabref.logic.importer.fileformat.BiblioscapeImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.BiblioscapeImporterTest]/[method:testGetFormatName()]
display-name: testGetFormatName()
]]></system-out>
</testcase>
<testcase name="testImportDatabaseIsHtmlSetCorrectly()" classname="org.jabref.logic.importer.fileformat.MrDLibImporterTest" time="0.096">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MrDLibImporterTest]/[method:testImportDatabaseIsHtmlSetCorrectly()]
display-name: testImportDatabaseIsHtmlSetCorrectly()
]]></system-out>
</testcase>
<testcase name="testGetName()" classname="org.jabref.logic.importer.fileformat.MrDLibImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MrDLibImporterTest]/[method:testGetName()]
display-name: testGetName()
]]></system-out>
</testcase>
<testcase name="testImportDatabaseMin()" classname="org.jabref.logic.importer.fileformat.MrDLibImporterTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MrDLibImporterTest]/[method:testImportDatabaseMin()]
display-name: testImportDatabaseMin()
]]></system-out>
</testcase>
<testcase name="testGetDescription()" classname="org.jabref.logic.importer.fileformat.MrDLibImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MrDLibImporterTest]/[method:testGetDescription()]
display-name: testGetDescription()
]]></system-out>
</testcase>
<testcase name="testGetFileExtention()" classname="org.jabref.logic.importer.fileformat.MrDLibImporterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MrDLibImporterTest]/[method:testGetFileExtention()]
display-name: testGetFileExtention()
]]></system-out>
</testcase>
<testcase name="testImportDatabaseIsYearSetCorrectly()" classname="org.jabref.logic.importer.fileformat.MrDLibImporterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MrDLibImporterTest]/[method:testImportDatabaseIsYearSetCorrectly()]
display-name: testImportDatabaseIsYearSetCorrectly()
]]></system-out>
</testcase>
<testcase name="testImportDatabaseIsTitleSetCorrectly()" classname="org.jabref.logic.importer.fileformat.MrDLibImporterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fileformat.MrDLibImporterTest]/[method:testImportDatabaseIsTitleSetCorrectly()]
display-name: testImportDatabaseIsTitleSetCorrectly()
]]></system-out>
</testcase>
<testcase name="testOpenNotExistingDirectory()" classname="org.jabref.logic.importer.ImportDataTest" time="0.02">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.ImportDataTest]/[method:testOpenNotExistingDirectory()]
display-name: testOpenNotExistingDirectory()
]]></system-out>
</testcase>
<testcase name="testTestingEnvironment()" classname="org.jabref.logic.importer.ImportDataTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.ImportDataTest]/[method:testTestingEnvironment()]
display-name: testTestingEnvironment()
]]></system-out>
</testcase>
<testcase name="useFallbackEncodingIfNoHeader()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:useFallbackEncodingIfNoHeader()]
display-name: useFallbackEncodingIfNoHeader()
]]></system-out>
</testcase>
<testcase name="correctlyParseEncodingWithoutNewline()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:correctlyParseEncodingWithoutNewline()]
display-name: correctlyParseEncodingWithoutNewline()
]]></system-out>
</testcase>
<testcase name="entriesAreParsedHeader()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:entriesAreParsedHeader()]
display-name: entriesAreParsedHeader()
]]></system-out>
</testcase>
<testcase name="entriesAreParsedHeaderAndSignature()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:entriesAreParsedHeaderAndSignature()]
display-name: entriesAreParsedHeaderAndSignature()
]]></system-out>
</testcase>
<testcase name="useSpecifiedEncodingWithSignature()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:useSpecifiedEncodingWithSignature()]
display-name: useSpecifiedEncodingWithSignature()
]]></system-out>
</testcase>
<testcase name="useFallbackEncodingIfUnknownHeader()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:useFallbackEncodingIfUnknownHeader()]
display-name: useFallbackEncodingIfUnknownHeader()
]]></system-out>
</testcase>
<testcase name="useSpecifiedEncoding()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:useSpecifiedEncoding()]
display-name: useSpecifiedEncoding()
]]></system-out>
</testcase>
<testcase name="entriesAreParsedNoHeader()" classname="org.jabref.logic.importer.OpenDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.OpenDatabaseTest]/[method:entriesAreParsedNoHeader()]
display-name: entriesAreParsedNoHeader()
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[1]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.importer.fetcher.DoiResolution@1e3e914
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[2]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.importer.fetcher.ScienceDirect@95c556
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[3]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.importer.fetcher.SpringerLink@722d99
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[4]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.importer.fetcher.ACS@3314f8
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[5]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.importer.fetcher.ArXiv@59dc5d
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[6]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.importer.fetcher.IEEE@1c1f75
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[7]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.importer.fetcher.GoogleScholar@18bf24a
]]></system-out>
</testcase>
<testcase name="findFullTextRejectsNullParameter(FulltextFetcher)[8]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextRejectsNullParameter(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.importer.fetcher.OpenAccessDoi@1c3b517
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[1]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.importer.fetcher.DoiResolution@1fe2686
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[2]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.importer.fetcher.ScienceDirect@136c7fa
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[3]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.importer.fetcher.SpringerLink@1fd6222
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[4]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.importer.fetcher.ACS@e54b08
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[5]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0.489">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.importer.fetcher.ArXiv@b0a3c8
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[6]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.importer.fetcher.IEEE@11c006e
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[7]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.importer.fetcher.GoogleScholar@2a47ec
]]></system-out>
</testcase>
<testcase name="findFullTextWithEmptyEntryFindsNothing(FulltextFetcher)[8]" classname="org.jabref.logic.importer.fetcher.FulltextFetcherTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.FulltextFetcherTest]/[test-template:findFullTextWithEmptyEntryFindsNothing(org.jabref.logic.importer.FulltextFetcher)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.importer.fetcher.OpenAccessDoi@109f0e9
]]></system-out>
</testcase>
<testcase name="testGMP()" classname="org.jabref.logic.importer.fetcher.GvkParserTest" time="0.017">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.GvkParserTest]/[method:testGMP()]
display-name: testGMP()
]]></system-out>
</testcase>
<testcase name="subTitleTest()" classname="org.jabref.logic.importer.fetcher.GvkParserTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.GvkParserTest]/[method:subTitleTest()]
display-name: subTitleTest()
]]></system-out>
</testcase>
<testcase name="emptyResult()" classname="org.jabref.logic.importer.fetcher.GvkParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.GvkParserTest]/[method:emptyResult()]
display-name: emptyResult()
]]></system-out>
</testcase>
<testcase name="resultFor797485368()" classname="org.jabref.logic.importer.fetcher.GvkParserTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.fetcher.GvkParserTest]/[method:resultFor797485368()]
display-name: resultFor797485368()
]]></system-out>
</testcase>
<testcase name="rejectNonPdfUrls()" classname="org.jabref.logic.importer.FulltextFetchersTest" time="2.632">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.FulltextFetchersTest]/[method:rejectNonPdfUrls()]
display-name: rejectNonPdfUrls()
]]></system-out>
</testcase>
<testcase name="higherTrustLevelWins()" classname="org.jabref.logic.importer.FulltextFetchersTest" time="2.096">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.FulltextFetchersTest]/[method:higherTrustLevelWins()]
display-name: higherTrustLevelWins()
]]></system-out>
</testcase>
<testcase name="noTrustLevel()" classname="org.jabref.logic.importer.FulltextFetchersTest" time="1.95">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.FulltextFetchersTest]/[method:noTrustLevel()]
display-name: noTrustLevel()
]]></system-out>
</testcase>
<testcase name="acceptPdfUrls()" classname="org.jabref.logic.importer.FulltextFetchersTest" time="1.987">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.FulltextFetchersTest]/[method:acceptPdfUrls()]
display-name: acceptPdfUrls()
]]></system-out>
</testcase>
<testcase name="getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()" classname="org.jabref.logic.importer.WebFetchersTest" time="0.05">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.WebFetchersTest]/[method:getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()]
display-name: getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()
]]></system-out>
</testcase>
<testcase name="getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()" classname="org.jabref.logic.importer.WebFetchersTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.WebFetchersTest]/[method:getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()]
display-name: getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()
]]></system-out>
</testcase>
<testcase name="getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()" classname="org.jabref.logic.importer.WebFetchersTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.WebFetchersTest]/[method:getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()]
display-name: getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()
]]></system-out>
</testcase>
<testcase name="getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()" classname="org.jabref.logic.importer.WebFetchersTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.WebFetchersTest]/[method:getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()]
display-name: getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()
]]></system-out>
</testcase>
<testcase name="getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()" classname="org.jabref.logic.importer.WebFetchersTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.WebFetchersTest]/[method:getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()]
display-name: getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()
]]></system-out>
</testcase>
<testcase name="fromStringParsesExplicitGroupWithEscapedCharacterInName()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:fromStringParsesExplicitGroupWithEscapedCharacterInName()]
display-name: fromStringParsesExplicitGroupWithEscapedCharacterInName()
]]></system-out>
</testcase>
<testcase name="keywordDelimiterThatNeedsToBeEscaped()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:keywordDelimiterThatNeedsToBeEscaped()]
display-name: keywordDelimiterThatNeedsToBeEscaped()
]]></system-out>
</testcase>
<testcase name="fromStringUnknownGroupThrowsException()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:fromStringUnknownGroupThrowsException()]
display-name: fromStringUnknownGroupThrowsException()
]]></system-out>
</testcase>
<testcase name="fromStringParsesExplicitGroupWithIconAndDescription()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:fromStringParsesExplicitGroupWithIconAndDescription()]
display-name: fromStringParsesExplicitGroupWithIconAndDescription()
]]></system-out>
</testcase>
<testcase name="fromStringThrowsParseExceptionForNotEscapedGroupName()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:fromStringThrowsParseExceptionForNotEscapedGroupName()]
display-name: fromStringThrowsParseExceptionForNotEscapedGroupName()
]]></system-out>
</testcase>
<testcase name="fromStringParsesAutomaticKeywordGroup()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:fromStringParsesAutomaticKeywordGroup()]
display-name: fromStringParsesAutomaticKeywordGroup()
]]></system-out>
</testcase>
<testcase name="fromStringParsesAutomaticPersonGroup()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:fromStringParsesAutomaticPersonGroup()]
display-name: fromStringParsesAutomaticPersonGroup()
]]></system-out>
</testcase>
<testcase name="testImportSubGroups()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:testImportSubGroups()]
display-name: testImportSubGroups()
]]></system-out>
</testcase>
<testcase name="fromStringParsesTexGroup()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:fromStringParsesTexGroup()]
display-name: fromStringParsesTexGroup()
]]></system-out>
</testcase>
<testcase name="hierarchicalDelimiterThatNeedsToBeEscaped()" classname="org.jabref.logic.importer.util.GroupsParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.GroupsParserTest]/[method:hierarchicalDelimiterThatNeedsToBeEscaped()]
display-name: hierarchicalDelimiterThatNeedsToBeEscaped()
]]></system-out>
</testcase>
<testcase name="testBibJSONConverter()" classname="org.jabref.logic.importer.util.JSONEntryParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.JSONEntryParserTest]/[method:testBibJSONConverter()]
display-name: testBibJSONConverter()
]]></system-out>
</testcase>
<testcase name="testSpringerJSONToBibtex()" classname="org.jabref.logic.importer.util.JSONEntryParserTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.importer.util.JSONEntryParserTest]/[method:testSpringerJSONToBibtex()]
display-name: testSpringerJSONToBibtex()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleCapitalize()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleCapitalize()]
display-name: generateKeyTitleCapitalize()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthN()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthN()]
display-name: generateKeyAuthN()
]]></system-out>
</testcase>
<testcase name="generateKeyCamel()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyCamel()]
display-name: generateKeyCamel()
]]></system-out>
</testcase>
<testcase name="generateKeyTitle()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitle()]
display-name: generateKeyTitle()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthNMLargeM()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthNMLargeM()]
display-name: generateKeyAuthNMLargeM()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthNMLargeN()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthNMLargeN()]
display-name: generateKeyAuthNMLargeN()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthNShortName()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthNShortName()]
display-name: generateKeyAuthNShortName()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyStartDuplicatesAtB()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyStartDuplicatesAtB()]
display-name: generateDefaultKeyStartDuplicatesAtB()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthNMLargeMReallyReturnsEmptyString()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthNMLargeMReallyReturnsEmptyString()]
display-name: generateKeyAuthNMLargeMReallyReturnsEmptyString()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleTitleCaseAbbr()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleTitleCaseAbbr()]
display-name: generateKeyTitleTitleCaseAbbr()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthUpperModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthUpperModified()]
display-name: generateKeyAuthUpperModified()
]]></system-out>
</testcase>
<testcase name="generateKeyShorttitle()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShorttitle()]
display-name: generateKeyShorttitle()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyFirstTwoAlreadyExists()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyFirstTwoAlreadyExists()]
display-name: generateDefaultKeyFirstTwoAlreadyExists()
]]></system-out>
</testcase>
<testcase name="generateKeyVeryshorttitleCapitalizeModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyVeryshorttitleCapitalizeModified()]
display-name: generateKeyVeryshorttitleCapitalizeModified()
]]></system-out>
</testcase>
<testcase name="generateKeyVeryshorttitleUpperModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyVeryshorttitleUpperModified()]
display-name: generateKeyVeryshorttitleUpperModified()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyFixedValue()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyFixedValue()]
display-name: generateDefaultKeyFixedValue()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthIni()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthIni()]
display-name: generateKeyAuthIni()
]]></system-out>
</testcase>
<testcase name="generateKeyVeryshorttitleSentenceCaseModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyVeryshorttitleSentenceCaseModified()]
display-name: generateKeyVeryshorttitleSentenceCaseModified()
]]></system-out>
</testcase>
<testcase name="generateKeyVeryshorttitle()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyVeryshorttitle()]
display-name: generateKeyVeryshorttitle()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleRegexe()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleRegexe()]
display-name: generateKeyTitleRegexe()
]]></system-out>
</testcase>
<testcase name="generateKeyShorttitleSentenceCaseModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShorttitleSentenceCaseModified()]
display-name: generateKeyShorttitleSentenceCaseModified()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthCapitalizeModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthCapitalizeModified()]
display-name: generateKeyAuthCapitalizeModified()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleAbbr()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleAbbr()]
display-name: generateKeyTitleAbbr()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthTitleCaseModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthTitleCaseModified()]
display-name: generateKeyAuthTitleCaseModified()
]]></system-out>
</testcase>
<testcase name="generateKeyEmptyFieldDefaultText()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyEmptyFieldDefaultText()]
display-name: generateKeyEmptyFieldDefaultText()
]]></system-out>
</testcase>
<testcase name="generateKeyShortYear()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShortYear()]
display-name: generateKeyShortYear()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthNM()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthNM()]
display-name: generateKeyAuthNM()
]]></system-out>
</testcase>
<testcase name="generateKeyShorttitleLowerModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShorttitleLowerModified()]
display-name: generateKeyShorttitleLowerModified()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleSentenceCaseAbbr()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleSentenceCaseAbbr()]
display-name: generateKeyTitleSentenceCaseAbbr()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyAlreadyExistsDuplicatesStartAtA()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyAlreadyExistsDuplicatesStartAtA()]
display-name: generateDefaultKeyAlreadyExistsDuplicatesStartAtA()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyAlreadyExistsDuplicatesStartAtB()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyAlreadyExistsDuplicatesStartAtB()]
display-name: generateDefaultKeyAlreadyExistsDuplicatesStartAtB()
]]></system-out>
</testcase>
<testcase name="generateKeyEmptyFieldNoColonInDefaultText()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyEmptyFieldNoColonInDefaultText()]
display-name: generateKeyEmptyFieldNoColonInDefaultText()
]]></system-out>
</testcase>
<testcase name="generateDefaultKey()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKey()]
display-name: generateDefaultKey()
]]></system-out>
</testcase>
<testcase name="generateKeyEmptyField()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyEmptyField()]
display-name: generateKeyEmptyField()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyAlwaysLetter()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyAlwaysLetter()]
display-name: generateDefaultKeyAlwaysLetter()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthIniMany()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthIniMany()]
display-name: generateKeyAuthIniMany()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyAlwaysLetterAlreadyExistsDuplicatesStartAtB()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyAlwaysLetterAlreadyExistsDuplicatesStartAtB()]
display-name: generateDefaultKeyAlwaysLetterAlreadyExistsDuplicatesStartAtB()
]]></system-out>
</testcase>
<testcase name="generateKeyShorttitleTitleCaseModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShorttitleTitleCaseModified()]
display-name: generateKeyShorttitleTitleCaseModified()
]]></system-out>
</testcase>
<testcase name="generateKeyShorttitleCapitalizeModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShorttitleCapitalizeModified()]
display-name: generateKeyShorttitleCapitalizeModified()
]]></system-out>
</testcase>
<testcase name="generateKeyShorttitleINI()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShorttitleINI()]
display-name: generateKeyShorttitleINI()
]]></system-out>
</testcase>
<testcase name="generateDefaultKeyAlreadyExistsManyDuplicates()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateDefaultKeyAlreadyExistsManyDuplicates()]
display-name: generateDefaultKeyAlreadyExistsManyDuplicates()
]]></system-out>
</testcase>
<testcase name="generateKeyRegExReplace()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyRegExReplace()]
display-name: generateKeyRegExReplace()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthLowerModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthLowerModified()]
display-name: generateKeyAuthLowerModified()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleCapitalizeAbbr()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleCapitalizeAbbr()]
display-name: generateKeyTitleCapitalizeAbbr()
]]></system-out>
</testcase>
<testcase name="generateKeyVeryshorttitleTitleCaseModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyVeryshorttitleTitleCaseModified()]
display-name: generateKeyVeryshorttitleTitleCaseModified()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleTitleCase()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleTitleCase()]
display-name: generateKeyTitleTitleCase()
]]></system-out>
</testcase>
<testcase name="generateKeyShorttitleUpperModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyShorttitleUpperModified()]
display-name: generateKeyShorttitleUpperModified()
]]></system-out>
</testcase>
<testcase name="generateKeyVeryshorttitleLowerModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyVeryshorttitleLowerModified()]
display-name: generateKeyVeryshorttitleLowerModified()
]]></system-out>
</testcase>
<testcase name="generateKeyAuthSentenceCaseModified()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyAuthSentenceCaseModified()]
display-name: generateKeyAuthSentenceCaseModified()
]]></system-out>
</testcase>
<testcase name="generateKeyTitleSentenceCase()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithDatabaseTest]/[method:generateKeyTitleSentenceCase()]
display-name: generateKeyTitleSentenceCase()
]]></system-out>
</testcase>
<testcase name="testAndInAuthorName()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAndInAuthorName()]
display-name: testAndInAuthorName()
]]></system-out>
</testcase>
<testcase name="firstAuthorVonAndLastNoVonInName()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:firstAuthorVonAndLastNoVonInName()]
display-name: firstAuthorVonAndLastNoVonInName()
]]></system-out>
</testcase>
<testcase name="crossrefkeywordNKeywordsSeparatedBySpace()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:crossrefkeywordNKeywordsSeparatedBySpace()]
display-name: crossrefkeywordNKeywordsSeparatedBySpace()
]]></system-out>
</testcase>
<testcase name="keywordsNKeywordsSeparatedBySpace()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:keywordsNKeywordsSeparatedBySpace()]
display-name: keywordsNKeywordsSeparatedBySpace()
]]></system-out>
</testcase>
<testcase name="testMakeLabelAndCheckLegalKeys()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testMakeLabelAndCheckLegalKeys()]
display-name: testMakeLabelAndCheckLegalKeys()
]]></system-out>
</testcase>
<testcase name="authNM()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:authNM()]
display-name: authNM()
]]></system-out>
</testcase>
<testcase name="testMakeLabelAndCheckLegalKeysAccentGrave()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testMakeLabelAndCheckLegalKeysAccentGrave()]
display-name: testMakeLabelAndCheckLegalKeysAccentGrave()
]]></system-out>
</testcase>
<testcase name="testCrossrefAndInAuthorNames()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testCrossrefAndInAuthorNames()]
display-name: testCrossrefAndInAuthorNames()
]]></system-out>
</testcase>
<testcase name="testInstituteOfTechnology()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testInstituteOfTechnology()]
display-name: testInstituteOfTechnology()
]]></system-out>
</testcase>
<testcase name="testCheckLegalKeyEnforceLegal()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testCheckLegalKeyEnforceLegal()]
display-name: testCheckLegalKeyEnforceLegal()
]]></system-out>
</testcase>
<testcase name="testcrossrefUniversity()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testcrossrefUniversity()]
display-name: testcrossrefUniversity()
]]></system-out>
</testcase>
<testcase name="testLastPage()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testLastPage()]
display-name: testLastPage()
]]></system-out>
</testcase>
<testcase name="veryShortTitle()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:veryShortTitle()]
display-name: veryShortTitle()
]]></system-out>
</testcase>
<testcase name="firstAuthorVonAndLast()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:firstAuthorVonAndLast()]
display-name: firstAuthorVonAndLast()
]]></system-out>
</testcase>
<testcase name="testCrossrefAndAuthorNames()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testCrossrefAndAuthorNames()]
display-name: testCrossrefAndAuthorNames()
]]></system-out>
</testcase>
<testcase name="testUniversity()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testUniversity()]
display-name: testUniversity()
]]></system-out>
</testcase>
<testcase name="lastAuthorForenameInitials()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:lastAuthorForenameInitials()]
display-name: lastAuthorForenameInitials()
]]></system-out>
</testcase>
<testcase name="generateKeyWithOneModifier()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:generateKeyWithOneModifier()]
display-name: generateKeyWithOneModifier()
]]></system-out>
</testcase>
<testcase name="testAuthEaEmptyReturnsEmpty()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAuthEaEmptyReturnsEmpty()]
display-name: testAuthEaEmptyReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="testNAuthors1EmptyReturnEmpty()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testNAuthors1EmptyReturnEmpty()]
display-name: testNAuthors1EmptyReturnEmpty()
]]></system-out>
</testcase>
<testcase name="testcrossrefDepartment()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testcrossrefDepartment()]
display-name: testcrossrefDepartment()
]]></system-out>
</testcase>
<testcase name="testcrossrefInstituteOfTechnology()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testcrossrefInstituteOfTechnology()]
display-name: testcrossrefInstituteOfTechnology()
]]></system-out>
</testcase>
<testcase name="testAllAuthors()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAllAuthors()]
display-name: testAllAuthors()
]]></system-out>
</testcase>
<testcase name="testCheckLegalNullInNullOut()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testCheckLegalNullInNullOut()]
display-name: testCheckLegalNullInNullOut()
]]></system-out>
</testcase>
<testcase name="camel()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:camel()]
display-name: camel()
]]></system-out>
</testcase>
<testcase name="title()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:title()]
display-name: title()
]]></system-out>
</testcase>
<testcase name="testDepartment()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testDepartment()]
display-name: testDepartment()
]]></system-out>
</testcase>
<testcase name="keywordNKeywordsSeparatedBySpace()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:keywordNKeywordsSeparatedBySpace()]
display-name: keywordNKeywordsSeparatedBySpace()
]]></system-out>
</testcase>
<testcase name="testSpecialLatexCharacterInAuthorName()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testSpecialLatexCharacterInAuthorName()]
display-name: testSpecialLatexCharacterInAuthorName()
]]></system-out>
</testcase>
<testcase name="testPagePrefix()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testPagePrefix()]
display-name: testPagePrefix()
]]></system-out>
</testcase>
<testcase name="testcrossrefSchool()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testcrossrefSchool()]
display-name: testcrossrefSchool()
]]></system-out>
</testcase>
<testcase name="oneAuthorPlusIni()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:oneAuthorPlusIni()]
display-name: oneAuthorPlusIni()
]]></system-out>
</testcase>
<testcase name="testcrossrefShorttitle()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testcrossrefShorttitle()]
display-name: testcrossrefShorttitle()
]]></system-out>
</testcase>
<testcase name="crossrefkeywordsNKeywordsSeparatedBySpace()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:crossrefkeywordsNKeywordsSeparatedBySpace()]
display-name: crossrefkeywordsNKeywordsSeparatedBySpace()
]]></system-out>
</testcase>
<testcase name="testFirstPage()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testFirstPage()]
display-name: testFirstPage()
]]></system-out>
</testcase>
<testcase name="testNAuthors1()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testNAuthors1()]
display-name: testNAuthors1()
]]></system-out>
</testcase>
<testcase name="testNAuthors3()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testNAuthors3()]
display-name: testNAuthors3()
]]></system-out>
</testcase>
<testcase name="generateKeyStripsApostropheFromTitle()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:generateKeyStripsApostropheFromTitle()]
display-name: generateKeyStripsApostropheFromTitle()
]]></system-out>
</testcase>
<testcase name="authorsAlpha()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:authorsAlpha()]
display-name: authorsAlpha()
]]></system-out>
</testcase>
<testcase name="testAuthIniNEmptyReturnsEmpty()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAuthIniNEmptyReturnsEmpty()]
display-name: testAuthIniNEmptyReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="testcrossrefShorttitleInitials()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testcrossrefShorttitleInitials()]
display-name: testcrossrefShorttitleInitials()
]]></system-out>
</testcase>
<testcase name="testApplyModifiers()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testApplyModifiers()]
display-name: testApplyModifiers()
]]></system-out>
</testcase>
<testcase name="testCheckLegalKeyDoNotEnforceLegal()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testCheckLegalKeyDoNotEnforceLegal()]
display-name: testCheckLegalKeyDoNotEnforceLegal()
]]></system-out>
</testcase>
<testcase name="lastAuthor()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:lastAuthor()]
display-name: lastAuthor()
]]></system-out>
</testcase>
<testcase name="testAndAuthorNames()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAndAuthorNames()]
display-name: testAndAuthorNames()
]]></system-out>
</testcase>
<testcase name="authAuthEa()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:authAuthEa()]
display-name: authAuthEa()
]]></system-out>
</testcase>
<testcase name="shortTitle()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:shortTitle()]
display-name: shortTitle()
]]></system-out>
</testcase>
<testcase name="testSchool()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testSchool()]
display-name: testSchool()
]]></system-out>
</testcase>
<testcase name="testAuthShortEmptyReturnsEmpty()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAuthShortEmptyReturnsEmpty()]
display-name: testAuthShortEmptyReturnsEmpty()
]]></system-out>
</testcase>
<testcase name="testCheckLegalKey()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testCheckLegalKey()]
display-name: testCheckLegalKey()
]]></system-out>
</testcase>
<testcase name="testFirstAuthor()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testFirstAuthor()]
display-name: testFirstAuthor()
]]></system-out>
</testcase>
<testcase name="generateKeyWithTwoModifiers()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:generateKeyWithTwoModifiers()]
display-name: generateKeyWithTwoModifiers()
]]></system-out>
</testcase>
<testcase name="firstAuthorForenameInitials()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:firstAuthorForenameInitials()]
display-name: firstAuthorForenameInitials()
]]></system-out>
</testcase>
<testcase name="testAuthShort()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAuthShort()]
display-name: testAuthShort()
]]></system-out>
</testcase>
<testcase name="testAuthEtAl()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAuthEtAl()]
display-name: testAuthEtAl()
]]></system-out>
</testcase>
<testcase name="testAuthIniN()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:testAuthIniN()]
display-name: testAuthIniN()
]]></system-out>
</testcase>
<testcase name="generateKeyStripsColonFromTitle()" classname="org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.BibtexKeyGeneratorTest]/[method:generateKeyStripsColonFromTitle()]
display-name: generateKeyStripsColonFromTitle()
]]></system-out>
</testcase>
<testcase name="makeEditorLabelForFileSearch()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithoutDatabaseTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithoutDatabaseTest]/[method:makeEditorLabelForFileSearch()]
display-name: makeEditorLabelForFileSearch()
]]></system-out>
</testcase>
<testcase name="makeLabelForFileSearch()" classname="org.jabref.logic.bibtexkeypattern.MakeLabelWithoutDatabaseTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.bibtexkeypattern.MakeLabelWithoutDatabaseTest]/[method:makeLabelForFileSearch()]
display-name: makeLabelForFileSearch()
]]></system-out>
</testcase>
<testcase name="isAtLeast()" classname="org.jabref.logic.util.JavaVersionTest" time="0.049">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.JavaVersionTest]/[method:isAtLeast()]
display-name: isAtLeast()
]]></system-out>
</testcase>
<testcase name="isJava9()" classname="org.jabref.logic.util.JavaVersionTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.JavaVersionTest]/[method:isJava9()]
display-name: isJava9()
]]></system-out>
</testcase>
<testcase name="testFileImport()" classname="org.jabref.logic.util.BuildInfoTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BuildInfoTest]/[method:testFileImport()]
display-name: testFileImport()
]]></system-out>
</testcase>
<testcase name="testDefaults()" classname="org.jabref.logic.util.BuildInfoTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BuildInfoTest]/[method:testDefaults()]
display-name: testDefaults()
]]></system-out>
</testcase>
<testcase name="azureInstrumentationKeyIsNotEmpty()" classname="org.jabref.logic.util.BuildInfoTest" time="0.027">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BuildInfoTest]/[method:azureInstrumentationKeyIsNotEmpty()]
display-name: azureInstrumentationKeyIsNotEmpty()
]]></system-out>
</testcase>
<testcase name="testFindFileNonRecursive()" classname="org.jabref.logic.util.io.RegExpBasedFileFinderTests" time="0.019">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.RegExpBasedFileFinderTests]/[method:testFindFileNonRecursive()]
display-name: testFindFileNonRecursive()
]]></system-out>
</testcase>
<testcase name="testFindFileInSubdirectory()" classname="org.jabref.logic.util.io.RegExpBasedFileFinderTests" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.RegExpBasedFileFinderTests]/[method:testFindFileInSubdirectory()]
display-name: testFindFileInSubdirectory()
]]></system-out>
</testcase>
<testcase name="testAuthorWithDiacritics()" classname="org.jabref.logic.util.io.RegExpBasedFileFinderTests" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.RegExpBasedFileFinderTests]/[method:testAuthorWithDiacritics()]
display-name: testAuthorWithDiacritics()
]]></system-out>
</testcase>
<testcase name="testYearAuthFirspageFindFiles()" classname="org.jabref.logic.util.io.RegExpBasedFileFinderTests" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.RegExpBasedFileFinderTests]/[method:testYearAuthFirspageFindFiles()]
display-name: testYearAuthFirspageFindFiles()
]]></system-out>
</testcase>
<testcase name="testFindFiles()" classname="org.jabref.logic.util.io.RegExpBasedFileFinderTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.RegExpBasedFileFinderTests]/[method:testFindFiles()]
display-name: testFindFiles()
]]></system-out>
</testcase>
<testcase name="testExpandBrackets()" classname="org.jabref.logic.util.io.RegExpBasedFileFinderTests" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.RegExpBasedFileFinderTests]/[method:testExpandBrackets()]
display-name: testExpandBrackets()
]]></system-out>
</testcase>
<testcase name="testCleanFileName()" classname="org.jabref.logic.util.io.FileNameCleanerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.FileNameCleanerTest]/[method:testCleanFileName()]
display-name: testCleanFileName()
]]></system-out>
</testcase>
<testcase name="testCleanDirectoryNameForWindows()" classname="org.jabref.logic.util.io.FileNameCleanerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.FileNameCleanerTest]/[method:testCleanDirectoryNameForWindows()]
display-name: testCleanDirectoryNameForWindows()
]]></system-out>
</testcase>
<testcase name="testCleanDirectoryName()" classname="org.jabref.logic.util.io.FileNameCleanerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.FileNameCleanerTest]/[method:testCleanDirectoryName()]
display-name: testCleanDirectoryName()
]]></system-out>
</testcase>
<testcase name="testFileHistory()" classname="org.jabref.logic.util.io.FileHistoryTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.io.FileHistoryTest]/[method:testFileHistory()]
display-name: testFileHistory()
]]></system-out>
</testcase>
<testcase name="parseNull()" classname="org.jabref.logic.util.DevelopmentStageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.DevelopmentStageTest]/[method:parseNull()]
display-name: parseNull()
]]></system-out>
</testcase>
<testcase name="parseStages()" classname="org.jabref.logic.util.DevelopmentStageTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.DevelopmentStageTest]/[method:parseStages()]
display-name: parseStages()
]]></system-out>
</testcase>
<testcase name="parseUnknownString()" classname="org.jabref.logic.util.DevelopmentStageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.DevelopmentStageTest]/[method:parseUnknownString()]
display-name: parseUnknownString()
]]></system-out>
</testcase>
<testcase name="checkStabilityOrder()" classname="org.jabref.logic.util.DevelopmentStageTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.DevelopmentStageTest]/[method:checkStabilityOrder()]
display-name: checkStabilityOrder()
]]></system-out>
</testcase>
<testcase name="betaShouldBeUpdatedToStable()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:betaShouldBeUpdatedToStable()]
display-name: betaShouldBeUpdatedToStable()
]]></system-out>
</testcase>
<testcase name="versionNotNewerMinor()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNotNewerMinor()]
display-name: versionNotNewerMinor()
]]></system-out>
</testcase>
<testcase name="versionNotNewerPatch()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNotNewerPatch()]
display-name: versionNotNewerPatch()
]]></system-out>
</testcase>
<testcase name="unknownVersionAsEmptyString()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:unknownVersionAsEmptyString()]
display-name: unknownVersionAsEmptyString()
]]></system-out>
</testcase>
<testcase name="initVersionFromWrongStringResultsInUnknownVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:initVersionFromWrongStringResultsInUnknownVersion()]
display-name: initVersionFromWrongStringResultsInUnknownVersion()
]]></system-out>
</testcase>
<testcase name="versionNewerMinor()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNewerMinor()]
display-name: versionNewerMinor()
]]></system-out>
</testcase>
<testcase name="versionNewerPatch()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNewerPatch()]
display-name: versionNewerPatch()
]]></system-out>
</testcase>
<testcase name="alphaShouldBeUpdatedToStables()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:alphaShouldBeUpdatedToStables()]
display-name: alphaShouldBeUpdatedToStables()
]]></system-out>
</testcase>
<testcase name="versionNewerThanDevTwoDigits()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNewerThanDevTwoDigits()]
display-name: versionNewerThanDevTwoDigits()
]]></system-out>
</testcase>
<testcase name="changelogWithThreeDigits()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:changelogWithThreeDigits()]
display-name: changelogWithThreeDigits()
]]></system-out>
</testcase>
<testcase name="stableShouldNotBeUpdatedToAlpha()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:stableShouldNotBeUpdatedToAlpha()]
display-name: stableShouldNotBeUpdatedToAlpha()
]]></system-out>
</testcase>
<testcase name="versionNewerThanDevThreeDigits()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNewerThanDevThreeDigits()]
display-name: versionNewerThanDevThreeDigits()
]]></system-out>
</testcase>
<testcase name="versionNotNewerThan()" classname="org.jabref.logic.util.VersionTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNotNewerThan()]
display-name: versionNotNewerThan()
]]></system-out>
</testcase>
<testcase name="unknownVersionAsNull()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:unknownVersionAsNull()]
display-name: unknownVersionAsNull()
]]></system-out>
</testcase>
<testcase name="versionOneDigitDevVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionOneDigitDevVersion()]
display-name: versionOneDigitDevVersion()
]]></system-out>
</testcase>
<testcase name="stableNewerThanBeta()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:stableNewerThanBeta()]
display-name: stableNewerThanBeta()
]]></system-out>
</testcase>
<testcase name="versionEmpty()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionEmpty()]
display-name: versionEmpty()
]]></system-out>
</testcase>
<testcase name="betaNewerThanAlpha()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:betaNewerThanAlpha()]
display-name: betaNewerThanAlpha()
]]></system-out>
</testcase>
<testcase name="unknownVersionIsNotNewerThanValidVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:unknownVersionIsNotNewerThanValidVersion()]
display-name: unknownVersionIsNotNewerThanValidVersion()
]]></system-out>
</testcase>
<testcase name="versionThreeDigits()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionThreeDigits()]
display-name: versionThreeDigits()
]]></system-out>
</testcase>
<testcase name="versionNewerThanDevVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNewerThanDevVersion()]
display-name: versionNewerThanDevVersion()
]]></system-out>
</testcase>
<testcase name="unknownVersionAsString()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:unknownVersionAsString()]
display-name: unknownVersionAsString()
]]></system-out>
</testcase>
<testcase name="versionThreeDigitDevVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionThreeDigitDevVersion()]
display-name: versionThreeDigitDevVersion()
]]></system-out>
</testcase>
<testcase name="alphaShouldBeUpdatedToBeta()" classname="org.jabref.logic.util.VersionTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:alphaShouldBeUpdatedToBeta()]
display-name: alphaShouldBeUpdatedToBeta()
]]></system-out>
</testcase>
<testcase name="versionNull()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNull()]
display-name: versionNull()
]]></system-out>
</testcase>
<testcase name="versionTwoDigits()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionTwoDigits()]
display-name: versionTwoDigits()
]]></system-out>
</testcase>
<testcase name="stableShouldNotBeUpdatedToBeta()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:stableShouldNotBeUpdatedToBeta()]
display-name: stableShouldNotBeUpdatedToBeta()
]]></system-out>
</testcase>
<testcase name="versionNewerThan()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNewerThan()]
display-name: versionNewerThan()
]]></system-out>
</testcase>
<testcase name="versionNotNewerThanSameVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionNotNewerThanSameVersion()]
display-name: versionNotNewerThanSameVersion()
]]></system-out>
</testcase>
<testcase name="validVersionIsNotNewerThanUnknownVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:validVersionIsNotNewerThanUnknownVersion()]
display-name: validVersionIsNotNewerThanUnknownVersion()
]]></system-out>
</testcase>
<testcase name="equalVersionsNotNewer()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:equalVersionsNotNewer()]
display-name: equalVersionsNotNewer()
]]></system-out>
</testcase>
<testcase name="versionOneDigit()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionOneDigit()]
display-name: versionOneDigit()
]]></system-out>
</testcase>
<testcase name="changelogOfDevelopmentVersionWithDash()" classname="org.jabref.logic.util.VersionTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:changelogOfDevelopmentVersionWithDash()]
display-name: changelogOfDevelopmentVersionWithDash()
]]></system-out>
</testcase>
<testcase name="versionTwoDigitDevVersion()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:versionTwoDigitDevVersion()]
display-name: versionTwoDigitDevVersion()
]]></system-out>
</testcase>
<testcase name="changelogOfDevelopmentVersionWithoutDash()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:changelogOfDevelopmentVersionWithoutDash()]
display-name: changelogOfDevelopmentVersionWithoutDash()
]]></system-out>
</testcase>
<testcase name="changelogWithTwoDigits()" classname="org.jabref.logic.util.VersionTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.VersionTest]/[method:changelogWithTwoDigits()]
display-name: changelogWithTwoDigits()
]]></system-out>
</testcase>
<testcase name="emptyDatabaseExpansionTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:emptyDatabaseExpansionTest()]
display-name: emptyDatabaseExpansionTest()
]]></system-out>
</testcase>
<testcase name="pureauthReturnsAuthorIfEditorIsPresent()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:pureauthReturnsAuthorIfEditorIsPresent()]
display-name: pureauthReturnsAuthorIfEditorIsPresent()
]]></system-out>
</testcase>
<testcase name="pureauthReturnsEmptyStringIfAuthorIsAbsentAndEditorIsPresent()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:pureauthReturnsEmptyStringIfAuthorIsAbsentAndEditorIsPresent()]
display-name: pureauthReturnsEmptyStringIfAuthorIsAbsentAndEditorIsPresent()
]]></system-out>
</testcase>
<testcase name="testResolvedFieldAndFormat()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:testResolvedFieldAndFormat()]
display-name: testResolvedFieldAndFormat()
]]></system-out>
</testcase>
<testcase name="entryTypeExpansionLowercaseTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:entryTypeExpansionLowercaseTest()]
display-name: entryTypeExpansionLowercaseTest()
]]></system-out>
</testcase>
<testcase name="unbalancedLastBracketExpandsToSomething()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:unbalancedLastBracketExpandsToSomething()]
display-name: unbalancedLastBracketExpandsToSomething()
]]></system-out>
</testcase>
<testcase name="unknownKeyExpandsToEmptyString()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:unknownKeyExpandsToEmptyString()]
display-name: unknownKeyExpandsToEmptyString()
]]></system-out>
</testcase>
<testcase name="testResolvedParentNotInDatabase()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:testResolvedParentNotInDatabase()]
display-name: testResolvedParentNotInDatabase()
]]></system-out>
</testcase>
<testcase name="bracketedExpressionDefaultConstructorTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:bracketedExpressionDefaultConstructorTest()]
display-name: bracketedExpressionDefaultConstructorTest()
]]></system-out>
</testcase>
<testcase name="entryTypeExpansionTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:entryTypeExpansionTest()]
display-name: entryTypeExpansionTest()
]]></system-out>
</testcase>
<testcase name="unbalancedBracketsExpandToSomething()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:unbalancedBracketsExpandToSomething()]
display-name: unbalancedBracketsExpandToSomething()
]]></system-out>
</testcase>
<testcase name="bibtexkeyPatternExpandsToBibTeXKey()" classname="org.jabref.logic.util.BracketedPatternTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:bibtexkeyPatternExpandsToBibTeXKey()]
display-name: bibtexkeyPatternExpandsToBibTeXKey()
]]></system-out>
</testcase>
<testcase name="pureauthReturnsEmptyStringIfAuthorIsAbsent()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:pureauthReturnsEmptyStringIfAuthorIsAbsent()]
display-name: pureauthReturnsEmptyStringIfAuthorIsAbsent()
]]></system-out>
</testcase>
<testcase name="databaseWithStringsExpansionTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:databaseWithStringsExpansionTest()]
display-name: databaseWithStringsExpansionTest()
]]></system-out>
</testcase>
<testcase name="pureauthReturnsAuthorIfEditorIsAbsent()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:pureauthReturnsAuthorIfEditorIsAbsent()]
display-name: pureauthReturnsAuthorIfEditorIsAbsent()
]]></system-out>
</testcase>
<testcase name="nullDatabaseExpansionTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:nullDatabaseExpansionTest()]
display-name: nullDatabaseExpansionTest()
]]></system-out>
</testcase>
<testcase name="bibtexkeyPatternWithEmptyModifierExpandsToBibTeXKey()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:bibtexkeyPatternWithEmptyModifierExpandsToBibTeXKey()]
display-name: bibtexkeyPatternWithEmptyModifierExpandsToBibTeXKey()
]]></system-out>
</testcase>
<testcase name="suppliedBibentryBracketExpansionTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:suppliedBibentryBracketExpansionTest()]
display-name: suppliedBibentryBracketExpansionTest()
]]></system-out>
</testcase>
<testcase name="bibentryExpansionTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:bibentryExpansionTest()]
display-name: bibentryExpansionTest()
]]></system-out>
</testcase>
<testcase name="lowerFormatterWorksOnVonNamePrefixes()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:lowerFormatterWorksOnVonNamePrefixes()]
display-name: lowerFormatterWorksOnVonNamePrefixes()
]]></system-out>
</testcase>
<testcase name="emptyPatternAndEmptyModifierExpandsToEmptyString()" classname="org.jabref.logic.util.BracketedPatternTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:emptyPatternAndEmptyModifierExpandsToEmptyString()]
display-name: emptyPatternAndEmptyModifierExpandsToEmptyString()
]]></system-out>
</testcase>
<testcase name="authorPatternTreatsVonNamePrefixCorrectly()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:authorPatternTreatsVonNamePrefixCorrectly()]
display-name: authorPatternTreatsVonNamePrefixCorrectly()
]]></system-out>
</testcase>
<testcase name="emptyPatternAndValidModifierExpandsToEmptyString()" classname="org.jabref.logic.util.BracketedPatternTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:emptyPatternAndValidModifierExpandsToEmptyString()]
display-name: emptyPatternAndValidModifierExpandsToEmptyString()
]]></system-out>
</testcase>
<testcase name="nullBibentryBracketExpansionTest()" classname="org.jabref.logic.util.BracketedPatternTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.BracketedPatternTest]/[method:nullBibentryBracketExpansionTest()]
display-name: nullBibentryBracketExpansionTest()
]]></system-out>
</testcase>
<testcase name="testMultiFileExtensionsDescription()" classname="org.jabref.logic.util.FileTypeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.FileTypeTest]/[method:testMultiFileExtensionsDescription()]
display-name: testMultiFileExtensionsDescription()
]]></system-out>
</testcase>
<testcase name="testFirstExtensionWithDot()" classname="org.jabref.logic.util.FileTypeTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.FileTypeTest]/[method:testFirstExtensionWithDot()]
display-name: testFirstExtensionWithDot()
]]></system-out>
</testcase>
<testcase name="testSingleFileExtensionDescription()" classname="org.jabref.logic.util.FileTypeTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.FileTypeTest]/[method:testSingleFileExtensionDescription()]
display-name: testSingleFileExtensionDescription()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSetToNullCorrectFieldChangeContents()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSetToNullCorrectFieldChangeContents()]
display-name: testUpdateFieldSetToNullCorrectFieldChangeContents()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSameContentHasChanged()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSameContentHasChanged()]
display-name: testUpdateFieldSameContentHasChanged()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSetRmptyToNullHasNoFieldChangeContents()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSetRmptyToNullHasNoFieldChangeContents()]
display-name: testUpdateFieldSetRmptyToNullHasNoFieldChangeContents()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSameValueNotChange()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSameValueNotChange()]
display-name: testUpdateFieldSameValueNotChange()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSameContentHasCorrectFieldChange()" classname="org.jabref.logic.util.UpdateFieldTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSameContentHasCorrectFieldChange()]
display-name: testUpdateFieldSameContentHasCorrectFieldChange()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldWorksNonEmptyField()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldWorksNonEmptyField()]
display-name: testUpdateFieldWorksNonEmptyField()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldCorrectFieldChangeContentsEmptyField()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldCorrectFieldChangeContentsEmptyField()]
display-name: testUpdateFieldCorrectFieldChangeContentsEmptyField()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSameContentHasFieldChange()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSameContentHasFieldChange()]
display-name: testUpdateFieldSameContentHasFieldChange()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldCorrectFieldChangeContentsNonEmptyField()" classname="org.jabref.logic.util.UpdateFieldTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldCorrectFieldChangeContentsNonEmptyField()]
display-name: testUpdateFieldCorrectFieldChangeContentsNonEmptyField()
]]></system-out>
</testcase>
<testcase name="testUpdateNonDisplayableFieldHasNotChanged()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateNonDisplayableFieldHasNotChanged()]
display-name: testUpdateNonDisplayableFieldHasNotChanged()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldWorksEmptyField()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldWorksEmptyField()]
display-name: testUpdateFieldWorksEmptyField()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSetEmptyToNullClears()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSetEmptyToNullClears()]
display-name: testUpdateFieldSetEmptyToNullClears()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSameContentClears()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSameContentClears()]
display-name: testUpdateFieldSameContentClears()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSameValueNoChange()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSameValueNoChange()]
display-name: testUpdateFieldSameValueNoChange()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSetToNullClears()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSetToNullClears()]
display-name: testUpdateFieldSetToNullClears()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldSetToNullHasFieldChangeContents()" classname="org.jabref.logic.util.UpdateFieldTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldSetToNullHasFieldChangeContents()]
display-name: testUpdateFieldSetToNullHasFieldChangeContents()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldHasChanged()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldHasChanged()]
display-name: testUpdateFieldHasChanged()
]]></system-out>
</testcase>
<testcase name="testUpdateFieldValidFieldChange()" classname="org.jabref.logic.util.UpdateFieldTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateFieldValidFieldChange()]
display-name: testUpdateFieldValidFieldChange()
]]></system-out>
</testcase>
<testcase name="testUpdateNonDisplayableFieldUpdates()" classname="org.jabref.logic.util.UpdateFieldTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.UpdateFieldTest]/[method:testUpdateNonDisplayableFieldUpdates()]
display-name: testUpdateNonDisplayableFieldUpdates()
]]></system-out>
</testcase>
<testcase name="generateSymmetricHighlightingMultipleWordsDeleteTextWordDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0.025">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:generateSymmetricHighlightingMultipleWordsDeleteTextWordDiff()]
display-name: generateSymmetricHighlightingMultipleWordsDeleteTextWordDiff()
]]></system-out>
</testcase>
<testcase name="testGenerateDiffHighlightingSingleWordDeleteTextWordDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:testGenerateDiffHighlightingSingleWordDeleteTextWordDiff()]
display-name: testGenerateDiffHighlightingSingleWordDeleteTextWordDiff()
]]></system-out>
</testcase>
<testcase name="generateSymmetricHighlightingSingleWordDeleteTextCharacterDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:generateSymmetricHighlightingSingleWordDeleteTextCharacterDiff()]
display-name: generateSymmetricHighlightingSingleWordDeleteTextCharacterDiff()
]]></system-out>
</testcase>
<testcase name="testGenerateDiffHighlightingSingleWordAddTextWordDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:testGenerateDiffHighlightingSingleWordAddTextWordDiff()]
display-name: testGenerateDiffHighlightingSingleWordAddTextWordDiff()
]]></system-out>
</testcase>
<testcase name="testGenerateDiffHighlightingBothNullReturnsNull()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:testGenerateDiffHighlightingBothNullReturnsNull()]
display-name: testGenerateDiffHighlightingBothNullReturnsNull()
]]></system-out>
</testcase>
<testcase name="generateSymmetricHighlightingSingleWordDeleteTextWordDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:generateSymmetricHighlightingSingleWordDeleteTextWordDiff()]
display-name: generateSymmetricHighlightingSingleWordDeleteTextWordDiff()
]]></system-out>
</testcase>
<testcase name="generateSymmetricHighlightingSingleWordAddTextCharacterDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:generateSymmetricHighlightingSingleWordAddTextCharacterDiff()]
display-name: generateSymmetricHighlightingSingleWordAddTextCharacterDiff()
]]></system-out>
</testcase>
<testcase name="testGenerateDiffHighlightingSingleWordDeleteTextCharacterDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:testGenerateDiffHighlightingSingleWordDeleteTextCharacterDiff()]
display-name: testGenerateDiffHighlightingSingleWordDeleteTextCharacterDiff()
]]></system-out>
</testcase>
<testcase name="generateSymmetricHighlightingSingleWordAddTextWordDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:generateSymmetricHighlightingSingleWordAddTextWordDiff()]
display-name: generateSymmetricHighlightingSingleWordAddTextWordDiff()
]]></system-out>
</testcase>
<testcase name="testGenerateDiffHighlightingSingleWordAddTextCharacterDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:testGenerateDiffHighlightingSingleWordAddTextCharacterDiff()]
display-name: testGenerateDiffHighlightingSingleWordAddTextCharacterDiff()
]]></system-out>
</testcase>
<testcase name="generateSymmetricHighlightingMultipleWordsDeleteTextCharacterDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:generateSymmetricHighlightingMultipleWordsDeleteTextCharacterDiff()]
display-name: generateSymmetricHighlightingMultipleWordsDeleteTextCharacterDiff()
]]></system-out>
</testcase>
<testcase name="testNullSeparatorThrowsNPE()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:testNullSeparatorThrowsNPE()]
display-name: testNullSeparatorThrowsNPE()
]]></system-out>
</testcase>
<testcase name="testGenerateDiffHighlightingNoDiff()" classname="org.jabref.logic.util.strings.DiffHighlightingTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.DiffHighlightingTest]/[method:testGenerateDiffHighlightingNoDiff()]
display-name: testGenerateDiffHighlightingNoDiff()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.util.strings.StringLengthComparatorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.util.strings.StringLengthComparatorTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="testCrossRef()" classname="org.jabref.logic.auxparser.AuxParserTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.auxparser.AuxParserTest]/[method:testCrossRef()]
display-name: testCrossRef()
]]></system-out>
</testcase>
<testcase name="duplicateBibDatabaseConfiguration()" classname="org.jabref.logic.auxparser.AuxParserTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.auxparser.AuxParserTest]/[method:duplicateBibDatabaseConfiguration()]
display-name: duplicateBibDatabaseConfiguration()
]]></system-out>
</testcase>
<testcase name="testFileNotFound()" classname="org.jabref.logic.auxparser.AuxParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.auxparser.AuxParserTest]/[method:testFileNotFound()]
display-name: testFileNotFound()
]]></system-out>
</testcase>
<testcase name="testNotAllFound()" classname="org.jabref.logic.auxparser.AuxParserTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.auxparser.AuxParserTest]/[method:testNotAllFound()]
display-name: testNotAllFound()
]]></system-out>
</testcase>
<testcase name="testNormal()" classname="org.jabref.logic.auxparser.AuxParserTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.auxparser.AuxParserTest]/[method:testNormal()]
display-name: testNormal()
]]></system-out>
</testcase>
<testcase name="testNestedAux()" classname="org.jabref.logic.auxparser.AuxParserTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.auxparser.AuxParserTest]/[method:testNestedAux()]
display-name: testNestedAux()
]]></system-out>
</testcase>
<testcase name="locationIsRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:locationIsRecognizedAsBiblatexOnlyField()]
display-name: locationIsRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="journalIsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:journalIsNotRecognizedAsBiblatexOnlyField()]
display-name: journalIsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="abstractIsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:abstractIsNotRecognizedAsBiblatexOnlyField()]
display-name: abstractIsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="addressIsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:addressIsNotRecognizedAsBiblatexOnlyField()]
display-name: addressIsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="instituationIsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:instituationIsNotRecognizedAsBiblatexOnlyField()]
display-name: instituationIsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="commentIsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:commentIsNotRecognizedAsBiblatexOnlyField()]
display-name: commentIsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="keywordsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:keywordsNotRecognizedAsBiblatexOnlyField()]
display-name: keywordsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="journaltitleIsRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:journaltitleIsRecognizedAsBiblatexOnlyField()]
display-name: journaltitleIsRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="arbitraryNonBiblatexFieldIsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:arbitraryNonBiblatexFieldIsNotRecognizedAsBiblatexOnlyField()]
display-name: arbitraryNonBiblatexFieldIsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="reviewIsNotRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:reviewIsNotRecognizedAsBiblatexOnlyField()]
display-name: reviewIsNotRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="afterwordIsRecognizedAsBiblatexOnlyField()" classname="org.jabref.logic.integrity.NoBibTexFieldCheckerTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.NoBibTexFieldCheckerTest]/[method:afterwordIsRecognizedAsBiblatexOnlyField()]
display-name: afterwordIsRecognizedAsBiblatexOnlyField()
]]></system-out>
</testcase>
<testcase name="validFirstnameNameAuthors()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:validFirstnameNameAuthors()]
display-name: validFirstnameNameAuthors()
]]></system-out>
</testcase>
<testcase name="doNotComplainAboutSecondNameInFront()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:doNotComplainAboutSecondNameInFront()]
display-name: doNotComplainAboutSecondNameInFront()
]]></system-out>
</testcase>
<testcase name="validFirstnameNameAuthor()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:validFirstnameNameAuthor()]
display-name: validFirstnameNameAuthor()
]]></system-out>
</testcase>
<testcase name="validNameFirstnameAuthor()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:validNameFirstnameAuthor()]
display-name: validNameFirstnameAuthor()
]]></system-out>
</testcase>
<testcase name="validCorporateNameAndPerson()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:validCorporateNameAndPerson()]
display-name: validCorporateNameAndPerson()
]]></system-out>
</testcase>
<testcase name="validCorporateNameInBrackets()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:validCorporateNameInBrackets()]
display-name: validCorporateNameInBrackets()
]]></system-out>
</testcase>
<testcase name="complainAboutPersonStringWithTwoManyCommas()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:complainAboutPersonStringWithTwoManyCommas()]
display-name: complainAboutPersonStringWithTwoManyCommas()
]]></system-out>
</testcase>
<testcase name="validNameFirstnameAuthors()" classname="org.jabref.logic.integrity.PersonNamesCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.PersonNamesCheckerTest]/[method:validNameFirstnameAuthors()]
display-name: validNameFirstnameAuthors()
]]></system-out>
</testcase>
<testcase name="testEntryLinkChecker()" classname="org.jabref.logic.integrity.EntryLinkCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.EntryLinkCheckerTest]/[method:testEntryLinkChecker()]
display-name: testEntryLinkChecker()
]]></system-out>
</testcase>
<testcase name="testCheckNonExistingRelated()" classname="org.jabref.logic.integrity.EntryLinkCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.EntryLinkCheckerTest]/[method:testCheckNonExistingRelated()]
display-name: testCheckNonExistingRelated()
]]></system-out>
</testcase>
<testcase name="testCheckExistingRelated()" classname="org.jabref.logic.integrity.EntryLinkCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.EntryLinkCheckerTest]/[method:testCheckExistingRelated()]
display-name: testCheckExistingRelated()
]]></system-out>
</testcase>
<testcase name="testCheckNoFields()" classname="org.jabref.logic.integrity.EntryLinkCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.EntryLinkCheckerTest]/[method:testCheckNoFields()]
display-name: testCheckNoFields()
]]></system-out>
</testcase>
<testcase name="testCheckNonRelatedFieldsOnly()" classname="org.jabref.logic.integrity.EntryLinkCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.EntryLinkCheckerTest]/[method:testCheckNonRelatedFieldsOnly()]
display-name: testCheckNonRelatedFieldsOnly()
]]></system-out>
</testcase>
<testcase name="testCheckNonExistingCrossref()" classname="org.jabref.logic.integrity.EntryLinkCheckerTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.EntryLinkCheckerTest]/[method:testCheckNonExistingCrossref()]
display-name: testCheckNonExistingCrossref()
]]></system-out>
</testcase>
<testcase name="testCheckExistingCrossref()" classname="org.jabref.logic.integrity.EntryLinkCheckerTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.EntryLinkCheckerTest]/[method:testCheckExistingCrossref()]
display-name: testCheckExistingCrossref()
]]></system-out>
</testcase>
<testcase name="inputWithoutBraces()" classname="org.jabref.logic.integrity.BracesCorrectorTest" time="0.044">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.BracesCorrectorTest]/[method:inputWithoutBraces()]
display-name: inputWithoutBraces()
]]></system-out>
</testcase>
<testcase name="inputIsEmpty()" classname="org.jabref.logic.integrity.BracesCorrectorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.BracesCorrectorTest]/[method:inputIsEmpty()]
display-name: inputIsEmpty()
]]></system-out>
</testcase>
<testcase name="inputMissingOpening()" classname="org.jabref.logic.integrity.BracesCorrectorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.BracesCorrectorTest]/[method:inputMissingOpening()]
display-name: inputMissingOpening()
]]></system-out>
</testcase>
<testcase name="inputIsNull()" classname="org.jabref.logic.integrity.BracesCorrectorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.BracesCorrectorTest]/[method:inputIsNull()]
display-name: inputIsNull()
]]></system-out>
</testcase>
<testcase name="inputMissingClosing()" classname="org.jabref.logic.integrity.BracesCorrectorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.BracesCorrectorTest]/[method:inputMissingClosing()]
display-name: inputMissingClosing()
]]></system-out>
</testcase>
<testcase name="inputWithMaskedBraces()" classname="org.jabref.logic.integrity.BracesCorrectorTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.BracesCorrectorTest]/[method:inputWithMaskedBraces()]
display-name: inputWithMaskedBraces()
]]></system-out>
</testcase>
<testcase name="inputWithMixedBraces()" classname="org.jabref.logic.integrity.BracesCorrectorTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.integrity.BracesCorrectorTest]/[method:inputWithMixedBraces()]
display-name: inputWithMixedBraces()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.minifier.MinifyNameListFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.minifier.MinifyNameListFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="minifyAuthorNames()" classname="org.jabref.logic.formatter.minifier.MinifyNameListFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.minifier.MinifyNameListFormatterTest]/[method:minifyAuthorNames()]
display-name: minifyAuthorNames()
]]></system-out>
</testcase>
<testcase name="testCorrectOrderingOfTerms()" classname="org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest" time="0.024">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest]/[method:testCorrectOrderingOfTerms()]
display-name: testCorrectOrderingOfTerms()
]]></system-out>
</testcase>
<testcase name="testDoNotProtectAlreadyProtected()" classname="org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest]/[method:testDoNotProtectAlreadyProtected()]
display-name: testDoNotProtectAlreadyProtected()
]]></system-out>
</testcase>
<testcase name="testCaseSensitivity()" classname="org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest]/[method:testCaseSensitivity()]
display-name: testCaseSensitivity()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest" time="0.018">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="testSingleWord()" classname="org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.ProtectTermsFormatterTest]/[method:testSingleWord()]
display-name: testSingleWord()
]]></system-out>
</testcase>
<testcase name="completeWordsInCurlyBracketsIsLeftUnchanged()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:completeWordsInCurlyBracketsIsLeftUnchanged()]
display-name: completeWordsInCurlyBracketsIsLeftUnchanged()
]]></system-out>
</testcase>
<testcase name="eachFirstLetterIsUppercased()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:eachFirstLetterIsUppercased()]
display-name: eachFirstLetterIsUppercased()
]]></system-out>
</testcase>
<testcase name="lettersInCurlyBracketsIsLeftUnchanged()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:lettersInCurlyBracketsIsLeftUnchanged()]
display-name: lettersInCurlyBracketsIsLeftUnchanged()
]]></system-out>
</testcase>
<testcase name="eachFirstLetterIsUppercasedButIntermediateAndsAreKeptLowercase()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:eachFirstLetterIsUppercasedButIntermediateAndsAreKeptLowercase()]
display-name: eachFirstLetterIsUppercasedButIntermediateAndsAreKeptLowercase()
]]></system-out>
</testcase>
<testcase name="eachFirstLetterIsUppercasedAndATralingAndIsAlsoCorrectlyCased()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:eachFirstLetterIsUppercasedAndATralingAndIsAlsoCorrectlyCased()]
display-name: eachFirstLetterIsUppercasedAndATralingAndIsAlsoCorrectlyCased()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="intraWordLettersInCurlyBracketsIsLeftUnchanged()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:intraWordLettersInCurlyBracketsIsLeftUnchanged()]
display-name: intraWordLettersInCurlyBracketsIsLeftUnchanged()
]]></system-out>
</testcase>
<testcase name="theAfterColonGetsCapitalized()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:theAfterColonGetsCapitalized()]
display-name: theAfterColonGetsCapitalized()
]]></system-out>
</testcase>
<testcase name="eachFirstLetterIsUppercasedButIntermediateAndsArePutLowercase()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:eachFirstLetterIsUppercasedButIntermediateAndsArePutLowercase()]
display-name: eachFirstLetterIsUppercasedButIntermediateAndsArePutLowercase()
]]></system-out>
</testcase>
<testcase name="eachFirstLetterIsUppercasedAndOthersLowercased()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:eachFirstLetterIsUppercasedAndOthersLowercased()]
display-name: eachFirstLetterIsUppercasedAndOthersLowercased()
]]></system-out>
</testcase>
<testcase name="testTwoExperiencesTitle()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:testTwoExperiencesTitle()]
display-name: testTwoExperiencesTitle()
]]></system-out>
</testcase>
<testcase name="eachFirstLetterIsUppercasedAndATralingAndIsAlsoUppercased()" classname="org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.TitleCaseFormatterTest]/[method:eachFirstLetterIsUppercasedAndATralingAndIsAlsoUppercased()]
display-name: eachFirstLetterIsUppercasedAndATralingAndIsAlsoUppercased()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.formatter.casechanger.SentenceCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.SentenceCaseFormatterTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.casechanger.SentenceCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.SentenceCaseFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.formatter.casechanger.LowerCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.LowerCaseFormatterTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.casechanger.LowerCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.LowerCaseFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.formatter.casechanger.UpperCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.UpperCaseFormatterTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.casechanger.UpperCaseFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.UpperCaseFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.formatter.casechanger.CapitalizeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.CapitalizeFormatterTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.casechanger.CapitalizeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.casechanger.CapitalizeFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="replaceSuperscriptsInMultilineStrings()" classname="org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest]/[method:replaceSuperscriptsInMultilineStrings()]
display-name: replaceSuperscriptsInMultilineStrings()
]]></system-out>
</testcase>
<testcase name="replacesSuperscript()" classname="org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest]/[method:replacesSuperscript()]
display-name: replacesSuperscript()
]]></system-out>
</testcase>
<testcase name="ignoreSuperscriptsInsideWords()" classname="org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest]/[method:ignoreSuperscriptsInsideWords()]
display-name: ignoreSuperscriptsInsideWords()
]]></system-out>
</testcase>
<testcase name="replaceAllSuperscripts()" classname="org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest]/[method:replaceAllSuperscripts()]
display-name: replaceAllSuperscripts()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="replaceSuperscriptsIgnoresCase()" classname="org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatterTest]/[method:replaceSuperscriptsIgnoresCase()]
display-name: replaceSuperscriptsIgnoresCase()
]]></system-out>
</testcase>
<testcase name="threeAuthorsSeperatedByAndWithLatex()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:threeAuthorsSeperatedByAndWithLatex()]
display-name: threeAuthorsSeperatedByAndWithLatex()
]]></system-out>
</testcase>
<testcase name="testUpperCaseSensitiveList()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testUpperCaseSensitiveList()]
display-name: testUpperCaseSensitiveList()
]]></system-out>
</testcase>
<testcase name="testNameAffixe()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testNameAffixe()]
display-name: testNameAffixe()
]]></system-out>
</testcase>
<testcase name="testAvoidNameAffixes()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testAvoidNameAffixes()]
display-name: testAvoidNameAffixes()
]]></system-out>
</testcase>
<testcase name="lastThenJuniorThenFirst()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:lastThenJuniorThenFirst()]
display-name: lastThenJuniorThenFirst()
]]></system-out>
</testcase>
<testcase name="initialThenLast()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:initialThenLast()]
display-name: initialThenLast()
]]></system-out>
</testcase>
<testcase name="initialDotThenLast()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:initialDotThenLast()]
display-name: initialDotThenLast()
]]></system-out>
</testcase>
<testcase name="testMultipleNameAffixes()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testMultipleNameAffixes()]
display-name: testMultipleNameAffixes()
]]></system-out>
</testcase>
<testcase name="threeAuthorsSeperatedByAndWithDash()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:threeAuthorsSeperatedByAndWithDash()]
display-name: threeAuthorsSeperatedByAndWithDash()
]]></system-out>
</testcase>
<testcase name="testCommaSeperatedNames()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testCommaSeperatedNames()]
display-name: testCommaSeperatedNames()
]]></system-out>
</testcase>
<testcase name="testNormalizeAuthorList()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testNormalizeAuthorList()]
display-name: testNormalizeAuthorList()
]]></system-out>
</testcase>
<testcase name="lastThenInitials()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:lastThenInitials()]
display-name: lastThenInitials()
]]></system-out>
</testcase>
<testcase name="testMultipleSpaces()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testMultipleSpaces()]
display-name: testMultipleSpaces()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="threeAuthorsSeperatedByAnd()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:threeAuthorsSeperatedByAnd()]
display-name: threeAuthorsSeperatedByAnd()
]]></system-out>
</testcase>
<testcase name="testAvoidSpecialCharacter()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testAvoidSpecialCharacter()]
display-name: testAvoidSpecialCharacter()
]]></system-out>
</testcase>
<testcase name="testAndInName()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testAndInName()]
display-name: testAndInName()
]]></system-out>
</testcase>
<testcase name="testConcatenationOfAuthorsWithCommas()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testConcatenationOfAuthorsWithCommas()]
display-name: testConcatenationOfAuthorsWithCommas()
]]></system-out>
</testcase>
<testcase name="testOneCommaUntouched()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testOneCommaUntouched()]
display-name: testOneCommaUntouched()
]]></system-out>
</testcase>
<testcase name="lastThenInitial()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:lastThenInitial()]
display-name: lastThenInitial()
]]></system-out>
</testcase>
<testcase name="twoAuthorsSeperatedByColon()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:twoAuthorsSeperatedByColon()]
display-name: twoAuthorsSeperatedByColon()
]]></system-out>
</testcase>
<testcase name="testSemiCorrectNamesWithSemicolon()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testSemiCorrectNamesWithSemicolon()]
display-name: testSemiCorrectNamesWithSemicolon()
]]></system-out>
</testcase>
<testcase name="initialsThenLast()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:initialsThenLast()]
display-name: initialsThenLast()
]]></system-out>
</testcase>
<testcase name="testAvoidPreposition()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testAvoidPreposition()]
display-name: testAvoidPreposition()
]]></system-out>
</testcase>
<testcase name="testPreposition()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testPreposition()]
display-name: testPreposition()
]]></system-out>
</testcase>
<testcase name="threeAuthorsSeperatedByColon()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:threeAuthorsSeperatedByColon()]
display-name: threeAuthorsSeperatedByColon()
]]></system-out>
</testcase>
<testcase name="testOddCountOfCommas()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatterTest]/[method:testOddCountOfCommas()]
display-name: testOddCountOfCommas()
]]></system-out>
</testcase>
<testcase name="removePagePrefix()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:removePagePrefix()]
display-name: removePagePrefix()
]]></system-out>
</testcase>
<testcase name="replaceLongDashWithDoubleDash()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:replaceLongDashWithDoubleDash()]
display-name: replaceLongDashWithDoubleDash()
]]></system-out>
</testcase>
<testcase name="ignoreWhitespaceInPageNumbers()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:ignoreWhitespaceInPageNumbers()]
display-name: ignoreWhitespaceInPageNumbers()
]]></system-out>
</testcase>
<testcase name="formatPageNumbersCommaSeparated()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatPageNumbersCommaSeparated()]
display-name: formatPageNumbersCommaSeparated()
]]></system-out>
</testcase>
<testcase name="formatPageNumbers()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatPageNumbers()]
display-name: formatPageNumbers()
]]></system-out>
</testcase>
<testcase name="formatPageNumbersRegexNotMatching()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatPageNumbersRegexNotMatching()]
display-name: formatPageNumbersRegexNotMatching()
]]></system-out>
</testcase>
<testcase name="formatACMPages()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatACMPages()]
display-name: formatACMPages()
]]></system-out>
</testcase>
<testcase name="removeWhitespaceSinglePage()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:removeWhitespaceSinglePage()]
display-name: removeWhitespaceSinglePage()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="keepCorrectlyFormattedPageNumbers()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:keepCorrectlyFormattedPageNumbers()]
display-name: keepCorrectlyFormattedPageNumbers()
]]></system-out>
</testcase>
<testcase name="removePagesPrefix()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:removePagesPrefix()]
display-name: removePagesPrefix()
]]></system-out>
</testcase>
<testcase name="keepFormattedACMPages()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:keepFormattedACMPages()]
display-name: keepFormattedACMPages()
]]></system-out>
</testcase>
<testcase name="formatPageNumbersPlusRange()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatPageNumbersPlusRange()]
display-name: formatPageNumbersPlusRange()
]]></system-out>
</testcase>
<testcase name="removeWhitespacePageRange()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:removeWhitespacePageRange()]
display-name: removeWhitespacePageRange()
]]></system-out>
</testcase>
<testcase name="doNotRemoveLetters()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:doNotRemoveLetters()]
display-name: doNotRemoveLetters()
]]></system-out>
</testcase>
<testcase name="formatSinglePageResultsInNoChange()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatSinglePageResultsInNoChange()]
display-name: formatSinglePageResultsInNoChange()
]]></system-out>
</testcase>
<testcase name="ignoreWhitespaceInPageNumbersWithDoubleDash()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:ignoreWhitespaceInPageNumbersWithDoubleDash()]
display-name: ignoreWhitespaceInPageNumbersWithDoubleDash()
]]></system-out>
</testcase>
<testcase name="formatPageNumbersRemoveUnexpectedLiterals()" classname="org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatterTest]/[method:formatPageNumbersRemoveUnexpectedLiterals()]
display-name: formatPageNumbersRemoveUnexpectedLiterals()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatterTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatterTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatterTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="escapePercentSignOnlyOnce()" classname="org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest]/[method:escapePercentSignOnlyOnce()]
display-name: escapePercentSignOnlyOnce()
]]></system-out>
</testcase>
<testcase name="escapePercentSignOnlnyOnceWithNumber()" classname="org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest]/[method:escapePercentSignOnlnyOnceWithNumber()]
display-name: escapePercentSignOnlnyOnceWithNumber()
]]></system-out>
</testcase>
<testcase name="test()" classname="org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest]/[method:test()]
display-name: test()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="preservePercentSign()" classname="org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatterTest]/[method:preservePercentSign()]
display-name: preservePercentSign()
]]></system-out>
</testcase>
<testcase name="formatKeepsUnmatchedBracesAtEnd()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatKeepsUnmatchedBracesAtEnd()]
display-name: formatKeepsUnmatchedBracesAtEnd()
]]></system-out>
</testcase>
<testcase name="formatKeepsUnmatchedBracesAtBeginning()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatKeepsUnmatchedBracesAtBeginning()]
display-name: formatKeepsUnmatchedBracesAtBeginning()
]]></system-out>
</testcase>
<testcase name="formatKeepsNonMatchingBraces()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatKeepsNonMatchingBraces()]
display-name: formatKeepsNonMatchingBraces()
]]></system-out>
</testcase>
<testcase name="formatKeepsShortString()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatKeepsShortString()]
display-name: formatKeepsShortString()
]]></system-out>
</testcase>
<testcase name="formatKeepsEmptyString()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatKeepsEmptyString()]
display-name: formatKeepsEmptyString()
]]></system-out>
</testcase>
<testcase name="formatRemovesSingleEnclosingBraces()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatRemovesSingleEnclosingBraces()]
display-name: formatRemovesSingleEnclosingBraces()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="formatRemovesTripleEnclosingBraces()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatRemovesTripleEnclosingBraces()]
display-name: formatRemovesTripleEnclosingBraces()
]]></system-out>
</testcase>
<testcase name="formatDoesNotRemoveBracesInBrokenString()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatDoesNotRemoveBracesInBrokenString()]
display-name: formatDoesNotRemoveBracesInBrokenString()
]]></system-out>
</testcase>
<testcase name="formatRemovesOnlyMatchingBraces()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatRemovesOnlyMatchingBraces()]
display-name: formatRemovesOnlyMatchingBraces()
]]></system-out>
</testcase>
<testcase name="formatRemovesDoubleEnclosingBraces()" classname="org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatterTest]/[method:formatRemovesDoubleEnclosingBraces()]
display-name: formatRemovesDoubleEnclosingBraces()
]]></system-out>
</testcase>
<testcase name="formatReturnsSameTextIfNoUnderscoresPresent()" classname="org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatterTest]/[method:formatReturnsSameTextIfNoUnderscoresPresent()]
display-name: formatReturnsSameTextIfNoUnderscoresPresent()
]]></system-out>
</testcase>
<testcase name="formatEscapesUnderscoresIfPresent()" classname="org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatterTest]/[method:formatEscapesUnderscoresIfPresent()]
display-name: formatEscapesUnderscoresIfPresent()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="testUnicodeSingle()" classname="org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest]/[method:testUnicodeSingle()]
display-name: testUnicodeSingle()
]]></system-out>
</testcase>
<testcase name="testUnicodeCombiningAccents()" classname="org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest]/[method:testUnicodeCombiningAccents()]
display-name: testUnicodeCombiningAccents()
]]></system-out>
</testcase>
<testcase name="testBasic()" classname="org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest]/[method:testBasic()]
display-name: testBasic()
]]></system-out>
</testcase>
<testcase name="testUnicode()" classname="org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnicodeConverterTest]/[method:testUnicode()]
display-name: testUnicode()
]]></system-out>
</testcase>
<testcase name="removeHyphensBeforeNewlines()" classname="org.jabref.logic.formatter.bibtexfields.RemoveHyphenatedNewlinesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveHyphenatedNewlinesFormatterTest]/[method:removeHyphensBeforeNewlines()]
display-name: removeHyphensBeforeNewlines()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="testGreekLetter()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:testGreekLetter()]
display-name: testGreekLetter()
]]></system-out>
</testcase>
<testcase name="testBasic()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:testBasic()]
display-name: testBasic()
]]></system-out>
</testcase>
<testcase name="testUmlauts()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:testUmlauts()]
display-name: testUmlauts()
]]></system-out>
</testcase>
<testcase name="testHTMLRemoveTags()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:testHTMLRemoveTags()]
display-name: testHTMLRemoveTags()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="formatMultipleHtmlCharacters()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:formatMultipleHtmlCharacters()]
display-name: formatMultipleHtmlCharacters()
]]></system-out>
</testcase>
<testcase name="formatCombinedAccent()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:formatCombinedAccent()]
display-name: formatCombinedAccent()
]]></system-out>
</testcase>
<testcase name="formatWithoutHtmlCharactersReturnsSameString()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatterTest]/[method:formatWithoutHtmlCharactersReturnsSameString()]
display-name: formatWithoutHtmlCharactersReturnsSameString()
]]></system-out>
</testcase>
<testcase name="removeLineFeed()" classname="org.jabref.logic.formatter.bibtexfields.RemoveNewlinesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveNewlinesFormatterTest]/[method:removeLineFeed()]
display-name: removeLineFeed()
]]></system-out>
</testcase>
<testcase name="removeCarriageReturn()" classname="org.jabref.logic.formatter.bibtexfields.RemoveNewlinesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveNewlinesFormatterTest]/[method:removeCarriageReturn()]
display-name: removeCarriageReturn()
]]></system-out>
</testcase>
<testcase name="removeCarriageReturnLineFeed()" classname="org.jabref.logic.formatter.bibtexfields.RemoveNewlinesFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RemoveNewlinesFormatterTest]/[method:removeCarriageReturnLineFeed()]
display-name: removeCarriageReturnLineFeed()
]]></system-out>
</testcase>
<testcase name="testBasic()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:testBasic()]
display-name: testBasic()
]]></system-out>
</testcase>
<testcase name="testHTMLCombiningAccents()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:testHTMLCombiningAccents()]
display-name: testHTMLCombiningAccents()
]]></system-out>
</testcase>
<testcase name="testHTML()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:testHTML()]
display-name: testHTML()
]]></system-out>
</testcase>
<testcase name="testHTMLRemoveTags()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:testHTMLRemoveTags()]
display-name: testHTMLRemoveTags()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="formatMultipleHtmlCharacters()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:formatMultipleHtmlCharacters()]
display-name: formatMultipleHtmlCharacters()
]]></system-out>
</testcase>
<testcase name="formatCombinedAccent()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:formatCombinedAccent()]
display-name: formatCombinedAccent()
]]></system-out>
</testcase>
<testcase name="formatWithoutHtmlCharactersReturnsSameString()" classname="org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatterTest]/[method:formatWithoutHtmlCharactersReturnsSameString()]
display-name: formatWithoutHtmlCharactersReturnsSameString()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.ClearFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.ClearFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="formatReturnsEmptyForSomeString()" classname="org.jabref.logic.formatter.bibtexfields.ClearFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.ClearFormatterTest]/[method:formatReturnsEmptyForSomeString()]
display-name: formatReturnsEmptyForSomeString()
]]></system-out>
</testcase>
<testcase name="formatReturnsEmptyForEmptyString()" classname="org.jabref.logic.formatter.bibtexfields.ClearFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.ClearFormatterTest]/[method:formatReturnsEmptyForEmptyString()]
display-name: formatReturnsEmptyForEmptyString()
]]></system-out>
</testcase>
<testcase name="formatDate0DdotMdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDate0DdotMdotYYYY()]
display-name: formatDate0DdotMdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateMYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateMYY()]
display-name: formatDateMYY()
]]></system-out>
</testcase>
<testcase name="formatDate0Ddot0MdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDate0Ddot0MdotYYYY()]
display-name: formatDate0Ddot0MdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateMMMDCommaYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateMMMDCommaYYYY()]
display-name: formatDateMMMDCommaYYYY()
]]></system-out>
</testcase>
<testcase name="formatDate0MYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDate0MYYYY()]
display-name: formatDate0MYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateDdotMMdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateDdotMMdotYYYY()]
display-name: formatDateDdotMMdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateMYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateMYYYY()]
display-name: formatDateMYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateYYYYM()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateYYYYM()]
display-name: formatDateYYYYM()
]]></system-out>
</testcase>
<testcase name="formatDateMMMDDCommaYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateMMMDDCommaYYYY()]
display-name: formatDateMMMDDCommaYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateMMYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateMMYYYY()]
display-name: formatDateMMYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateMMMCommaYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateMMMCommaYYYY()]
display-name: formatDateMMMCommaYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateDdot0MdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateDdot0MdotYYYY()]
display-name: formatDateDdot0MdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateYYYYMD()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateYYYYMD()]
display-name: formatDateYYYYMD()
]]></system-out>
</testcase>
<testcase name="formatDateYYYYMM()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateYYYYMM()]
display-name: formatDateYYYYMM()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="formatDateDDdotMMdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateDDdotMMdotYYYY()]
display-name: formatDateDDdotMMdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateDDdotMdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateDDdotMdotYYYY()]
display-name: formatDateDDdotMdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateDdotMdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateDdotMdotYYYY()]
display-name: formatDateDdotMdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDateYYYYM0D()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateYYYYM0D()]
display-name: formatDateYYYYM0D()
]]></system-out>
</testcase>
<testcase name="formatDateDDdot0MdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateDDdot0MdotYYYY()]
display-name: formatDateDDdot0MdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatDate0MYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDate0MYY()]
display-name: formatDate0MYY()
]]></system-out>
</testcase>
<testcase name="formatDateMMYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateMMYY()]
display-name: formatDateMMYY()
]]></system-out>
</testcase>
<testcase name="formatDateYYYYMM0D()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDateYYYYMM0D()]
display-name: formatDateYYYYMM0D()
]]></system-out>
</testcase>
<testcase name="formatDate0DdotMMdotYYYY()" classname="org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatterTest]/[method:formatDate0DdotMMdotYYYY()]
display-name: formatDate0DdotMMdotYYYY()
]]></system-out>
</testcase>
<testcase name="formatWithoutUnicodeCharactersReturnsSameString()" classname="org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatterTest]/[method:formatWithoutUnicodeCharactersReturnsSameString()]
display-name: formatWithoutUnicodeCharactersReturnsSameString()
]]></system-out>
</testcase>
<testcase name="formatMultipleUnicodeCharacters()" classname="org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatterTest]/[method:formatMultipleUnicodeCharacters()]
display-name: formatMultipleUnicodeCharacters()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="protectedSpacesNotReplacedInSingleProtectedBlock()" classname="org.jabref.logic.formatter.bibtexfields.RegexFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RegexFormatterTest]/[method:protectedSpacesNotReplacedInSingleProtectedBlock()]
display-name: protectedSpacesNotReplacedInSingleProtectedBlock()
]]></system-out>
</testcase>
<testcase name="escapedBracesAreNotReplacedInTwoCases()" classname="org.jabref.logic.formatter.bibtexfields.RegexFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RegexFormatterTest]/[method:escapedBracesAreNotReplacedInTwoCases()]
display-name: escapedBracesAreNotReplacedInTwoCases()
]]></system-out>
</testcase>
<testcase name="escapedBracesAreNotReplaced()" classname="org.jabref.logic.formatter.bibtexfields.RegexFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RegexFormatterTest]/[method:escapedBracesAreNotReplaced()]
display-name: escapedBracesAreNotReplaced()
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.bibtexfields.RegexFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RegexFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="spacesReplacedCorrectly()" classname="org.jabref.logic.formatter.bibtexfields.RegexFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RegexFormatterTest]/[method:spacesReplacedCorrectly()]
display-name: spacesReplacedCorrectly()
]]></system-out>
</testcase>
<testcase name="escapedBracesAreNotReplacedAndProtectionStillWorks()" classname="org.jabref.logic.formatter.bibtexfields.RegexFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RegexFormatterTest]/[method:escapedBracesAreNotReplacedAndProtectionStillWorks()]
display-name: escapedBracesAreNotReplacedAndProtectionStillWorks()
]]></system-out>
</testcase>
<testcase name="protectedSpacesNotReplacedInTwoProtectedBlocks()" classname="org.jabref.logic.formatter.bibtexfields.RegexFormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.bibtexfields.RegexFormatterTest]/[method:protectedSpacesNotReplacedInTwoProtectedBlocks()]
display-name: protectedSpacesNotReplacedInTwoProtectedBlocks()
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@1f6178a
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@1f29e94
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@1e9cb35
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@b99739
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@12295a3
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@fbb86d
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@1a665a4
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@11029f6
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@202e3a
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@1b1d483
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@1901d54
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@161c949
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@6a6973
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@172c2b6
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@7d0490
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@170698
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@16dc558
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotNull(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@a7c8b1
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@8a1831
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@8bfe7e
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@163bb72
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@1d30b2f
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@1d0c874
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@cdaffe
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@fd21fe
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@128d4fd
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@b22844
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@187c373
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@fef62c
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@10a42f2
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@14e693c
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@cebdef
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@1c26656
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@10f37b
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@f680c
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotNull(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@1ff9ae7
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@1a9b098
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@b08fd
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@18952f8
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@3adc0c
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@9b9623
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@673c6d
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@116a04b
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@1a4db59
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@1606f40
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@5fb215
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@1344ad
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@1ce38e5
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@5e95cb
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@7a8281
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@2994fb
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@171b95d
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@11b94b5
]]></system-out>
</testcase>
<testcase name="getDescriptionAlwaysNonEmpty(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getDescriptionAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@1dd731d
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@139a711
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@18856fa
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@f7cec2
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@ec12da
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@ff35b9
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@15787da
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@17cc12c
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@12c759b
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@dfd33a
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@1c5f06c
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@333759
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@9f19a9
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@3d8866
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@133ecc7
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@1abedd9
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@1dcabed
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@1de7b88
]]></system-out>
</testcase>
<testcase name="getExampleInputAlwaysNonEmpty(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getExampleInputAlwaysNonEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@103e3a0
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@1440b7c
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@197533a
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@1af78fb
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@1ef908d
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@137ae7
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@134f5dc
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@18e3a21
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@6eb4a5
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@1253e8d
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@125ac20
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@1e4cf17
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@3e85d2
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@35f2c7
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@16015a1
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@17a054a
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@1edbf86
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@81c876
]]></system-out>
</testcase>
<testcase name="getNameReturnsNotEmpty(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getNameReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@1e51fda
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@c608f9
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@b93faf
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@11be26d
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@148bdb7
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@1446b7c
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@876ebc
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@a7fa8b
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@6249ed
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@6fc2d6
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@110a369
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@c27e62
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@36ab6
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@793cd
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@1e5c781
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@845ad1
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@1b57567
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@14a1f27
]]></system-out>
</testcase>
<testcase name="formatOfNullThrowsException(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfNullThrowsException(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@340dc0
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@fa9d85
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@ccd70
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@1ca47b1
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@1b20005
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@16eb703
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@1999053
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@bfb75e
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@13c2824
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@1f452ef
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@d8410a
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@10a0548
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@18d6cc5
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@69f0e3
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@1fc9ce3
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@1632cdd
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@ecedae
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@105e4b8
]]></system-out>
</testcase>
<testcase name="formatNotReturnsNull(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatNotReturnsNull(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@7743f
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@92b9e6
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@10cbb07
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@17ca2ba
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@879f26
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@1b957d9
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@1e110aa
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@1d40a1e
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@172d16d
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@3858c5
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@15f6468
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@2c02a7
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@1cc44b6
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@1749250
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@11b9363
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@bf8642
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@14bd570
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@1c37db
]]></system-out>
</testcase>
<testcase name="formatOfEmptyStringReturnsEmpty(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:formatOfEmptyStringReturnsEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@1033cf0
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[1]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#1]
display-name: [1] org.jabref.logic.formatter.casechanger.CapitalizeFormatter@17c3404
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[2]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#2]
display-name: [2] org.jabref.logic.formatter.bibtexfields.ClearFormatter@758c4e
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[3]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#3]
display-name: [3] org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter@130d134
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[4]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#4]
display-name: [4] org.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter@15485de
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[5]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#5]
display-name: [5] org.jabref.logic.formatter.IdentityFormatter@f7e870be
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[6]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#6]
display-name: [6] org.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter@1025164
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[7]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#7]
display-name: [7] org.jabref.logic.layout.format.LatexToUnicodeFormatter@13bb736
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[8]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#8]
display-name: [8] org.jabref.logic.formatter.casechanger.LowerCaseFormatter@491ac1ae
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[9]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#9]
display-name: [9] org.jabref.logic.formatter.minifier.MinifyNameListFormatter@617754
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[10]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#10]
display-name: [10] org.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter@ea21a9a0
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[11]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#11]
display-name: [11] org.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter@15a6cb3
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[12]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#12]
display-name: [12] org.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter@ae88cd
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[13]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#13]
display-name: [13] org.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter@1b19408c
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[14]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#14]
display-name: [14] org.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter@b01e29
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[15]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#15]
display-name: [15] org.jabref.logic.formatter.casechanger.ProtectTermsFormatter@1c212fc
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[16]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#16]
display-name: [16] org.jabref.logic.formatter.bibtexfields.RegexFormatter@1cdccc3
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[17]" classname="org.jabref.logic.formatter.FormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#17]
display-name: [17] org.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter@10cced1
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[18]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#18]
display-name: [18] org.jabref.logic.formatter.casechanger.SentenceCaseFormatter@e277be
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[19]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#19]
display-name: [19] org.jabref.logic.formatter.casechanger.TitleCaseFormatter@1bc01b5
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[20]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#20]
display-name: [20] org.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter@c00afa
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[21]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#21]
display-name: [21] org.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter@12f2035
]]></system-out>
</testcase>
<testcase name="getKeyReturnsNotEmpty(Formatter)[22]" classname="org.jabref.logic.formatter.FormatterTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.FormatterTest]/[test-template:getKeyReturnsNotEmpty(org.jabref.model.cleanup.Formatter)]/[test-template-invocation:#22]
display-name: [22] org.jabref.logic.formatter.casechanger.UpperCaseFormatter@2bfce9
]]></system-out>
</testcase>
<testcase name="formatExample()" classname="org.jabref.logic.formatter.IdentityFormatterTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.logic.formatter.IdentityFormatterTest]/[method:formatExample()]
display-name: formatExample()
]]></system-out>
</testcase>
<testcase name="testExistenceOfIconImagesReferencedFromIconsProperties()" classname="org.jabref.TestIconsProperties" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.jabref.TestIconsProperties]/[method:testExistenceOfIconImagesReferencedFromIconsProperties()]
display-name: testExistenceOfIconImagesReferencedFromIconsProperties()
]]></system-out>
</testcase>
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]
display-name: JUnit Jupiter
]]></system-out>
</testsuite>
